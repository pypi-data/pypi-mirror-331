from .терминал import печать
from .проверка_элиментов import содержит


РАЗДЕЛИТЕЛЬ_ПАР = "___РАЗДЕЛИТЕЛЬ_ПАР___"
РАЗДЕЛИТЕЛЬ_КЛЮЧЕЙ_ОТ_ЗНАЧЕНИЙ = "___РАЗДЕЛИТЕЛЬ_КЛЮЧЕЙ_ОТ_ЗНАЧЕНИЙ___"




def записать_в_файл(путь: str, текст: str):
    with open(путь, "w", encoding="utf-8") as file:
        file.write(текст)
    # r - read - чтение
    # w - write - запись
    # a - add - добавление

def считать_из_файла(путь: str):
    with open(путь, "r", encoding="utf-8") as file:
        return file.read()

def преобразовать_словарь_в_текст(словарь: dict):
    if содержит(
        что=[РАЗДЕЛИТЕЛЬ_КЛЮЧЕЙ_ОТ_ЗНАЧЕНИЙ, РАЗДЕЛИТЕЛЬ_ПАР],
        где=list(словарь.values())
    ):
        
        raise ValueError(печать(
            "в одном из значений словаря найден разделитель",
            красный=True,
            не_печатоть=True
        ))
    результат = ""
    for ключ, значение in словарь.items():
        # если разделитель всиречаеться в одном из значений словоря то выдать ошибку в одном из значений словаря содержиться разделитель
        пара_в_тексте = f"{ключ}{РАЗДЕЛИТЕЛЬ_КЛЮЧЕЙ_ОТ_ЗНАЧЕНИЙ}{значение}"
        результат += пара_в_тексте + (РАЗДЕЛИТЕЛЬ_ПАР)
    результат = результат[:-len(РАЗДЕЛИТЕЛЬ_ПАР)]
    return результат
    
def записать_словари_в_файл(путь: str, список_словарей: list) -> None:
    общий_результат = ""
    for словарь in список_словарей:
        результат = преобразовать_словарь_в_текст(словарь)
        общий_результат += результат + "\n"
        # особый символ дляф завершения обзадца
        # всё что будет написано после него будет перенесено а следующий абзац
    записать_в_файл(путь, общий_результат)

def считать_словари_из_файлов(путь: str) -> list:
    текст = считать_из_файла(путь)
    список_словарей = []
    for строка in текст.splitlines():
        пары = строка.split(РАЗДЕЛИТЕЛЬ_ПАР)
        словарь = {}
        for пара in пары:
            ключ_и_значение = пара.split(РАЗДЕЛИТЕЛЬ_КЛЮЧЕЙ_ОТ_ЗНАЧЕНИЙ)
            if len(ключ_и_значение) != 2:
                return []
            ключ, значение = ключ_и_значение
            словарь[ключ] = значение
        список_словарей.append(словарь)

    return список_словарей

if __name__ == "__main__":
# виндоус разбивает путь к файлу на папки с помощью дроби \
# питон воспринимает этото символ как специальный и ожидает после него дополнительный спец символ
# поэтому если просто скопировать путь виндоуса к файлу питон вылетит с ошибкой
# что бы этого не допустить надо либо везде проставить двойные дроби в место одинарных
# либо до ковычки поставить букву r, но тогда не получиться использовать f строку
    путь = "C:\\Users\\2024.09 Пайтон\\Desktop\\Ученики\\gg\\pogoda\\файл из питона.txt"
    текст = "рандомная чушь от #########"
# записать_в_файл(путь, текст)
# текст_из_файла = считать_на_файл(путь)
# print(текст_из_файла == текст)



    список_словарей = [{
        "имя": "Ник___:___ита",
        "фамилия": "Тарасов",
        "должность": "Преподователь",
        "возраст": "35"
    },{
        "имя": "Дитррий",
        "фамилия": "Кисилев",
        "должность": "ученик",
        "возраст": "15"
    }]
    записать_словари_в_файл(путь, список_словарей)
    резулитат = считать_словари_из_файлов(путь)
    print()
    print(резулитат == список_словарей)