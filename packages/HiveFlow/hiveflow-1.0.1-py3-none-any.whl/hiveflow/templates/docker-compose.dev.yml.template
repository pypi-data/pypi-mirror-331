version: '3.8'

services:
  # Development services with additional debugging and volume mounts

  # Core storage services
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: hiveflow
      POSTGRES_PASSWORD: hiveflow_password
      POSTGRES_DB: hiveflow_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hiveflow -d hiveflow_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hiveflow_network

  redis:
    image: redis:7
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hiveflow_network

  # Coordinator service with volume mount for development
  coordinator:
    build:
      context: ..
      dockerfile: ./docker/coordinator/Dockerfile
    volumes:
      - ../src:/app/src  # Mount source code for development
      - ../logs:/app/logs
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=hiveflow
      - POSTGRES_PASSWORD=hiveflow_password
      - POSTGRES_DB=hiveflow_db
      - LOG_LEVEL=DEBUG
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"  # API port
    networks:
      - hiveflow_network
    restart: unless-stopped
    command: ["python", "-m", "uvicorn", "src.{{ project_name.replace('-', '_') }}.coordinator:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Web monitoring interface with volume mount for development
  monitor:
    build:
      context: ..
      dockerfile: ./docker/monitor/Dockerfile
    volumes:
      - ../src:/app/src  # Mount source code for development
      - ../logs:/app/logs
    environment:
      - COORDINATOR_HOST=coordinator
      - COORDINATOR_PORT=8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=hiveflow
      - POSTGRES_PASSWORD=hiveflow_password
      - POSTGRES_DB=hiveflow_db
      - LOG_LEVEL=DEBUG
    depends_on:
      - coordinator
    ports:
      - "8080:8080"  # Web UI port
    networks:
      - hiveflow_network
    restart: unless-stopped
    command: ["python", "-m", "uvicorn", "src.{{ project_name.replace('-', '_') }}.monitor:app", "--host", "0.0.0.0", "--port", "8080", "--reload"]

  # Worker service with volume mount for development
  worker:
    build:
      context: ..
      dockerfile: ./docker/worker/Dockerfile
    volumes:
      - ../src:/app/src  # Mount source code for development
      - ../logs:/app/logs
    environment:
      - COORDINATOR_HOST=coordinator
      - COORDINATOR_PORT=8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=DEBUG
      - WORKER_ID=dev-worker-1
    depends_on:
      - coordinator
    networks:
      - hiveflow_network
    restart: unless-stopped
    command: ["python", "-m", "src.{{ project_name.replace('-', '_') }}.worker", "--debug"]

networks:
  hiveflow_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
