# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import typing_extensions
from ..core.serialization import FieldMetadata
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class Session(UniversalBaseModel):
    id: typing.Optional[str] = None
    user_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="userId")] = None
    revoked: typing.Optional[bool] = None
    create_time: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="createTime")] = None
    last_active_time: typing_extensions.Annotated[
        typing.Optional[dt.datetime], FieldMetadata(alias="lastActiveTime")
    ] = None
    expire_time: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="expireTime")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
