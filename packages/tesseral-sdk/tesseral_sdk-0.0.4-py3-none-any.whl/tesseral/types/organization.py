# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import typing_extensions
from ..core.serialization import FieldMetadata
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class Organization(UniversalBaseModel):
    id: typing.Optional[str] = None
    display_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="displayName")] = None
    create_time: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="createTime")] = None
    update_time: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="updateTime")] = None
    log_in_with_google: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="logInWithGoogle")] = (
        None
    )
    log_in_with_microsoft: typing_extensions.Annotated[
        typing.Optional[bool], FieldMetadata(alias="logInWithMicrosoft")
    ] = None
    log_in_with_email: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="logInWithEmail")] = None
    log_in_with_password: typing_extensions.Annotated[
        typing.Optional[bool], FieldMetadata(alias="logInWithPassword")
    ] = None
    log_in_with_saml: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="logInWithSaml")] = None
    log_in_with_authenticator_app: typing_extensions.Annotated[
        typing.Optional[bool], FieldMetadata(alias="logInWithAuthenticatorApp")
    ] = None
    log_in_with_passkey: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="logInWithPasskey")] = (
        None
    )
    require_mfa: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="requireMfa")] = None
    scim_enabled: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="scimEnabled")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
