# coding: utf-8

"""
    NetSuite REST API

    NetSuite REST Record API generated 2023-01-18 at 19:40:11 UTC for account 472052, user will@theapiguys.com with role Keap Integration.  # noqa: E501

    OpenAPI spec version: v1
    Contact: info@netsuite.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class Customer(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'custentity_mm_stopsendingsms': 'bool',
        'custentityinterested_sol_pv': 'bool',
        'last_sale_date': 'date',
        'custentityent_fod': 'date',
        'custentityrecord_start_date': 'date',
        'custentity_nibe_hp_parts_discount': 'float',
        'consol_balance': 'float',
        'custentity_sol_qual_details': 'str',
        'overdue_balance': 'float',
        'custentity_credit_contact': 'str',
        'custentity_ri_training_note': 'str',
        'custentity_ri_cust_service_rating': 'int',
        'custentityinterested_rwh': 'bool',
        'custentity_credit_application_form': 'str',
        'custentity_ff_sc_entity_ita_apy_code': 'str',
        'opening_balance': 'float',
        'custentity_training_info_reqd': 'str',
        'custentity_towel_rail_disc': 'float',
        'password2': 'str',
        'custentity_creditholdoverride': 'str',
        'custentity_mcs_cert_reqd': 'bool',
        'custentity_tax_contact_last': 'str',
        'last_order_date': 'date',
        'custentity_mm_iskeylinkentity': 'bool',
        'custentity_email_trade_short': 'bool',
        'custentity_po_required': 'bool',
        'custentitycustentity_mcs_app_sentdate': 'date',
        'custentity_mm_iskeylinkprospect': 'bool',
        'custentity_geographical_cover': 'str',
        'custentity_ico': 'str',
        'custentity_entity_latitude': 'float',
        'aging': 'float',
        'symbol_placement': 'CustomerSymbolPlacement',
        'custentity_bb1_googlemap': 'str',
        'custentity_quote_required': 'date',
        'custentity_in_enq_ufh_volume': 'str',
        'external_id': 'str',
        'custentity_gdpr_offers_consent': 'bool',
        'custentity_erpff_p2p_basw_tax_id': 'str',
        'language': 'CustomerLanguage',
        'consol_unbilled_orders': 'float',
        'custentity_sfa_assigned_time': 'datetime',
        'custentity_g3_hws_qualification_yn': 'bool',
        'consol_aging': 'float',
        'consol_deposit_balance': 'float',
        'mobile_phone': 'str',
        'custentity_solar_discount': 'float',
        'custentity_em_discount': 'float',
        'custentity_onezone_discount': 'float',
        'alt_phone': 'str',
        'custentity_perf_survey_sent': 'date',
        'custentity_in_enq_core_work': 'str',
        'first_order_date': 'date',
        'fax_transactions': 'bool',
        'custentity_ga_url': 'str',
        'custentityniceic_accreditation_date': 'date',
        'salutation': 'str',
        'custentity_hp_instll_prev_yn': 'bool',
        'custentity_training_needs': 'bool',
        'custentity_solar_training': 'str',
        'custentity_notes_created': 'bool',
        'home_phone': 'str',
        'custentity_cis_hmrc_tax': 'float',
        'custentity_mm_smsreplystatus': 'str',
        'custentity_comm_install_partner': 'bool',
        'title': 'str',
        'custentity_customer_requirements': 'str',
        'shipping_carrier': 'CustomerShippingCarrier',
        'custentity_initial_site_address_backup': 'str',
        'custentity8': 'str',
        'custentity_dl_sales_rep_bcc': 'bool',
        'custentity6': 'str',
        'custentity7': 'str',
        'custentity_ri_pl_expiry': 'date',
        'custentity_resubscribestatus': 'str',
        'custentity_init_enq_notes': 'str',
        'custentity_future_of_business': 'str',
        'custentity_course_comments': 'str',
        'custentity_average_monthly_spend': 'str',
        'custentity_would_recommend_comments': 'str',
        'send_email': 'bool',
        'custentity_3805_dunning_letters_toprint': 'bool',
        'custentity_ri_sales_rating': 'int',
        'custentity_gdpr_newsletter_consent': 'date',
        'custentity_ufh_approv_trng_details': 'str',
        'custentity_profile_eceived': 'date',
        'custentityinterested_ufh': 'bool',
        'custentity_qualification_backup': 'str',
        'third_party_country': 'CustomeraddressBookaddressBookAddressCountry',
        'custentity_top_cust_job': 'bool',
        'custentity_cis_hmrc_varify': 'str',
        'custentity_credit_insurance_backup': 'str',
        'balance': 'float',
        'custentity_lead_mining_priority': 'bool',
        'custentity5': 'float',
        'id': 'str',
        'custentity1': 'str',
        'custentity_cis_name': 'str',
        'custentity_mcs_gshp': 'bool',
        'custentity_housebuilder_contacts': 'str',
        'custentity_3805_last_dunning_letter_sent': 'datetime',
        'custentity_reg_screeder': 'bool',
        'custentity_invoiceemail': 'str',
        'custentity_water_regs_1999': 'bool',
        'alcohol_recipient_type': 'CustomerAlcoholRecipientType',
        'custentity_oz_installer': 'bool',
        'custentity_ri_technical_rating': 'int',
        'company_name': 'str',
        'default_address': 'str',
        'custentity_ga_client_id': 'str',
        'custentitysolar_trng_yn': 'bool',
        'custentity_gdpr_contact_consent': 'bool',
        'custentity_cust_last_contact': 'date',
        'custentity_mcs_membership': 'bool',
        'custentity_pv_installed_before': 'bool',
        'custentity_other_electrical': 'str',
        'custentity_released_unbilledorders': 'float',
        'custentity_ufh_disc': 'float',
        'custentity_tech_finance_note': 'str',
        'custentity_erpff_p2p_auto_send_document': 'bool',
        'custentity_mcs_joining_pack_sent': 'date',
        'custentity_gdpr_mailchimp_reconsent': 'str',
        'custentity_legacy_num': 'str',
        'custentity_cust_vat_rate': 'float',
        'custentitycust_sys_dep': 'float',
        'custentity_enquiry_site_add': 'str',
        'custentity_hp_approv_trng_yn': 'bool',
        'custentityinterested_training': 'bool',
        'custentity_17th_edition': 'bool',
        'custentity_lastsystemsaledate': 'date',
        'custentity_solar_instll_prev_yn': 'bool',
        'url': 'str',
        'custentity_field_sales_managed': 'bool',
        'auto_name': 'bool',
        'custentity_cv_dob': 'date',
        'ship_complete': 'bool',
        'third_party_carrier': 'CustomerThirdPartyCarrier',
        'custentity_in_enq_mcs': 'str',
        'custentity_emcs_vouchers_issued': 'int',
        'custentity_in_enq_projects': 'str',
        'custentity_comm_pref_email': 'bool',
        'custentitytop_customer': 'bool',
        'custentity_printed_inv_state': 'bool',
        'custentity_ga_medium': 'str',
        'custentityplans_available': 'bool',
        'unbilled_orders': 'float',
        'custentity_3805_dunning_letters_toemail': 'bool',
        'custentity_department': 'str',
        'custentity_salesteamupdatestatus': 'str',
        'custentity_service_partner': 'bool',
        'custentity_outstanding': 'float',
        'custentity_ga_source': 'str',
        'custentitycredit_insurance_detail': 'str',
        'custentity_gshp_installer': 'bool',
        'override_currency_format': 'bool',
        'custentity_build_stage_score': 'float',
        'custentity_not_using_nh_comments': 'str',
        'custentity_tax_contact_first': 'str',
        'custentity_gdpr': 'str',
        'is_inactive': 'bool',
        'custentity_number_of_floors': 'float',
        'custentity_pv_qual_details': 'str',
        'custentity_profile_sent': 'bool',
        'custentity_cust_first_quote_fu': 'bool',
        'custentity_cust_next_contact': 'date',
        'negative_number_format': 'CustomerNegativeNumberFormat',
        'custentity_fc_disc': 'float',
        'custentity_health_safety_man_hdling': 'bool',
        'comments': 'str',
        'account_number': 'str',
        'consol_days_overdue': 'int',
        'custentity_sol_installer': 'bool',
        'reminder_days': 'int',
        'last_modified_date': 'datetime',
        'print_transactions': 'bool',
        'custentity_bb1_googlemap_2': 'str',
        'custentity_po_document_req': 'bool',
        'custentity_co_mailing_dear': 'str',
        'custentity_in_enq_ufhexp': 'str',
        'custentity_dic': 'str',
        'custentity_sfa_reassign': 'bool',
        'custentity_our_reference': 'str',
        'custentity_eff_fw_kvk_number': 'str',
        'custentity_comm_pref_sms': 'bool',
        'custentity_trainer_rating': 'int',
        'custentity_cis_utr': 'str',
        'start_date': 'date',
        'custentity_other_tech_quals': 'str',
        'custentity_ashp_installer': 'bool',
        'password': 'str',
        'custentityhp_approv_trng_details': 'str',
        'custentity_ri_oftec_reg': 'bool',
        'custentity_day_of_week': 'str',
        'custentity_fin_spec_reqmts': 'str',
        'custentity_ufh_qual_details': 'str',
        'custentity_erpff_p2p_party_endp_sch_id': 'str',
        'third_party_zip_code': 'str',
        'custentity_in_enq_max_contract': 'float',
        'custentity_neceic_scheme_yn': 'bool',
        'date_created': 'datetime',
        'custentity_in_enq_competitors': 'str',
        'custentity_nibe_vip': 'bool',
        'custentity_ga_gclid': 'str',
        'custentity_rwh_disc': 'float',
        'custentity_2663_direct_debit': 'bool',
        'custentity_2_photographs': 'bool',
        'custentity_mm_lastsmsmessage': 'str',
        'custentity_spec_care': 'bool',
        'custentity_in_enq_project_info': 'str',
        'custentity_health_safety_heights': 'bool',
        'consol_aging4': 'float',
        'consol_aging3': 'float',
        'consol_aging2': 'float',
        'consol_aging1': 'float',
        'custentity_ufh_instll_prev_yn': 'bool',
        'custentity_pv_qual': 'bool',
        'custentity_joined_inst_network': 'date',
        'custentity_living_with_nuheat': 'bool',
        'custentity_uln': 'str',
        'email': 'str',
        'custentity_photo_recd': 'bool',
        'custentity_exc_lead_count': 'bool',
        'custentity_ga_campaign': 'str',
        'deposit_balance': 'float',
        'custentity_entity_longitude': 'float',
        'custentity_pv_systems': 'str',
        'first_sale_date': 'date',
        'custom_form': 'CustomerCustomForm',
        'custentity_cust_cat_type': 'str',
        'custentity_in_enq_comp_size': 'str',
        'custentity_reg_ins': 'bool',
        'custentity_hp_disc': 'float',
        'custentity_sales_rep_photo_url': 'str',
        'custentity_discount_lettertype': 'str',
        'entity_id': 'str',
        'custentity_mi_lead_closed': 'date',
        'email_preference': 'CustomerEmailPreference',
        'custentity_med_diet_spec_req': 'str',
        'custentity_number_of_units': 'int',
        'custentity_sfa_allocated': 'bool',
        'custentity_first_enq_date': 'date',
        'custentity_comp_reg_no': 'str',
        'custentity_housebuilder_contacts_backup': 'str',
        'custentity_hp_installer': 'bool',
        'custentity_ph_nvq3': 'bool',
        'custentity_prospect_date': 'date',
        'search_stage': 'str',
        'custentity_plans_available': 'bool',
        'resale_number': 'str',
        'custentity_ph_nvq2': 'bool',
        'custentity_send_emp_sms': 'bool',
        'alt_email': 'str',
        'custentity_mcs_solar': 'bool',
        'custentity_feedback_completed': 'bool',
        'custentity_gdpr_contact_email': 'date',
        'first_name': 'str',
        'custentity_health_safety_coshh': 'bool',
        'custentity_sales_rep_title_test': 'str',
        'custentity_nat_ins': 'str',
        'default_shipping_address': 'str',
        'give_access': 'bool',
        'aging2': 'float',
        'aging3': 'float',
        'aging1': 'float',
        'custentityka_ranking': 'int',
        'aging4': 'float',
        'consol_overdue_balance': 'float',
        'custentity_cc_action': 'str',
        'custentity_in_enq_client_profile': 'str',
        'custentity_send_emp_email': 'bool',
        'middle_name': 'str',
        'custentity_learning_needs': 'str',
        'custentity_3805_dunning_paused': 'bool',
        'custentity_last_statement_sent': 'date',
        'days_overdue': 'int',
        'custentity_in_enq_working_with': 'str',
        'custentity_qualtextbox': 'str',
        'credit_limit': 'float',
        'custentity_lm_contact_details': 'str',
        'custentity_national_ins_no': 'str',
        'custentity_erpff_p2p_party_endpoint_id': 'str',
        'email_transactions': 'bool',
        'print_on_check_as': 'str',
        'custentityka_type': 'str',
        'custentity_mcs_ashp': 'bool',
        'fax': 'str',
        'custentity_solar_trng_details': 'str',
        'custentity_subregion_check': 'bool',
        'last_name': 'str',
        'custentitydl_expiry': 'date',
        'custentity_prequote_call': 'str',
        'custentityinterested_solar': 'bool',
        'end_date': 'date',
        'custentity_mm_lastoptinkeyword': 'str',
        'custentity_ri_pl_limit': 'float',
        'custentity_optin_date': 'date',
        'phone': 'str',
        'custentity_pr_link': 'str',
        'custentity_as_hwl_disc': 'float',
        'custentity_erpff_p2p_party_endp_op_id': 'str',
        'custentity_sales_rep_title': 'str',
        'custentity_signature_image': 'str',
        'custentity_2663_customer_refund': 'bool',
        'custentity_neceic_qualifications': 'str',
        'custentity_conf_2yrs_indexp': 'bool',
        'is_person': 'bool',
        'opening_balance_date': 'date',
        'custentity_account_opened': 'date',
        'custentity_tax_contact_middle': 'str',
        'custentity_ufh_discount': 'float',
        'custentity_bdm_exclude': 'bool',
        'number_format': 'CustomerNumberFormat',
        'custentity_ufh_approv_training': 'bool',
        'custentity_ufh_installer': 'bool',
        'custentity_open_opps_count': 'int',
        'is_budget_approved': 'bool',
        'custentity_in_enq_local': 'str',
        'custentity_ri_score': 'str',
        'custentity_test_entity': 'bool',
        'custentity_credit_insturance': 'float',
        'custentity_pre_requisites_certs': 'bool',
        'custentity_sales_rep_dd': 'str',
        'custentity_sales_camp_target': 'bool',
        'custentity_ri_finance_rating': 'int',
        'custentity_mcs_number': 'str',
        'custentity_gdpr_mc_reconsent_2': 'str',
        'global_subscription_status': 'CustomerGlobalSubscriptionStatus',
        'default_order_priority': 'float',
        'custentity_hp_qual_details': 'str',
        'custentity_website_qr_number': 'str',
        'custentity_voucher_registered': 'bool',
        'custentity_in_enq_future': 'str',
        'third_party_acct': 'str',
        'custentity_co_mailing_name': 'str',
        'custentity_fsm': 'str',
        'custentity_training_needs_detail': 'str',
        'custentity_project_score': 'float',
        'estimated_budget': 'float',
        'custentityent_mobile_phone': 'str',
        'custentity_discretionary_limit': 'bool',
        'custentity_in_enq_tech_installed': 'str',
        'custentity_3805_exclude_comp_email': 'bool',
        'custentity_2663_email_address_notif': 'str',
        'custentity_build_start_date': 'date',
        'custentity_keyaccount': 'bool',
        'custentity_alt_phone': 'str',
        'custentity_dob': 'date',
        'custentity_additonal_notes_backup': 'str',
        'display_symbol': 'str',
        'custentity_sales_rep_email': 'str',
        'custentityinterested_hp': 'bool',
        'custentity_no_engineers': 'int',
        'custentity_erpff_p2p_basw_tax_scheme_id': 'str',
        'custentity_ri_partp_reg': 'bool',
        'ref_name': 'str',
        'links': 'list[NsLink]',
        'custentityent_bestcontact': 'NsResource',
        'custentity_field_sales_rep': 'NsResource',
        'contact_roles': 'CustomerContactRolesCollection',
        'custentity_water_regulations_1999': 'OneOfcustomerCustentityWaterRegulations1999',
        'contact': 'Contact',
        'custentity_3805_dunning_status': 'NsResource',
        'custentity_tax_contact': 'Contact',
        'custentity_ethnic_group': 'NsResource',
        'custentity_gdpr_contact_post': 'NsResource',
        'custentity_sol_course_attended': 'OneOfcustomerCustentitySolCourseAttended',
        'custentity_hp_course_attended': 'OneOfcustomerCustentityHpCourseAttended',
        'custentity_mktg_web_review': 'NsResource',
        'custentity_sub_region': 'NsResource',
        'custentity_cust_sol_competitor': 'NsResourceCollection',
        'custentity_gdpr_contact_phone': 'NsResource',
        'default_bank_account': 'NsResource',
        'custentity_9572_ddcust_entitybnkformat': 'NsResource',
        'custentity_3805_dunning_substatus': 'NsResource',
        'custentity_further_training_offer': 'NsResourceCollection',
        'receivables_account': 'NsResource',
        'sales_readiness': 'NsResource',
        'custentity_9997_dd_file_format': 'NsResource',
        'custentity_sol_volume_per_annum': 'NsResource',
        'custentity_mkt_category': 'NsResource',
        'group_pricing': 'CustomerGroupPricingCollection',
        'pref_cc_processor': 'NsResource',
        'custentityent_building_type': 'NsResource',
        'sales_rep': 'NsResource',
        'custentity_would_recommend': 'NsResource',
        'custentity_building_stage': 'NsResource',
        'shipping_item': 'NsResource',
        'opening_balance_account': 'NsResource',
        'subsidiary': 'NsResource',
        'custentity_cust_cat': 'NsResource',
        'custentity_energy_eff_attended': 'OneOfcustomerCustentityEnergyEffAttended',
        'territory': 'NsResource',
        'custentity_ff_sc_entity_ita_pay_term': 'NsResource',
        'custentity_design_resp': 'NsResource',
        'custentity_ff_sc_bank_details': 'NsResource',
        'custentity_heat_source': 'NsResource',
        'entity_status': 'NsResource',
        'custentity_enquiry_no_of_floors': 'NsResourceCollection',
        'custentity_initial_enq_glazing': 'NsResource',
        'billing_rate_card': 'NsResource',
        'custentity_mcs_status': 'NsResource',
        'custentity_hitachi_course_attended': 'OneOfcustomerCustentityHitachiCourseAttended',
        'custentity_enquiry_loft_insulation': 'NsResource',
        'custentity_3805_dunning_procedure': 'NsResource',
        'custentity_cust_ashp_competitor': 'NsResourceCollection',
        'custentity_type_of_discount': 'NsResource',
        'custentity_9572_refcust_entitybnkformat': 'NsResource',
        'custentity_not_using_nh': 'NsResource',
        'custentity_recently_seen_an_ad': 'NsResource',
        'custentity_ashp_volume_per_annum': 'NsResource',
        'custentity_heat_pump_training': 'NsResource',
        'custentity_dietry_requirements': 'NsResource',
        'custentity_9572_dd_file_format': 'NsResource',
        'address_book': 'CustomerAddressBookCollection',
        'custentity_emp_letter_sig': 'NsResource',
        'custentity_lead_mining_category': 'NsResource',
        'campaigns': 'CustomerCampaignsCollection',
        'custentity_best_contact_time': 'NsResourceCollection',
        'buying_reason': 'NsResource',
        'custentity_enquiry_wall_insulation': 'NsResource',
        'custentity_marketing_source': 'NsResource',
        'custentity_cust_department': 'NsResource',
        'custentity_3805_dunning_level': 'NsResource',
        'terms': 'NsResource',
        'custentity_cust_instll_training': 'NsResource',
        'custentity_cust_gshp_competitor': 'NsResourceCollection',
        'custentitymcs_rating': 'NsResource',
        'custentity_enquiry_product_interest': 'NsResourceCollection',
        'custentity_lm_lead_miner': 'NsResource',
        'custentityri_market_sector': 'NsResourceCollection',
        'custentity_mm_lastsmssentby': 'NsResource',
        'custentity_3805_last_dunning_result': 'NsResource',
        'custentity_web_category': 'NsResource',
        'custentity_rwh_volume_per_annum': 'NsResource',
        'custentity_in_enq_linked_customers': 'CustomerCollection',
        'partner': 'NsResource',
        'custentity_contact_details': 'Contact',
        'custentity_cust_rwh_competitor': 'NsResourceCollection',
        'custentity_cus_follow_up': 'NsResource',
        'custentity_9572_refundcust_entitybnk_sub': 'NsResource',
        'category': 'NsResource',
        'custentity_gdpr_contact_text': 'NsResource',
        'source_web_site': 'NsResource',
        'custentity_gdpr_newsletter_req': 'NsResource',
        'custentity_type_of_scheme': 'NsResource',
        'custentity_ufh_volume_per_annum': 'NsResource',
        'custentity_sub_category': 'NsResource',
        'custentity_show_ticket': 'NsResource',
        'assigned_web_site': 'NsResource',
        'custentity_course_attended': 'OneOfcustomerCustentityCourseAttended',
        'custentity_mcs_technology': 'NsResourceCollection',
        'campaign_category': 'NsResource',
        'custentity12': 'NsResource',
        'lead_source': 'NsResource',
        'custentity10': 'NsResource',
        'custentity_travel_distance': 'NsResource',
        'custentity_gshp_volume_per_annum': 'NsResource',
        'custentity_cust_ufh_competitor': 'NsResourceCollection',
        'custentityent_fo_rep': 'NsResource',
        'item_pricing': 'CustomerItemPricingCollection',
        'custentity_lead_qualifier': 'NsResource',
        'custentity_cust_com_acc_man': 'NsResource',
        'buying_time_frame': 'NsResource',
        'custentity_erpff_p2p_party_endp_scheme': 'NsResource',
        'custentity_unvent_hot_water_g3': 'OneOfcustomerCustentityUnventHotWaterG3',
        'custentity_3805_dunning_manager': 'NsResource',
        'campaign_event': 'NsResource',
        'custentity_sfa_assigned': 'NsResource',
        'custentity_pv_course_atteneded': 'OneOfcustomerCustentityPvCourseAtteneded',
        'custentity_number_emp': 'NsResource',
        'custentity_9572_custref_file_format': 'NsResource',
        'contact_list': 'ContactCollection',
        'custentity_enquiry_floor_insulation': 'NsResource',
        'custentity_mcs_scheme_provider': 'NsResource',
        'currency': 'NsResource',
        'parent': 'Customer',
        'custentity_cust_project_engineer': 'NsResource',
        'custentity_erpff_p2p_basw_tax_scheme': 'NsResource',
        'price_level': 'NsResource',
        'image': 'NsResource',
        'custentity_scope_of_business': 'NsResource',
        'custentity_9572_ddcust_entitybank_sub': 'NsResource',
        'custentity_website_existing': 'NsResource'
    }

    attribute_map = {
        'custentity_mm_stopsendingsms': 'custentity_mm_stopsendingsms',
        'custentityinterested_sol_pv': 'custentityinterested_sol_pv',
        'last_sale_date': 'lastSaleDate',
        'custentityent_fod': 'custentityent_fod',
        'custentityrecord_start_date': 'custentityrecord_start_date',
        'custentity_nibe_hp_parts_discount': 'custentity_nibe_hp_parts_discount',
        'consol_balance': 'consolBalance',
        'custentity_sol_qual_details': 'custentity_sol_qual_details',
        'overdue_balance': 'overdueBalance',
        'custentity_credit_contact': 'custentity_credit_contact',
        'custentity_ri_training_note': 'custentity_ri_training_note',
        'custentity_ri_cust_service_rating': 'custentity_ri_cust_service_rating',
        'custentityinterested_rwh': 'custentityinterested_rwh',
        'custentity_credit_application_form': 'custentity_credit_application_form',
        'custentity_ff_sc_entity_ita_apy_code': 'custentity_ff_sc_entity_ita_apy_code',
        'opening_balance': 'openingBalance',
        'custentity_training_info_reqd': 'custentity_training_info_reqd',
        'custentity_towel_rail_disc': 'custentity_towel_rail_disc',
        'password2': 'password2',
        'custentity_creditholdoverride': 'custentity_creditholdoverride',
        'custentity_mcs_cert_reqd': 'custentity_mcs_cert_reqd',
        'custentity_tax_contact_last': 'custentity_tax_contact_last',
        'last_order_date': 'lastOrderDate',
        'custentity_mm_iskeylinkentity': 'custentity_mm_iskeylinkentity',
        'custentity_email_trade_short': 'custentity_email_trade_short',
        'custentity_po_required': 'custentity_po_required',
        'custentitycustentity_mcs_app_sentdate': 'custentitycustentity_mcs_app_sentdate',
        'custentity_mm_iskeylinkprospect': 'custentity_mm_iskeylinkprospect',
        'custentity_geographical_cover': 'custentity_geographical_cover',
        'custentity_ico': 'custentity_ico',
        'custentity_entity_latitude': 'custentity_entity_latitude',
        'aging': 'aging',
        'symbol_placement': 'symbolPlacement',
        'custentity_bb1_googlemap': 'custentity_bb1_googlemap',
        'custentity_quote_required': 'custentity_quote_required',
        'custentity_in_enq_ufh_volume': 'custentity_in_enq_ufh_volume',
        'external_id': 'externalId',
        'custentity_gdpr_offers_consent': 'custentity_gdpr_offers_consent',
        'custentity_erpff_p2p_basw_tax_id': 'custentity_erpff_p2p_basw_tax_id',
        'language': 'language',
        'consol_unbilled_orders': 'consolUnbilledOrders',
        'custentity_sfa_assigned_time': 'custentity_sfa_assigned_time',
        'custentity_g3_hws_qualification_yn': 'custentity_g3_hws_qualification_yn',
        'consol_aging': 'consolAging',
        'consol_deposit_balance': 'consolDepositBalance',
        'mobile_phone': 'mobilePhone',
        'custentity_solar_discount': 'custentity_solar_discount',
        'custentity_em_discount': 'custentity_em_discount',
        'custentity_onezone_discount': 'custentity_onezone_discount',
        'alt_phone': 'altPhone',
        'custentity_perf_survey_sent': 'custentity_perf_survey_sent',
        'custentity_in_enq_core_work': 'custentity_in_enq_core_work',
        'first_order_date': 'firstOrderDate',
        'fax_transactions': 'faxTransactions',
        'custentity_ga_url': 'custentity_ga_url',
        'custentityniceic_accreditation_date': 'custentityniceic_accreditation_date',
        'salutation': 'salutation',
        'custentity_hp_instll_prev_yn': 'custentity_hp_instll_prev_yn',
        'custentity_training_needs': 'custentity_training_needs',
        'custentity_solar_training': 'custentity_solar_training',
        'custentity_notes_created': 'custentity_notes_created',
        'home_phone': 'homePhone',
        'custentity_cis_hmrc_tax': 'custentity_cis_hmrc_tax',
        'custentity_mm_smsreplystatus': 'custentity_mm_smsreplystatus',
        'custentity_comm_install_partner': 'custentity_comm_install_partner',
        'title': 'title',
        'custentity_customer_requirements': 'custentity_customer_requirements',
        'shipping_carrier': 'shippingCarrier',
        'custentity_initial_site_address_backup': 'custentity_initial_site_address_backup',
        'custentity8': 'custentity8',
        'custentity_dl_sales_rep_bcc': 'custentity_dl_sales_rep_bcc',
        'custentity6': 'custentity6',
        'custentity7': 'custentity7',
        'custentity_ri_pl_expiry': 'custentity_ri_pl_expiry',
        'custentity_resubscribestatus': 'custentity_resubscribestatus',
        'custentity_init_enq_notes': 'custentity_init_enq_notes',
        'custentity_future_of_business': 'custentity_future_of_business',
        'custentity_course_comments': 'custentity_course_comments',
        'custentity_average_monthly_spend': 'custentity_average_monthly_spend',
        'custentity_would_recommend_comments': 'custentity_would_recommend_comments',
        'send_email': 'sendEmail',
        'custentity_3805_dunning_letters_toprint': 'custentity_3805_dunning_letters_toprint',
        'custentity_ri_sales_rating': 'custentity_ri_sales_rating',
        'custentity_gdpr_newsletter_consent': 'custentity_gdpr_newsletter_consent',
        'custentity_ufh_approv_trng_details': 'custentity_ufh_approv_trng_details',
        'custentity_profile_eceived': 'custentity_profile_eceived',
        'custentityinterested_ufh': 'custentityinterested_ufh',
        'custentity_qualification_backup': 'custentity_qualification_backup',
        'third_party_country': 'thirdPartyCountry',
        'custentity_top_cust_job': 'custentity_top_cust_job',
        'custentity_cis_hmrc_varify': 'custentity_cis_hmrc_varify',
        'custentity_credit_insurance_backup': 'custentity_credit_insurance_backup',
        'balance': 'balance',
        'custentity_lead_mining_priority': 'custentity_lead_mining_priority',
        'custentity5': 'custentity5',
        'id': 'id',
        'custentity1': 'custentity1',
        'custentity_cis_name': 'custentity_cis_name',
        'custentity_mcs_gshp': 'custentity_mcs_gshp',
        'custentity_housebuilder_contacts': 'custentity_housebuilder_contacts',
        'custentity_3805_last_dunning_letter_sent': 'custentity_3805_last_dunning_letter_sent',
        'custentity_reg_screeder': 'custentity_reg_screeder',
        'custentity_invoiceemail': 'custentity_invoiceemail',
        'custentity_water_regs_1999': 'custentity_water_regs_1999',
        'alcohol_recipient_type': 'alcoholRecipientType',
        'custentity_oz_installer': 'custentity_oz_installer',
        'custentity_ri_technical_rating': 'custentity_ri_technical_rating',
        'company_name': 'companyName',
        'default_address': 'defaultAddress',
        'custentity_ga_client_id': 'custentity_ga_client_id',
        'custentitysolar_trng_yn': 'custentitysolar_trng_yn',
        'custentity_gdpr_contact_consent': 'custentity_gdpr_contact_consent',
        'custentity_cust_last_contact': 'custentity_cust_last_contact',
        'custentity_mcs_membership': 'custentity_mcs_membership',
        'custentity_pv_installed_before': 'custentity_pv_installed_before',
        'custentity_other_electrical': 'custentity_other_electrical',
        'custentity_released_unbilledorders': 'custentity_released_unbilledorders',
        'custentity_ufh_disc': 'custentity_ufh_disc',
        'custentity_tech_finance_note': 'custentity_tech_finance_note',
        'custentity_erpff_p2p_auto_send_document': 'custentity_erpff_p2p_auto_send_document',
        'custentity_mcs_joining_pack_sent': 'custentity_mcs_joining_pack_sent',
        'custentity_gdpr_mailchimp_reconsent': 'custentity_gdpr_mailchimp_reconsent',
        'custentity_legacy_num': 'custentity_legacy_num',
        'custentity_cust_vat_rate': 'custentity_cust_vat_rate',
        'custentitycust_sys_dep': 'custentitycust_sys_dep',
        'custentity_enquiry_site_add': 'custentity_enquiry_site_add',
        'custentity_hp_approv_trng_yn': 'custentity_hp_approv_trng_yn',
        'custentityinterested_training': 'custentityinterested_training',
        'custentity_17th_edition': 'custentity_17th_edition',
        'custentity_lastsystemsaledate': 'custentity_lastsystemsaledate',
        'custentity_solar_instll_prev_yn': 'custentity_solar_instll_prev_yn',
        'url': 'url',
        'custentity_field_sales_managed': 'custentity_field_sales_managed',
        'auto_name': 'autoName',
        'custentity_cv_dob': 'custentity_cv_dob',
        'ship_complete': 'shipComplete',
        'third_party_carrier': 'thirdPartyCarrier',
        'custentity_in_enq_mcs': 'custentity_in_enq_mcs',
        'custentity_emcs_vouchers_issued': 'custentity_emcs_vouchers_issued',
        'custentity_in_enq_projects': 'custentity_in_enq_projects',
        'custentity_comm_pref_email': 'custentity_comm_pref_email',
        'custentitytop_customer': 'custentitytop_customer',
        'custentity_printed_inv_state': 'custentity_printed_inv_state',
        'custentity_ga_medium': 'custentity_ga_medium',
        'custentityplans_available': 'custentityplans_available',
        'unbilled_orders': 'unbilledOrders',
        'custentity_3805_dunning_letters_toemail': 'custentity_3805_dunning_letters_toemail',
        'custentity_department': 'custentity_department',
        'custentity_salesteamupdatestatus': 'custentity_salesteamupdatestatus',
        'custentity_service_partner': 'custentity_service_partner',
        'custentity_outstanding': 'custentity_outstanding',
        'custentity_ga_source': 'custentity_ga_source',
        'custentitycredit_insurance_detail': 'custentitycredit_insurance_detail',
        'custentity_gshp_installer': 'custentity_gshp_installer',
        'override_currency_format': 'overrideCurrencyFormat',
        'custentity_build_stage_score': 'custentity_build_stage_score',
        'custentity_not_using_nh_comments': 'custentity_not_using_nh_comments',
        'custentity_tax_contact_first': 'custentity_tax_contact_first',
        'custentity_gdpr': 'custentity_gdpr',
        'is_inactive': 'isInactive',
        'custentity_number_of_floors': 'custentity_number_of_floors',
        'custentity_pv_qual_details': 'custentity_pv_qual_details',
        'custentity_profile_sent': 'custentity_profile_sent',
        'custentity_cust_first_quote_fu': 'custentity_cust_first_quote_fu',
        'custentity_cust_next_contact': 'custentity_cust_next_contact',
        'negative_number_format': 'negativeNumberFormat',
        'custentity_fc_disc': 'custentity_fc_disc',
        'custentity_health_safety_man_hdling': 'custentity_health_safety_man_hdling',
        'comments': 'comments',
        'account_number': 'accountNumber',
        'consol_days_overdue': 'consolDaysOverdue',
        'custentity_sol_installer': 'custentity_sol_installer',
        'reminder_days': 'reminderDays',
        'last_modified_date': 'lastModifiedDate',
        'print_transactions': 'printTransactions',
        'custentity_bb1_googlemap_2': 'custentity_bb1_googlemap_2',
        'custentity_po_document_req': 'custentity_po_document_req',
        'custentity_co_mailing_dear': 'custentity_co_mailing_dear',
        'custentity_in_enq_ufhexp': 'custentity_in_enq_ufhexp',
        'custentity_dic': 'custentity_dic',
        'custentity_sfa_reassign': 'custentity_sfa_reassign',
        'custentity_our_reference': 'custentity_our_reference',
        'custentity_eff_fw_kvk_number': 'custentity_eff_fw_kvk_number',
        'custentity_comm_pref_sms': 'custentity_comm_pref_sms',
        'custentity_trainer_rating': 'custentity_trainer_rating',
        'custentity_cis_utr': 'custentity_cis_utr',
        'start_date': 'startDate',
        'custentity_other_tech_quals': 'custentity_other_tech_quals',
        'custentity_ashp_installer': 'custentity_ashp_installer',
        'password': 'password',
        'custentityhp_approv_trng_details': 'custentityhp_approv_trng_details',
        'custentity_ri_oftec_reg': 'custentity_ri_oftec_reg',
        'custentity_day_of_week': 'custentity_day_of_week',
        'custentity_fin_spec_reqmts': 'custentity_fin_spec_reqmts',
        'custentity_ufh_qual_details': 'custentity_ufh_qual_details',
        'custentity_erpff_p2p_party_endp_sch_id': 'custentity_erpff_p2p_party_endp_sch_id',
        'third_party_zip_code': 'thirdPartyZipCode',
        'custentity_in_enq_max_contract': 'custentity_in_enq_max_contract',
        'custentity_neceic_scheme_yn': 'custentity_neceic_scheme_yn',
        'date_created': 'dateCreated',
        'custentity_in_enq_competitors': 'custentity_in_enq_competitors',
        'custentity_nibe_vip': 'custentity_nibe_vip',
        'custentity_ga_gclid': 'custentity_ga_gclid',
        'custentity_rwh_disc': 'custentity_rwh_disc',
        'custentity_2663_direct_debit': 'custentity_2663_direct_debit',
        'custentity_2_photographs': 'custentity_2_photographs',
        'custentity_mm_lastsmsmessage': 'custentity_mm_lastsmsmessage',
        'custentity_spec_care': 'custentity_spec_care',
        'custentity_in_enq_project_info': 'custentity_in_enq_project_info',
        'custentity_health_safety_heights': 'custentity_health_safety_heights',
        'consol_aging4': 'consolAging4',
        'consol_aging3': 'consolAging3',
        'consol_aging2': 'consolAging2',
        'consol_aging1': 'consolAging1',
        'custentity_ufh_instll_prev_yn': 'custentity_ufh_instll_prev_yn',
        'custentity_pv_qual': 'custentity_pv_qual',
        'custentity_joined_inst_network': 'custentity_joined_inst_network',
        'custentity_living_with_nuheat': 'custentity_living_with_nuheat',
        'custentity_uln': 'custentity_uln',
        'email': 'email',
        'custentity_photo_recd': 'custentity_photo_recd',
        'custentity_exc_lead_count': 'custentity_exc_lead_count',
        'custentity_ga_campaign': 'custentity_ga_campaign',
        'deposit_balance': 'depositBalance',
        'custentity_entity_longitude': 'custentity_entity_longitude',
        'custentity_pv_systems': 'custentity_pv_systems',
        'first_sale_date': 'firstSaleDate',
        'custom_form': 'customForm',
        'custentity_cust_cat_type': 'custentity_cust_cat_type',
        'custentity_in_enq_comp_size': 'custentity_in_enq_comp_size',
        'custentity_reg_ins': 'custentity_reg_ins',
        'custentity_hp_disc': 'custentity_hp_disc',
        'custentity_sales_rep_photo_url': 'custentity_sales_rep_photo_url',
        'custentity_discount_lettertype': 'custentity_discount_lettertype',
        'entity_id': 'entityId',
        'custentity_mi_lead_closed': 'custentity_mi_lead_closed',
        'email_preference': 'emailPreference',
        'custentity_med_diet_spec_req': 'custentity_med_diet_spec_req',
        'custentity_number_of_units': 'custentity_number_of_units',
        'custentity_sfa_allocated': 'custentity_sfa_allocated',
        'custentity_first_enq_date': 'custentity_first_enq_date',
        'custentity_comp_reg_no': 'custentity_comp_reg_no',
        'custentity_housebuilder_contacts_backup': 'custentity_housebuilder_contacts_backup',
        'custentity_hp_installer': 'custentity_hp_installer',
        'custentity_ph_nvq3': 'custentity_ph_nvq3',
        'custentity_prospect_date': 'custentity_prospect_date',
        'search_stage': 'searchStage',
        'custentity_plans_available': 'custentity_plans_available',
        'resale_number': 'resaleNumber',
        'custentity_ph_nvq2': 'custentity_ph_nvq2',
        'custentity_send_emp_sms': 'custentity_send_emp_sms',
        'alt_email': 'altEmail',
        'custentity_mcs_solar': 'custentity_mcs_solar',
        'custentity_feedback_completed': 'custentity_feedback_completed',
        'custentity_gdpr_contact_email': 'custentity_gdpr_contact_email',
        'first_name': 'firstName',
        'custentity_health_safety_coshh': 'custentity_health_safety_coshh',
        'custentity_sales_rep_title_test': 'custentity_sales_rep_title_test',
        'custentity_nat_ins': 'custentity_nat_ins',
        'default_shipping_address': 'defaultShippingAddress',
        'give_access': 'giveAccess',
        'aging2': 'aging2',
        'aging3': 'aging3',
        'aging1': 'aging1',
        'custentityka_ranking': 'custentityka_ranking',
        'aging4': 'aging4',
        'consol_overdue_balance': 'consolOverdueBalance',
        'custentity_cc_action': 'custentity_cc_action',
        'custentity_in_enq_client_profile': 'custentity_in_enq_client_profile',
        'custentity_send_emp_email': 'custentity_send_emp_email',
        'middle_name': 'middleName',
        'custentity_learning_needs': 'custentity_learning_needs',
        'custentity_3805_dunning_paused': 'custentity_3805_dunning_paused',
        'custentity_last_statement_sent': 'custentity_last_statement_sent',
        'days_overdue': 'daysOverdue',
        'custentity_in_enq_working_with': 'custentity_in_enq_working_with',
        'custentity_qualtextbox': 'custentity_qualtextbox',
        'credit_limit': 'creditLimit',
        'custentity_lm_contact_details': 'custentity_lm_contact_details',
        'custentity_national_ins_no': 'custentity_national_ins_no',
        'custentity_erpff_p2p_party_endpoint_id': 'custentity_erpff_p2p_party_endpoint_id',
        'email_transactions': 'emailTransactions',
        'print_on_check_as': 'printOnCheckAs',
        'custentityka_type': 'custentityka_type',
        'custentity_mcs_ashp': 'custentity_mcs_ashp',
        'fax': 'fax',
        'custentity_solar_trng_details': 'custentity_solar_trng_details',
        'custentity_subregion_check': 'custentity_subregion_check',
        'last_name': 'lastName',
        'custentitydl_expiry': 'custentitydl_expiry',
        'custentity_prequote_call': 'custentity_prequote_call',
        'custentityinterested_solar': 'custentityinterested_solar',
        'end_date': 'endDate',
        'custentity_mm_lastoptinkeyword': 'custentity_mm_lastoptinkeyword',
        'custentity_ri_pl_limit': 'custentity_ri_pl_limit',
        'custentity_optin_date': 'custentity_optin_date',
        'phone': 'phone',
        'custentity_pr_link': 'custentity_pr_link',
        'custentity_as_hwl_disc': 'custentity_as_hwl_disc',
        'custentity_erpff_p2p_party_endp_op_id': 'custentity_erpff_p2p_party_endp_op_id',
        'custentity_sales_rep_title': 'custentity_sales_rep_title',
        'custentity_signature_image': 'custentity_signature_image',
        'custentity_2663_customer_refund': 'custentity_2663_customer_refund',
        'custentity_neceic_qualifications': 'custentity_neceic_qualifications',
        'custentity_conf_2yrs_indexp': 'custentity_conf_2yrs_indexp',
        'is_person': 'isPerson',
        'opening_balance_date': 'openingBalanceDate',
        'custentity_account_opened': 'custentity_account_opened',
        'custentity_tax_contact_middle': 'custentity_tax_contact_middle',
        'custentity_ufh_discount': 'custentity_ufh_discount',
        'custentity_bdm_exclude': 'custentity_bdm_exclude',
        'number_format': 'numberFormat',
        'custentity_ufh_approv_training': 'custentity_ufh_approv_training',
        'custentity_ufh_installer': 'custentity_ufh_installer',
        'custentity_open_opps_count': 'custentity_open_opps_count',
        'is_budget_approved': 'isBudgetApproved',
        'custentity_in_enq_local': 'custentity_in_enq_local',
        'custentity_ri_score': 'custentity_ri_score',
        'custentity_test_entity': 'custentity_test_entity',
        'custentity_credit_insturance': 'custentity_credit_insturance',
        'custentity_pre_requisites_certs': 'custentity_pre_requisites_certs',
        'custentity_sales_rep_dd': 'custentity_sales_rep_dd',
        'custentity_sales_camp_target': 'custentity_sales_camp_target',
        'custentity_ri_finance_rating': 'custentity_ri_finance_rating',
        'custentity_mcs_number': 'custentity_mcs_number',
        'custentity_gdpr_mc_reconsent_2': 'custentity_gdpr_mc_reconsent_2',
        'global_subscription_status': 'globalSubscriptionStatus',
        'default_order_priority': 'defaultOrderPriority',
        'custentity_hp_qual_details': 'custentity_hp_qual_details',
        'custentity_website_qr_number': 'custentity_website_qr_number',
        'custentity_voucher_registered': 'custentity_voucher_registered',
        'custentity_in_enq_future': 'custentity_in_enq_future',
        'third_party_acct': 'thirdPartyAcct',
        'custentity_co_mailing_name': 'custentity_co_mailing_name',
        'custentity_fsm': 'custentity_fsm',
        'custentity_training_needs_detail': 'custentity_training_needs_detail',
        'custentity_project_score': 'custentity_project_score',
        'estimated_budget': 'estimatedBudget',
        'custentityent_mobile_phone': 'custentityent_mobile_phone',
        'custentity_discretionary_limit': 'custentity_discretionary_limit',
        'custentity_in_enq_tech_installed': 'custentity_in_enq_tech_installed',
        'custentity_3805_exclude_comp_email': 'custentity_3805_exclude_comp_email',
        'custentity_2663_email_address_notif': 'custentity_2663_email_address_notif',
        'custentity_build_start_date': 'custentity_build_start_date',
        'custentity_keyaccount': 'custentity_keyaccount',
        'custentity_alt_phone': 'custentity_alt_phone',
        'custentity_dob': 'custentity_dob',
        'custentity_additonal_notes_backup': 'custentity_additonal_notes_backup',
        'display_symbol': 'displaySymbol',
        'custentity_sales_rep_email': 'custentity_sales_rep_email',
        'custentityinterested_hp': 'custentityinterested_hp',
        'custentity_no_engineers': 'custentity_no_engineers',
        'custentity_erpff_p2p_basw_tax_scheme_id': 'custentity_erpff_p2p_basw_tax_scheme_id',
        'custentity_ri_partp_reg': 'custentity_ri_partp_reg',
        'ref_name': 'refName',
        'links': 'links',
        'custentityent_bestcontact': 'custentityent_bestcontact',
        'custentity_field_sales_rep': 'custentity_field_sales_rep',
        'contact_roles': 'contactRoles',
        'custentity_water_regulations_1999': 'custentity_water_regulations_1999',
        'contact': 'contact',
        'custentity_3805_dunning_status': 'custentity_3805_dunning_status',
        'custentity_tax_contact': 'custentity_tax_contact',
        'custentity_ethnic_group': 'custentity_ethnic_group',
        'custentity_gdpr_contact_post': 'custentity_gdpr_contact_post',
        'custentity_sol_course_attended': 'custentity_sol_course_attended',
        'custentity_hp_course_attended': 'custentity_hp_course_attended',
        'custentity_mktg_web_review': 'custentity_mktg_web_review',
        'custentity_sub_region': 'custentity_sub_region',
        'custentity_cust_sol_competitor': 'custentity_cust_sol_competitor',
        'custentity_gdpr_contact_phone': 'custentity_gdpr_contact_phone',
        'default_bank_account': 'defaultBankAccount',
        'custentity_9572_ddcust_entitybnkformat': 'custentity_9572_ddcust_entitybnkformat',
        'custentity_3805_dunning_substatus': 'custentity_3805_dunning_substatus',
        'custentity_further_training_offer': 'custentity_further_training_offer',
        'receivables_account': 'receivablesAccount',
        'sales_readiness': 'salesReadiness',
        'custentity_9997_dd_file_format': 'custentity_9997_dd_file_format',
        'custentity_sol_volume_per_annum': 'custentity_sol_volume_per_annum',
        'custentity_mkt_category': 'custentity_mkt_category',
        'group_pricing': 'groupPricing',
        'pref_cc_processor': 'prefCcProcessor',
        'custentityent_building_type': 'custentityent_building_type',
        'sales_rep': 'salesRep',
        'custentity_would_recommend': 'custentity_would_recommend',
        'custentity_building_stage': 'custentity_building_stage',
        'shipping_item': 'shippingItem',
        'opening_balance_account': 'openingBalanceAccount',
        'subsidiary': 'subsidiary',
        'custentity_cust_cat': 'custentity_cust_cat',
        'custentity_energy_eff_attended': 'custentity_energy_eff_attended',
        'territory': 'territory',
        'custentity_ff_sc_entity_ita_pay_term': 'custentity_ff_sc_entity_ita_pay_term',
        'custentity_design_resp': 'custentity_design_resp',
        'custentity_ff_sc_bank_details': 'custentity_ff_sc_bank_details',
        'custentity_heat_source': 'custentity_heat_source',
        'entity_status': 'entityStatus',
        'custentity_enquiry_no_of_floors': 'custentity_enquiry_no_of_floors',
        'custentity_initial_enq_glazing': 'custentity_initial_enq_glazing',
        'billing_rate_card': 'billingRateCard',
        'custentity_mcs_status': 'custentity_mcs_status',
        'custentity_hitachi_course_attended': 'custentity_hitachi_course_attended',
        'custentity_enquiry_loft_insulation': 'custentity_enquiry_loft_insulation',
        'custentity_3805_dunning_procedure': 'custentity_3805_dunning_procedure',
        'custentity_cust_ashp_competitor': 'custentity_cust_ashp_competitor',
        'custentity_type_of_discount': 'custentity_type_of_discount',
        'custentity_9572_refcust_entitybnkformat': 'custentity_9572_refcust_entitybnkformat',
        'custentity_not_using_nh': 'custentity_not_using_nh',
        'custentity_recently_seen_an_ad': 'custentity_recently_seen_an_ad',
        'custentity_ashp_volume_per_annum': 'custentity_ashp_volume_per_annum',
        'custentity_heat_pump_training': 'custentity_heat_pump_training',
        'custentity_dietry_requirements': 'custentity_dietry_requirements',
        'custentity_9572_dd_file_format': 'custentity_9572_dd_file_format',
        'address_book': 'addressBook',
        'custentity_emp_letter_sig': 'custentity_emp_letter_sig',
        'custentity_lead_mining_category': 'custentity_lead_mining_category',
        'campaigns': 'campaigns',
        'custentity_best_contact_time': 'custentity_best_contact_time',
        'buying_reason': 'buyingReason',
        'custentity_enquiry_wall_insulation': 'custentity_enquiry_wall_insulation',
        'custentity_marketing_source': 'custentity_marketing_source',
        'custentity_cust_department': 'custentity_cust_department',
        'custentity_3805_dunning_level': 'custentity_3805_dunning_level',
        'terms': 'terms',
        'custentity_cust_instll_training': 'custentity_cust_instll_training',
        'custentity_cust_gshp_competitor': 'custentity_cust_gshp_competitor',
        'custentitymcs_rating': 'custentitymcs_rating',
        'custentity_enquiry_product_interest': 'custentity_enquiry_product_interest',
        'custentity_lm_lead_miner': 'custentity_lm_lead_miner',
        'custentityri_market_sector': 'custentityri_market_sector',
        'custentity_mm_lastsmssentby': 'custentity_mm_lastsmssentby',
        'custentity_3805_last_dunning_result': 'custentity_3805_last_dunning_result',
        'custentity_web_category': 'custentity_web_category',
        'custentity_rwh_volume_per_annum': 'custentity_rwh_volume_per_annum',
        'custentity_in_enq_linked_customers': 'custentity_in_enq_linked_customers',
        'partner': 'partner',
        'custentity_contact_details': 'custentity_contact_details',
        'custentity_cust_rwh_competitor': 'custentity_cust_rwh_competitor',
        'custentity_cus_follow_up': 'custentity_cus_follow_up',
        'custentity_9572_refundcust_entitybnk_sub': 'custentity_9572_refundcust_entitybnk_sub',
        'category': 'category',
        'custentity_gdpr_contact_text': 'custentity_gdpr_contact_text',
        'source_web_site': 'sourceWebSite',
        'custentity_gdpr_newsletter_req': 'custentity_gdpr_newsletter_req',
        'custentity_type_of_scheme': 'custentity_type_of_scheme',
        'custentity_ufh_volume_per_annum': 'custentity_ufh_volume_per_annum',
        'custentity_sub_category': 'custentity_sub_category',
        'custentity_show_ticket': 'custentity_show_ticket',
        'assigned_web_site': 'assignedWebSite',
        'custentity_course_attended': 'custentity_course_attended',
        'custentity_mcs_technology': 'custentity_mcs_technology',
        'campaign_category': 'campaignCategory',
        'custentity12': 'custentity12',
        'lead_source': 'leadSource',
        'custentity10': 'custentity10',
        'custentity_travel_distance': 'custentity_travel_distance',
        'custentity_gshp_volume_per_annum': 'custentity_gshp_volume_per_annum',
        'custentity_cust_ufh_competitor': 'custentity_cust_ufh_competitor',
        'custentityent_fo_rep': 'custentityent_fo_rep',
        'item_pricing': 'itemPricing',
        'custentity_lead_qualifier': 'custentity_lead_qualifier',
        'custentity_cust_com_acc_man': 'custentity_cust_com_acc_man',
        'buying_time_frame': 'buyingTimeFrame',
        'custentity_erpff_p2p_party_endp_scheme': 'custentity_erpff_p2p_party_endp_scheme',
        'custentity_unvent_hot_water_g3': 'custentity_unvent_hot_water_g3',
        'custentity_3805_dunning_manager': 'custentity_3805_dunning_manager',
        'campaign_event': 'campaignEvent',
        'custentity_sfa_assigned': 'custentity_sfa_assigned',
        'custentity_pv_course_atteneded': 'custentity_pv_course_atteneded',
        'custentity_number_emp': 'custentity_number_emp',
        'custentity_9572_custref_file_format': 'custentity_9572_custref_file_format',
        'contact_list': 'contactList',
        'custentity_enquiry_floor_insulation': 'custentity_enquiry_floor_insulation',
        'custentity_mcs_scheme_provider': 'custentity_mcs_scheme_provider',
        'currency': 'currency',
        'parent': 'parent',
        'custentity_cust_project_engineer': 'custentity_cust_project_engineer',
        'custentity_erpff_p2p_basw_tax_scheme': 'custentity_erpff_p2p_basw_tax_scheme',
        'price_level': 'priceLevel',
        'image': 'image',
        'custentity_scope_of_business': 'custentity_scope_of_business',
        'custentity_9572_ddcust_entitybank_sub': 'custentity_9572_ddcust_entitybank_sub',
        'custentity_website_existing': 'custentity_website_existing'
    }

    def __init__(self, custentity_mm_stopsendingsms=None, custentityinterested_sol_pv=None, last_sale_date=None, custentityent_fod=None, custentityrecord_start_date=None, custentity_nibe_hp_parts_discount=None, consol_balance=None, custentity_sol_qual_details=None, overdue_balance=None, custentity_credit_contact=None, custentity_ri_training_note=None, custentity_ri_cust_service_rating=None, custentityinterested_rwh=None, custentity_credit_application_form=None, custentity_ff_sc_entity_ita_apy_code=None, opening_balance=None, custentity_training_info_reqd=None, custentity_towel_rail_disc=None, password2=None, custentity_creditholdoverride=None, custentity_mcs_cert_reqd=None, custentity_tax_contact_last=None, last_order_date=None, custentity_mm_iskeylinkentity=None, custentity_email_trade_short=None, custentity_po_required=None, custentitycustentity_mcs_app_sentdate=None, custentity_mm_iskeylinkprospect=None, custentity_geographical_cover=None, custentity_ico=None, custentity_entity_latitude=None, aging=None, symbol_placement=None, custentity_bb1_googlemap=None, custentity_quote_required=None, custentity_in_enq_ufh_volume=None, external_id=None, custentity_gdpr_offers_consent=None, custentity_erpff_p2p_basw_tax_id=None, language=None, consol_unbilled_orders=None, custentity_sfa_assigned_time=None, custentity_g3_hws_qualification_yn=None, consol_aging=None, consol_deposit_balance=None, mobile_phone=None, custentity_solar_discount=None, custentity_em_discount=None, custentity_onezone_discount=None, alt_phone=None, custentity_perf_survey_sent=None, custentity_in_enq_core_work=None, first_order_date=None, fax_transactions=None, custentity_ga_url=None, custentityniceic_accreditation_date=None, salutation=None, custentity_hp_instll_prev_yn=None, custentity_training_needs=None, custentity_solar_training=None, custentity_notes_created=None, home_phone=None, custentity_cis_hmrc_tax=None, custentity_mm_smsreplystatus=None, custentity_comm_install_partner=None, title=None, custentity_customer_requirements=None, shipping_carrier=None, custentity_initial_site_address_backup=None, custentity8=None, custentity_dl_sales_rep_bcc=None, custentity6=None, custentity7=None, custentity_ri_pl_expiry=None, custentity_resubscribestatus=None, custentity_init_enq_notes=None, custentity_future_of_business=None, custentity_course_comments=None, custentity_average_monthly_spend=None, custentity_would_recommend_comments=None, send_email=None, custentity_3805_dunning_letters_toprint=None, custentity_ri_sales_rating=None, custentity_gdpr_newsletter_consent=None, custentity_ufh_approv_trng_details=None, custentity_profile_eceived=None, custentityinterested_ufh=None, custentity_qualification_backup=None, third_party_country=None, custentity_top_cust_job=None, custentity_cis_hmrc_varify=None, custentity_credit_insurance_backup=None, balance=None, custentity_lead_mining_priority=None, custentity5=None, id=None, custentity1=None, custentity_cis_name=None, custentity_mcs_gshp=None, custentity_housebuilder_contacts=None, custentity_3805_last_dunning_letter_sent=None, custentity_reg_screeder=None, custentity_invoiceemail=None, custentity_water_regs_1999=None, alcohol_recipient_type=None, custentity_oz_installer=None, custentity_ri_technical_rating=None, company_name=None, default_address=None, custentity_ga_client_id=None, custentitysolar_trng_yn=None, custentity_gdpr_contact_consent=None, custentity_cust_last_contact=None, custentity_mcs_membership=None, custentity_pv_installed_before=None, custentity_other_electrical=None, custentity_released_unbilledorders=None, custentity_ufh_disc=None, custentity_tech_finance_note=None, custentity_erpff_p2p_auto_send_document=None, custentity_mcs_joining_pack_sent=None, custentity_gdpr_mailchimp_reconsent=None, custentity_legacy_num=None, custentity_cust_vat_rate=None, custentitycust_sys_dep=None, custentity_enquiry_site_add=None, custentity_hp_approv_trng_yn=None, custentityinterested_training=None, custentity_17th_edition=None, custentity_lastsystemsaledate=None, custentity_solar_instll_prev_yn=None, url=None, custentity_field_sales_managed=None, auto_name=None, custentity_cv_dob=None, ship_complete=None, third_party_carrier=None, custentity_in_enq_mcs=None, custentity_emcs_vouchers_issued=None, custentity_in_enq_projects=None, custentity_comm_pref_email=None, custentitytop_customer=None, custentity_printed_inv_state=None, custentity_ga_medium=None, custentityplans_available=None, unbilled_orders=None, custentity_3805_dunning_letters_toemail=None, custentity_department=None, custentity_salesteamupdatestatus=None, custentity_service_partner=None, custentity_outstanding=None, custentity_ga_source=None, custentitycredit_insurance_detail=None, custentity_gshp_installer=None, override_currency_format=None, custentity_build_stage_score=None, custentity_not_using_nh_comments=None, custentity_tax_contact_first=None, custentity_gdpr=None, is_inactive=None, custentity_number_of_floors=None, custentity_pv_qual_details=None, custentity_profile_sent=None, custentity_cust_first_quote_fu=None, custentity_cust_next_contact=None, negative_number_format=None, custentity_fc_disc=None, custentity_health_safety_man_hdling=None, comments=None, account_number=None, consol_days_overdue=None, custentity_sol_installer=None, reminder_days=None, last_modified_date=None, print_transactions=None, custentity_bb1_googlemap_2=None, custentity_po_document_req=None, custentity_co_mailing_dear=None, custentity_in_enq_ufhexp=None, custentity_dic=None, custentity_sfa_reassign=None, custentity_our_reference=None, custentity_eff_fw_kvk_number=None, custentity_comm_pref_sms=None, custentity_trainer_rating=None, custentity_cis_utr=None, start_date=None, custentity_other_tech_quals=None, custentity_ashp_installer=None, password=None, custentityhp_approv_trng_details=None, custentity_ri_oftec_reg=None, custentity_day_of_week=None, custentity_fin_spec_reqmts=None, custentity_ufh_qual_details=None, custentity_erpff_p2p_party_endp_sch_id=None, third_party_zip_code=None, custentity_in_enq_max_contract=None, custentity_neceic_scheme_yn=None, date_created=None, custentity_in_enq_competitors=None, custentity_nibe_vip=None, custentity_ga_gclid=None, custentity_rwh_disc=None, custentity_2663_direct_debit=None, custentity_2_photographs=None, custentity_mm_lastsmsmessage=None, custentity_spec_care=None, custentity_in_enq_project_info=None, custentity_health_safety_heights=None, consol_aging4=None, consol_aging3=None, consol_aging2=None, consol_aging1=None, custentity_ufh_instll_prev_yn=None, custentity_pv_qual=None, custentity_joined_inst_network=None, custentity_living_with_nuheat=None, custentity_uln=None, email=None, custentity_photo_recd=None, custentity_exc_lead_count=None, custentity_ga_campaign=None, deposit_balance=None, custentity_entity_longitude=None, custentity_pv_systems=None, first_sale_date=None, custom_form=None, custentity_cust_cat_type=None, custentity_in_enq_comp_size=None, custentity_reg_ins=None, custentity_hp_disc=None, custentity_sales_rep_photo_url=None, custentity_discount_lettertype=None, entity_id=None, custentity_mi_lead_closed=None, email_preference=None, custentity_med_diet_spec_req=None, custentity_number_of_units=None, custentity_sfa_allocated=None, custentity_first_enq_date=None, custentity_comp_reg_no=None, custentity_housebuilder_contacts_backup=None, custentity_hp_installer=None, custentity_ph_nvq3=None, custentity_prospect_date=None, search_stage=None, custentity_plans_available=None, resale_number=None, custentity_ph_nvq2=None, custentity_send_emp_sms=None, alt_email=None, custentity_mcs_solar=None, custentity_feedback_completed=None, custentity_gdpr_contact_email=None, first_name=None, custentity_health_safety_coshh=None, custentity_sales_rep_title_test=None, custentity_nat_ins=None, default_shipping_address=None, give_access=None, aging2=None, aging3=None, aging1=None, custentityka_ranking=None, aging4=None, consol_overdue_balance=None, custentity_cc_action=None, custentity_in_enq_client_profile=None, custentity_send_emp_email=None, middle_name=None, custentity_learning_needs=None, custentity_3805_dunning_paused=None, custentity_last_statement_sent=None, days_overdue=None, custentity_in_enq_working_with=None, custentity_qualtextbox=None, credit_limit=None, custentity_lm_contact_details=None, custentity_national_ins_no=None, custentity_erpff_p2p_party_endpoint_id=None, email_transactions=None, print_on_check_as=None, custentityka_type=None, custentity_mcs_ashp=None, fax=None, custentity_solar_trng_details=None, custentity_subregion_check=None, last_name=None, custentitydl_expiry=None, custentity_prequote_call=None, custentityinterested_solar=None, end_date=None, custentity_mm_lastoptinkeyword=None, custentity_ri_pl_limit=None, custentity_optin_date=None, phone=None, custentity_pr_link=None, custentity_as_hwl_disc=None, custentity_erpff_p2p_party_endp_op_id=None, custentity_sales_rep_title=None, custentity_signature_image=None, custentity_2663_customer_refund=None, custentity_neceic_qualifications=None, custentity_conf_2yrs_indexp=None, is_person=None, opening_balance_date=None, custentity_account_opened=None, custentity_tax_contact_middle=None, custentity_ufh_discount=None, custentity_bdm_exclude=None, number_format=None, custentity_ufh_approv_training=None, custentity_ufh_installer=None, custentity_open_opps_count=None, is_budget_approved=None, custentity_in_enq_local=None, custentity_ri_score=None, custentity_test_entity=None, custentity_credit_insturance=None, custentity_pre_requisites_certs=None, custentity_sales_rep_dd=None, custentity_sales_camp_target=None, custentity_ri_finance_rating=None, custentity_mcs_number=None, custentity_gdpr_mc_reconsent_2=None, global_subscription_status=None, default_order_priority=None, custentity_hp_qual_details=None, custentity_website_qr_number=None, custentity_voucher_registered=None, custentity_in_enq_future=None, third_party_acct=None, custentity_co_mailing_name=None, custentity_fsm=None, custentity_training_needs_detail=None, custentity_project_score=None, estimated_budget=None, custentityent_mobile_phone=None, custentity_discretionary_limit=None, custentity_in_enq_tech_installed=None, custentity_3805_exclude_comp_email=None, custentity_2663_email_address_notif=None, custentity_build_start_date=None, custentity_keyaccount=None, custentity_alt_phone=None, custentity_dob=None, custentity_additonal_notes_backup=None, display_symbol=None, custentity_sales_rep_email=None, custentityinterested_hp=None, custentity_no_engineers=None, custentity_erpff_p2p_basw_tax_scheme_id=None, custentity_ri_partp_reg=None, ref_name=None, links=None, custentityent_bestcontact=None, custentity_field_sales_rep=None, contact_roles=None, custentity_water_regulations_1999=None, contact=None, custentity_3805_dunning_status=None, custentity_tax_contact=None, custentity_ethnic_group=None, custentity_gdpr_contact_post=None, custentity_sol_course_attended=None, custentity_hp_course_attended=None, custentity_mktg_web_review=None, custentity_sub_region=None, custentity_cust_sol_competitor=None, custentity_gdpr_contact_phone=None, default_bank_account=None, custentity_9572_ddcust_entitybnkformat=None, custentity_3805_dunning_substatus=None, custentity_further_training_offer=None, receivables_account=None, sales_readiness=None, custentity_9997_dd_file_format=None, custentity_sol_volume_per_annum=None, custentity_mkt_category=None, group_pricing=None, pref_cc_processor=None, custentityent_building_type=None, sales_rep=None, custentity_would_recommend=None, custentity_building_stage=None, shipping_item=None, opening_balance_account=None, subsidiary=None, custentity_cust_cat=None, custentity_energy_eff_attended=None, territory=None, custentity_ff_sc_entity_ita_pay_term=None, custentity_design_resp=None, custentity_ff_sc_bank_details=None, custentity_heat_source=None, entity_status=None, custentity_enquiry_no_of_floors=None, custentity_initial_enq_glazing=None, billing_rate_card=None, custentity_mcs_status=None, custentity_hitachi_course_attended=None, custentity_enquiry_loft_insulation=None, custentity_3805_dunning_procedure=None, custentity_cust_ashp_competitor=None, custentity_type_of_discount=None, custentity_9572_refcust_entitybnkformat=None, custentity_not_using_nh=None, custentity_recently_seen_an_ad=None, custentity_ashp_volume_per_annum=None, custentity_heat_pump_training=None, custentity_dietry_requirements=None, custentity_9572_dd_file_format=None, address_book=None, custentity_emp_letter_sig=None, custentity_lead_mining_category=None, campaigns=None, custentity_best_contact_time=None, buying_reason=None, custentity_enquiry_wall_insulation=None, custentity_marketing_source=None, custentity_cust_department=None, custentity_3805_dunning_level=None, terms=None, custentity_cust_instll_training=None, custentity_cust_gshp_competitor=None, custentitymcs_rating=None, custentity_enquiry_product_interest=None, custentity_lm_lead_miner=None, custentityri_market_sector=None, custentity_mm_lastsmssentby=None, custentity_3805_last_dunning_result=None, custentity_web_category=None, custentity_rwh_volume_per_annum=None, custentity_in_enq_linked_customers=None, partner=None, custentity_contact_details=None, custentity_cust_rwh_competitor=None, custentity_cus_follow_up=None, custentity_9572_refundcust_entitybnk_sub=None, category=None, custentity_gdpr_contact_text=None, source_web_site=None, custentity_gdpr_newsletter_req=None, custentity_type_of_scheme=None, custentity_ufh_volume_per_annum=None, custentity_sub_category=None, custentity_show_ticket=None, assigned_web_site=None, custentity_course_attended=None, custentity_mcs_technology=None, campaign_category=None, custentity12=None, lead_source=None, custentity10=None, custentity_travel_distance=None, custentity_gshp_volume_per_annum=None, custentity_cust_ufh_competitor=None, custentityent_fo_rep=None, item_pricing=None, custentity_lead_qualifier=None, custentity_cust_com_acc_man=None, buying_time_frame=None, custentity_erpff_p2p_party_endp_scheme=None, custentity_unvent_hot_water_g3=None, custentity_3805_dunning_manager=None, campaign_event=None, custentity_sfa_assigned=None, custentity_pv_course_atteneded=None, custentity_number_emp=None, custentity_9572_custref_file_format=None, contact_list=None, custentity_enquiry_floor_insulation=None, custentity_mcs_scheme_provider=None, currency=None, parent=None, custentity_cust_project_engineer=None, custentity_erpff_p2p_basw_tax_scheme=None, price_level=None, image=None, custentity_scope_of_business=None, custentity_9572_ddcust_entitybank_sub=None, custentity_website_existing=None):  # noqa: E501
        """Customer - a model defined in Swagger"""  # noqa: E501
        self._custentity_mm_stopsendingsms = None
        self._custentityinterested_sol_pv = None
        self._last_sale_date = None
        self._custentityent_fod = None
        self._custentityrecord_start_date = None
        self._custentity_nibe_hp_parts_discount = None
        self._consol_balance = None
        self._custentity_sol_qual_details = None
        self._overdue_balance = None
        self._custentity_credit_contact = None
        self._custentity_ri_training_note = None
        self._custentity_ri_cust_service_rating = None
        self._custentityinterested_rwh = None
        self._custentity_credit_application_form = None
        self._custentity_ff_sc_entity_ita_apy_code = None
        self._opening_balance = None
        self._custentity_training_info_reqd = None
        self._custentity_towel_rail_disc = None
        self._password2 = None
        self._custentity_creditholdoverride = None
        self._custentity_mcs_cert_reqd = None
        self._custentity_tax_contact_last = None
        self._last_order_date = None
        self._custentity_mm_iskeylinkentity = None
        self._custentity_email_trade_short = None
        self._custentity_po_required = None
        self._custentitycustentity_mcs_app_sentdate = None
        self._custentity_mm_iskeylinkprospect = None
        self._custentity_geographical_cover = None
        self._custentity_ico = None
        self._custentity_entity_latitude = None
        self._aging = None
        self._symbol_placement = None
        self._custentity_bb1_googlemap = None
        self._custentity_quote_required = None
        self._custentity_in_enq_ufh_volume = None
        self._external_id = None
        self._custentity_gdpr_offers_consent = None
        self._custentity_erpff_p2p_basw_tax_id = None
        self._language = None
        self._consol_unbilled_orders = None
        self._custentity_sfa_assigned_time = None
        self._custentity_g3_hws_qualification_yn = None
        self._consol_aging = None
        self._consol_deposit_balance = None
        self._mobile_phone = None
        self._custentity_solar_discount = None
        self._custentity_em_discount = None
        self._custentity_onezone_discount = None
        self._alt_phone = None
        self._custentity_perf_survey_sent = None
        self._custentity_in_enq_core_work = None
        self._first_order_date = None
        self._fax_transactions = None
        self._custentity_ga_url = None
        self._custentityniceic_accreditation_date = None
        self._salutation = None
        self._custentity_hp_instll_prev_yn = None
        self._custentity_training_needs = None
        self._custentity_solar_training = None
        self._custentity_notes_created = None
        self._home_phone = None
        self._custentity_cis_hmrc_tax = None
        self._custentity_mm_smsreplystatus = None
        self._custentity_comm_install_partner = None
        self._title = None
        self._custentity_customer_requirements = None
        self._shipping_carrier = None
        self._custentity_initial_site_address_backup = None
        self._custentity8 = None
        self._custentity_dl_sales_rep_bcc = None
        self._custentity6 = None
        self._custentity7 = None
        self._custentity_ri_pl_expiry = None
        self._custentity_resubscribestatus = None
        self._custentity_init_enq_notes = None
        self._custentity_future_of_business = None
        self._custentity_course_comments = None
        self._custentity_average_monthly_spend = None
        self._custentity_would_recommend_comments = None
        self._send_email = None
        self._custentity_3805_dunning_letters_toprint = None
        self._custentity_ri_sales_rating = None
        self._custentity_gdpr_newsletter_consent = None
        self._custentity_ufh_approv_trng_details = None
        self._custentity_profile_eceived = None
        self._custentityinterested_ufh = None
        self._custentity_qualification_backup = None
        self._third_party_country = None
        self._custentity_top_cust_job = None
        self._custentity_cis_hmrc_varify = None
        self._custentity_credit_insurance_backup = None
        self._balance = None
        self._custentity_lead_mining_priority = None
        self._custentity5 = None
        self._id = None
        self._custentity1 = None
        self._custentity_cis_name = None
        self._custentity_mcs_gshp = None
        self._custentity_housebuilder_contacts = None
        self._custentity_3805_last_dunning_letter_sent = None
        self._custentity_reg_screeder = None
        self._custentity_invoiceemail = None
        self._custentity_water_regs_1999 = None
        self._alcohol_recipient_type = None
        self._custentity_oz_installer = None
        self._custentity_ri_technical_rating = None
        self._company_name = None
        self._default_address = None
        self._custentity_ga_client_id = None
        self._custentitysolar_trng_yn = None
        self._custentity_gdpr_contact_consent = None
        self._custentity_cust_last_contact = None
        self._custentity_mcs_membership = None
        self._custentity_pv_installed_before = None
        self._custentity_other_electrical = None
        self._custentity_released_unbilledorders = None
        self._custentity_ufh_disc = None
        self._custentity_tech_finance_note = None
        self._custentity_erpff_p2p_auto_send_document = None
        self._custentity_mcs_joining_pack_sent = None
        self._custentity_gdpr_mailchimp_reconsent = None
        self._custentity_legacy_num = None
        self._custentity_cust_vat_rate = None
        self._custentitycust_sys_dep = None
        self._custentity_enquiry_site_add = None
        self._custentity_hp_approv_trng_yn = None
        self._custentityinterested_training = None
        self._custentity_17th_edition = None
        self._custentity_lastsystemsaledate = None
        self._custentity_solar_instll_prev_yn = None
        self._url = None
        self._custentity_field_sales_managed = None
        self._auto_name = None
        self._custentity_cv_dob = None
        self._ship_complete = None
        self._third_party_carrier = None
        self._custentity_in_enq_mcs = None
        self._custentity_emcs_vouchers_issued = None
        self._custentity_in_enq_projects = None
        self._custentity_comm_pref_email = None
        self._custentitytop_customer = None
        self._custentity_printed_inv_state = None
        self._custentity_ga_medium = None
        self._custentityplans_available = None
        self._unbilled_orders = None
        self._custentity_3805_dunning_letters_toemail = None
        self._custentity_department = None
        self._custentity_salesteamupdatestatus = None
        self._custentity_service_partner = None
        self._custentity_outstanding = None
        self._custentity_ga_source = None
        self._custentitycredit_insurance_detail = None
        self._custentity_gshp_installer = None
        self._override_currency_format = None
        self._custentity_build_stage_score = None
        self._custentity_not_using_nh_comments = None
        self._custentity_tax_contact_first = None
        self._custentity_gdpr = None
        self._is_inactive = None
        self._custentity_number_of_floors = None
        self._custentity_pv_qual_details = None
        self._custentity_profile_sent = None
        self._custentity_cust_first_quote_fu = None
        self._custentity_cust_next_contact = None
        self._negative_number_format = None
        self._custentity_fc_disc = None
        self._custentity_health_safety_man_hdling = None
        self._comments = None
        self._account_number = None
        self._consol_days_overdue = None
        self._custentity_sol_installer = None
        self._reminder_days = None
        self._last_modified_date = None
        self._print_transactions = None
        self._custentity_bb1_googlemap_2 = None
        self._custentity_po_document_req = None
        self._custentity_co_mailing_dear = None
        self._custentity_in_enq_ufhexp = None
        self._custentity_dic = None
        self._custentity_sfa_reassign = None
        self._custentity_our_reference = None
        self._custentity_eff_fw_kvk_number = None
        self._custentity_comm_pref_sms = None
        self._custentity_trainer_rating = None
        self._custentity_cis_utr = None
        self._start_date = None
        self._custentity_other_tech_quals = None
        self._custentity_ashp_installer = None
        self._password = None
        self._custentityhp_approv_trng_details = None
        self._custentity_ri_oftec_reg = None
        self._custentity_day_of_week = None
        self._custentity_fin_spec_reqmts = None
        self._custentity_ufh_qual_details = None
        self._custentity_erpff_p2p_party_endp_sch_id = None
        self._third_party_zip_code = None
        self._custentity_in_enq_max_contract = None
        self._custentity_neceic_scheme_yn = None
        self._date_created = None
        self._custentity_in_enq_competitors = None
        self._custentity_nibe_vip = None
        self._custentity_ga_gclid = None
        self._custentity_rwh_disc = None
        self._custentity_2663_direct_debit = None
        self._custentity_2_photographs = None
        self._custentity_mm_lastsmsmessage = None
        self._custentity_spec_care = None
        self._custentity_in_enq_project_info = None
        self._custentity_health_safety_heights = None
        self._consol_aging4 = None
        self._consol_aging3 = None
        self._consol_aging2 = None
        self._consol_aging1 = None
        self._custentity_ufh_instll_prev_yn = None
        self._custentity_pv_qual = None
        self._custentity_joined_inst_network = None
        self._custentity_living_with_nuheat = None
        self._custentity_uln = None
        self._email = None
        self._custentity_photo_recd = None
        self._custentity_exc_lead_count = None
        self._custentity_ga_campaign = None
        self._deposit_balance = None
        self._custentity_entity_longitude = None
        self._custentity_pv_systems = None
        self._first_sale_date = None
        self._custom_form = None
        self._custentity_cust_cat_type = None
        self._custentity_in_enq_comp_size = None
        self._custentity_reg_ins = None
        self._custentity_hp_disc = None
        self._custentity_sales_rep_photo_url = None
        self._custentity_discount_lettertype = None
        self._entity_id = None
        self._custentity_mi_lead_closed = None
        self._email_preference = None
        self._custentity_med_diet_spec_req = None
        self._custentity_number_of_units = None
        self._custentity_sfa_allocated = None
        self._custentity_first_enq_date = None
        self._custentity_comp_reg_no = None
        self._custentity_housebuilder_contacts_backup = None
        self._custentity_hp_installer = None
        self._custentity_ph_nvq3 = None
        self._custentity_prospect_date = None
        self._search_stage = None
        self._custentity_plans_available = None
        self._resale_number = None
        self._custentity_ph_nvq2 = None
        self._custentity_send_emp_sms = None
        self._alt_email = None
        self._custentity_mcs_solar = None
        self._custentity_feedback_completed = None
        self._custentity_gdpr_contact_email = None
        self._first_name = None
        self._custentity_health_safety_coshh = None
        self._custentity_sales_rep_title_test = None
        self._custentity_nat_ins = None
        self._default_shipping_address = None
        self._give_access = None
        self._aging2 = None
        self._aging3 = None
        self._aging1 = None
        self._custentityka_ranking = None
        self._aging4 = None
        self._consol_overdue_balance = None
        self._custentity_cc_action = None
        self._custentity_in_enq_client_profile = None
        self._custentity_send_emp_email = None
        self._middle_name = None
        self._custentity_learning_needs = None
        self._custentity_3805_dunning_paused = None
        self._custentity_last_statement_sent = None
        self._days_overdue = None
        self._custentity_in_enq_working_with = None
        self._custentity_qualtextbox = None
        self._credit_limit = None
        self._custentity_lm_contact_details = None
        self._custentity_national_ins_no = None
        self._custentity_erpff_p2p_party_endpoint_id = None
        self._email_transactions = None
        self._print_on_check_as = None
        self._custentityka_type = None
        self._custentity_mcs_ashp = None
        self._fax = None
        self._custentity_solar_trng_details = None
        self._custentity_subregion_check = None
        self._last_name = None
        self._custentitydl_expiry = None
        self._custentity_prequote_call = None
        self._custentityinterested_solar = None
        self._end_date = None
        self._custentity_mm_lastoptinkeyword = None
        self._custentity_ri_pl_limit = None
        self._custentity_optin_date = None
        self._phone = None
        self._custentity_pr_link = None
        self._custentity_as_hwl_disc = None
        self._custentity_erpff_p2p_party_endp_op_id = None
        self._custentity_sales_rep_title = None
        self._custentity_signature_image = None
        self._custentity_2663_customer_refund = None
        self._custentity_neceic_qualifications = None
        self._custentity_conf_2yrs_indexp = None
        self._is_person = None
        self._opening_balance_date = None
        self._custentity_account_opened = None
        self._custentity_tax_contact_middle = None
        self._custentity_ufh_discount = None
        self._custentity_bdm_exclude = None
        self._number_format = None
        self._custentity_ufh_approv_training = None
        self._custentity_ufh_installer = None
        self._custentity_open_opps_count = None
        self._is_budget_approved = None
        self._custentity_in_enq_local = None
        self._custentity_ri_score = None
        self._custentity_test_entity = None
        self._custentity_credit_insturance = None
        self._custentity_pre_requisites_certs = None
        self._custentity_sales_rep_dd = None
        self._custentity_sales_camp_target = None
        self._custentity_ri_finance_rating = None
        self._custentity_mcs_number = None
        self._custentity_gdpr_mc_reconsent_2 = None
        self._global_subscription_status = None
        self._default_order_priority = None
        self._custentity_hp_qual_details = None
        self._custentity_website_qr_number = None
        self._custentity_voucher_registered = None
        self._custentity_in_enq_future = None
        self._third_party_acct = None
        self._custentity_co_mailing_name = None
        self._custentity_fsm = None
        self._custentity_training_needs_detail = None
        self._custentity_project_score = None
        self._estimated_budget = None
        self._custentityent_mobile_phone = None
        self._custentity_discretionary_limit = None
        self._custentity_in_enq_tech_installed = None
        self._custentity_3805_exclude_comp_email = None
        self._custentity_2663_email_address_notif = None
        self._custentity_build_start_date = None
        self._custentity_keyaccount = None
        self._custentity_alt_phone = None
        self._custentity_dob = None
        self._custentity_additonal_notes_backup = None
        self._display_symbol = None
        self._custentity_sales_rep_email = None
        self._custentityinterested_hp = None
        self._custentity_no_engineers = None
        self._custentity_erpff_p2p_basw_tax_scheme_id = None
        self._custentity_ri_partp_reg = None
        self._ref_name = None
        self._links = None
        self._custentityent_bestcontact = None
        self._custentity_field_sales_rep = None
        self._contact_roles = None
        self._custentity_water_regulations_1999 = None
        self._contact = None
        self._custentity_3805_dunning_status = None
        self._custentity_tax_contact = None
        self._custentity_ethnic_group = None
        self._custentity_gdpr_contact_post = None
        self._custentity_sol_course_attended = None
        self._custentity_hp_course_attended = None
        self._custentity_mktg_web_review = None
        self._custentity_sub_region = None
        self._custentity_cust_sol_competitor = None
        self._custentity_gdpr_contact_phone = None
        self._default_bank_account = None
        self._custentity_9572_ddcust_entitybnkformat = None
        self._custentity_3805_dunning_substatus = None
        self._custentity_further_training_offer = None
        self._receivables_account = None
        self._sales_readiness = None
        self._custentity_9997_dd_file_format = None
        self._custentity_sol_volume_per_annum = None
        self._custentity_mkt_category = None
        self._group_pricing = None
        self._pref_cc_processor = None
        self._custentityent_building_type = None
        self._sales_rep = None
        self._custentity_would_recommend = None
        self._custentity_building_stage = None
        self._shipping_item = None
        self._opening_balance_account = None
        self._subsidiary = None
        self._custentity_cust_cat = None
        self._custentity_energy_eff_attended = None
        self._territory = None
        self._custentity_ff_sc_entity_ita_pay_term = None
        self._custentity_design_resp = None
        self._custentity_ff_sc_bank_details = None
        self._custentity_heat_source = None
        self._entity_status = None
        self._custentity_enquiry_no_of_floors = None
        self._custentity_initial_enq_glazing = None
        self._billing_rate_card = None
        self._custentity_mcs_status = None
        self._custentity_hitachi_course_attended = None
        self._custentity_enquiry_loft_insulation = None
        self._custentity_3805_dunning_procedure = None
        self._custentity_cust_ashp_competitor = None
        self._custentity_type_of_discount = None
        self._custentity_9572_refcust_entitybnkformat = None
        self._custentity_not_using_nh = None
        self._custentity_recently_seen_an_ad = None
        self._custentity_ashp_volume_per_annum = None
        self._custentity_heat_pump_training = None
        self._custentity_dietry_requirements = None
        self._custentity_9572_dd_file_format = None
        self._address_book = None
        self._custentity_emp_letter_sig = None
        self._custentity_lead_mining_category = None
        self._campaigns = None
        self._custentity_best_contact_time = None
        self._buying_reason = None
        self._custentity_enquiry_wall_insulation = None
        self._custentity_marketing_source = None
        self._custentity_cust_department = None
        self._custentity_3805_dunning_level = None
        self._terms = None
        self._custentity_cust_instll_training = None
        self._custentity_cust_gshp_competitor = None
        self._custentitymcs_rating = None
        self._custentity_enquiry_product_interest = None
        self._custentity_lm_lead_miner = None
        self._custentityri_market_sector = None
        self._custentity_mm_lastsmssentby = None
        self._custentity_3805_last_dunning_result = None
        self._custentity_web_category = None
        self._custentity_rwh_volume_per_annum = None
        self._custentity_in_enq_linked_customers = None
        self._partner = None
        self._custentity_contact_details = None
        self._custentity_cust_rwh_competitor = None
        self._custentity_cus_follow_up = None
        self._custentity_9572_refundcust_entitybnk_sub = None
        self._category = None
        self._custentity_gdpr_contact_text = None
        self._source_web_site = None
        self._custentity_gdpr_newsletter_req = None
        self._custentity_type_of_scheme = None
        self._custentity_ufh_volume_per_annum = None
        self._custentity_sub_category = None
        self._custentity_show_ticket = None
        self._assigned_web_site = None
        self._custentity_course_attended = None
        self._custentity_mcs_technology = None
        self._campaign_category = None
        self._custentity12 = None
        self._lead_source = None
        self._custentity10 = None
        self._custentity_travel_distance = None
        self._custentity_gshp_volume_per_annum = None
        self._custentity_cust_ufh_competitor = None
        self._custentityent_fo_rep = None
        self._item_pricing = None
        self._custentity_lead_qualifier = None
        self._custentity_cust_com_acc_man = None
        self._buying_time_frame = None
        self._custentity_erpff_p2p_party_endp_scheme = None
        self._custentity_unvent_hot_water_g3 = None
        self._custentity_3805_dunning_manager = None
        self._campaign_event = None
        self._custentity_sfa_assigned = None
        self._custentity_pv_course_atteneded = None
        self._custentity_number_emp = None
        self._custentity_9572_custref_file_format = None
        self._contact_list = None
        self._custentity_enquiry_floor_insulation = None
        self._custentity_mcs_scheme_provider = None
        self._currency = None
        self._parent = None
        self._custentity_cust_project_engineer = None
        self._custentity_erpff_p2p_basw_tax_scheme = None
        self._price_level = None
        self._image = None
        self._custentity_scope_of_business = None
        self._custentity_9572_ddcust_entitybank_sub = None
        self._custentity_website_existing = None
        self.discriminator = None
        if custentity_mm_stopsendingsms is not None:
            self.custentity_mm_stopsendingsms = custentity_mm_stopsendingsms
        if custentityinterested_sol_pv is not None:
            self.custentityinterested_sol_pv = custentityinterested_sol_pv
        if last_sale_date is not None:
            self.last_sale_date = last_sale_date
        if custentityent_fod is not None:
            self.custentityent_fod = custentityent_fod
        if custentityrecord_start_date is not None:
            self.custentityrecord_start_date = custentityrecord_start_date
        if custentity_nibe_hp_parts_discount is not None:
            self.custentity_nibe_hp_parts_discount = custentity_nibe_hp_parts_discount
        if consol_balance is not None:
            self.consol_balance = consol_balance
        if custentity_sol_qual_details is not None:
            self.custentity_sol_qual_details = custentity_sol_qual_details
        if overdue_balance is not None:
            self.overdue_balance = overdue_balance
        if custentity_credit_contact is not None:
            self.custentity_credit_contact = custentity_credit_contact
        if custentity_ri_training_note is not None:
            self.custentity_ri_training_note = custentity_ri_training_note
        if custentity_ri_cust_service_rating is not None:
            self.custentity_ri_cust_service_rating = custentity_ri_cust_service_rating
        if custentityinterested_rwh is not None:
            self.custentityinterested_rwh = custentityinterested_rwh
        if custentity_credit_application_form is not None:
            self.custentity_credit_application_form = custentity_credit_application_form
        if custentity_ff_sc_entity_ita_apy_code is not None:
            self.custentity_ff_sc_entity_ita_apy_code = custentity_ff_sc_entity_ita_apy_code
        if opening_balance is not None:
            self.opening_balance = opening_balance
        if custentity_training_info_reqd is not None:
            self.custentity_training_info_reqd = custentity_training_info_reqd
        if custentity_towel_rail_disc is not None:
            self.custentity_towel_rail_disc = custentity_towel_rail_disc
        if password2 is not None:
            self.password2 = password2
        if custentity_creditholdoverride is not None:
            self.custentity_creditholdoverride = custentity_creditholdoverride
        if custentity_mcs_cert_reqd is not None:
            self.custentity_mcs_cert_reqd = custentity_mcs_cert_reqd
        if custentity_tax_contact_last is not None:
            self.custentity_tax_contact_last = custentity_tax_contact_last
        if last_order_date is not None:
            self.last_order_date = last_order_date
        if custentity_mm_iskeylinkentity is not None:
            self.custentity_mm_iskeylinkentity = custentity_mm_iskeylinkentity
        if custentity_email_trade_short is not None:
            self.custentity_email_trade_short = custentity_email_trade_short
        if custentity_po_required is not None:
            self.custentity_po_required = custentity_po_required
        if custentitycustentity_mcs_app_sentdate is not None:
            self.custentitycustentity_mcs_app_sentdate = custentitycustentity_mcs_app_sentdate
        if custentity_mm_iskeylinkprospect is not None:
            self.custentity_mm_iskeylinkprospect = custentity_mm_iskeylinkprospect
        if custentity_geographical_cover is not None:
            self.custentity_geographical_cover = custentity_geographical_cover
        if custentity_ico is not None:
            self.custentity_ico = custentity_ico
        if custentity_entity_latitude is not None:
            self.custentity_entity_latitude = custentity_entity_latitude
        if aging is not None:
            self.aging = aging
        if symbol_placement is not None:
            self.symbol_placement = symbol_placement
        if custentity_bb1_googlemap is not None:
            self.custentity_bb1_googlemap = custentity_bb1_googlemap
        if custentity_quote_required is not None:
            self.custentity_quote_required = custentity_quote_required
        if custentity_in_enq_ufh_volume is not None:
            self.custentity_in_enq_ufh_volume = custentity_in_enq_ufh_volume
        if external_id is not None:
            self.external_id = external_id
        if custentity_gdpr_offers_consent is not None:
            self.custentity_gdpr_offers_consent = custentity_gdpr_offers_consent
        if custentity_erpff_p2p_basw_tax_id is not None:
            self.custentity_erpff_p2p_basw_tax_id = custentity_erpff_p2p_basw_tax_id
        if language is not None:
            self.language = language
        if consol_unbilled_orders is not None:
            self.consol_unbilled_orders = consol_unbilled_orders
        if custentity_sfa_assigned_time is not None:
            self.custentity_sfa_assigned_time = custentity_sfa_assigned_time
        if custentity_g3_hws_qualification_yn is not None:
            self.custentity_g3_hws_qualification_yn = custentity_g3_hws_qualification_yn
        if consol_aging is not None:
            self.consol_aging = consol_aging
        if consol_deposit_balance is not None:
            self.consol_deposit_balance = consol_deposit_balance
        if mobile_phone is not None:
            self.mobile_phone = mobile_phone
        if custentity_solar_discount is not None:
            self.custentity_solar_discount = custentity_solar_discount
        if custentity_em_discount is not None:
            self.custentity_em_discount = custentity_em_discount
        if custentity_onezone_discount is not None:
            self.custentity_onezone_discount = custentity_onezone_discount
        if alt_phone is not None:
            self.alt_phone = alt_phone
        if custentity_perf_survey_sent is not None:
            self.custentity_perf_survey_sent = custentity_perf_survey_sent
        if custentity_in_enq_core_work is not None:
            self.custentity_in_enq_core_work = custentity_in_enq_core_work
        if first_order_date is not None:
            self.first_order_date = first_order_date
        if fax_transactions is not None:
            self.fax_transactions = fax_transactions
        if custentity_ga_url is not None:
            self.custentity_ga_url = custentity_ga_url
        if custentityniceic_accreditation_date is not None:
            self.custentityniceic_accreditation_date = custentityniceic_accreditation_date
        if salutation is not None:
            self.salutation = salutation
        if custentity_hp_instll_prev_yn is not None:
            self.custentity_hp_instll_prev_yn = custentity_hp_instll_prev_yn
        if custentity_training_needs is not None:
            self.custentity_training_needs = custentity_training_needs
        if custentity_solar_training is not None:
            self.custentity_solar_training = custentity_solar_training
        if custentity_notes_created is not None:
            self.custentity_notes_created = custentity_notes_created
        if home_phone is not None:
            self.home_phone = home_phone
        if custentity_cis_hmrc_tax is not None:
            self.custentity_cis_hmrc_tax = custentity_cis_hmrc_tax
        if custentity_mm_smsreplystatus is not None:
            self.custentity_mm_smsreplystatus = custentity_mm_smsreplystatus
        if custentity_comm_install_partner is not None:
            self.custentity_comm_install_partner = custentity_comm_install_partner
        if title is not None:
            self.title = title
        if custentity_customer_requirements is not None:
            self.custentity_customer_requirements = custentity_customer_requirements
        if shipping_carrier is not None:
            self.shipping_carrier = shipping_carrier
        if custentity_initial_site_address_backup is not None:
            self.custentity_initial_site_address_backup = custentity_initial_site_address_backup
        if custentity8 is not None:
            self.custentity8 = custentity8
        if custentity_dl_sales_rep_bcc is not None:
            self.custentity_dl_sales_rep_bcc = custentity_dl_sales_rep_bcc
        if custentity6 is not None:
            self.custentity6 = custentity6
        if custentity7 is not None:
            self.custentity7 = custentity7
        if custentity_ri_pl_expiry is not None:
            self.custentity_ri_pl_expiry = custentity_ri_pl_expiry
        if custentity_resubscribestatus is not None:
            self.custentity_resubscribestatus = custentity_resubscribestatus
        if custentity_init_enq_notes is not None:
            self.custentity_init_enq_notes = custentity_init_enq_notes
        if custentity_future_of_business is not None:
            self.custentity_future_of_business = custentity_future_of_business
        if custentity_course_comments is not None:
            self.custentity_course_comments = custentity_course_comments
        if custentity_average_monthly_spend is not None:
            self.custentity_average_monthly_spend = custentity_average_monthly_spend
        if custentity_would_recommend_comments is not None:
            self.custentity_would_recommend_comments = custentity_would_recommend_comments
        if send_email is not None:
            self.send_email = send_email
        if custentity_3805_dunning_letters_toprint is not None:
            self.custentity_3805_dunning_letters_toprint = custentity_3805_dunning_letters_toprint
        if custentity_ri_sales_rating is not None:
            self.custentity_ri_sales_rating = custentity_ri_sales_rating
        if custentity_gdpr_newsletter_consent is not None:
            self.custentity_gdpr_newsletter_consent = custentity_gdpr_newsletter_consent
        if custentity_ufh_approv_trng_details is not None:
            self.custentity_ufh_approv_trng_details = custentity_ufh_approv_trng_details
        if custentity_profile_eceived is not None:
            self.custentity_profile_eceived = custentity_profile_eceived
        if custentityinterested_ufh is not None:
            self.custentityinterested_ufh = custentityinterested_ufh
        if custentity_qualification_backup is not None:
            self.custentity_qualification_backup = custentity_qualification_backup
        if third_party_country is not None:
            self.third_party_country = third_party_country
        if custentity_top_cust_job is not None:
            self.custentity_top_cust_job = custentity_top_cust_job
        if custentity_cis_hmrc_varify is not None:
            self.custentity_cis_hmrc_varify = custentity_cis_hmrc_varify
        if custentity_credit_insurance_backup is not None:
            self.custentity_credit_insurance_backup = custentity_credit_insurance_backup
        if balance is not None:
            self.balance = balance
        if custentity_lead_mining_priority is not None:
            self.custentity_lead_mining_priority = custentity_lead_mining_priority
        if custentity5 is not None:
            self.custentity5 = custentity5
        if id is not None:
            self.id = id
        if custentity1 is not None:
            self.custentity1 = custentity1
        if custentity_cis_name is not None:
            self.custentity_cis_name = custentity_cis_name
        if custentity_mcs_gshp is not None:
            self.custentity_mcs_gshp = custentity_mcs_gshp
        if custentity_housebuilder_contacts is not None:
            self.custentity_housebuilder_contacts = custentity_housebuilder_contacts
        if custentity_3805_last_dunning_letter_sent is not None:
            self.custentity_3805_last_dunning_letter_sent = custentity_3805_last_dunning_letter_sent
        if custentity_reg_screeder is not None:
            self.custentity_reg_screeder = custentity_reg_screeder
        if custentity_invoiceemail is not None:
            self.custentity_invoiceemail = custentity_invoiceemail
        if custentity_water_regs_1999 is not None:
            self.custentity_water_regs_1999 = custentity_water_regs_1999
        if alcohol_recipient_type is not None:
            self.alcohol_recipient_type = alcohol_recipient_type
        if custentity_oz_installer is not None:
            self.custentity_oz_installer = custentity_oz_installer
        if custentity_ri_technical_rating is not None:
            self.custentity_ri_technical_rating = custentity_ri_technical_rating
        if company_name is not None:
            self.company_name = company_name
        if default_address is not None:
            self.default_address = default_address
        if custentity_ga_client_id is not None:
            self.custentity_ga_client_id = custentity_ga_client_id
        if custentitysolar_trng_yn is not None:
            self.custentitysolar_trng_yn = custentitysolar_trng_yn
        if custentity_gdpr_contact_consent is not None:
            self.custentity_gdpr_contact_consent = custentity_gdpr_contact_consent
        if custentity_cust_last_contact is not None:
            self.custentity_cust_last_contact = custentity_cust_last_contact
        if custentity_mcs_membership is not None:
            self.custentity_mcs_membership = custentity_mcs_membership
        if custentity_pv_installed_before is not None:
            self.custentity_pv_installed_before = custentity_pv_installed_before
        if custentity_other_electrical is not None:
            self.custentity_other_electrical = custentity_other_electrical
        if custentity_released_unbilledorders is not None:
            self.custentity_released_unbilledorders = custentity_released_unbilledorders
        if custentity_ufh_disc is not None:
            self.custentity_ufh_disc = custentity_ufh_disc
        if custentity_tech_finance_note is not None:
            self.custentity_tech_finance_note = custentity_tech_finance_note
        if custentity_erpff_p2p_auto_send_document is not None:
            self.custentity_erpff_p2p_auto_send_document = custentity_erpff_p2p_auto_send_document
        if custentity_mcs_joining_pack_sent is not None:
            self.custentity_mcs_joining_pack_sent = custentity_mcs_joining_pack_sent
        if custentity_gdpr_mailchimp_reconsent is not None:
            self.custentity_gdpr_mailchimp_reconsent = custentity_gdpr_mailchimp_reconsent
        if custentity_legacy_num is not None:
            self.custentity_legacy_num = custentity_legacy_num
        if custentity_cust_vat_rate is not None:
            self.custentity_cust_vat_rate = custentity_cust_vat_rate
        if custentitycust_sys_dep is not None:
            self.custentitycust_sys_dep = custentitycust_sys_dep
        if custentity_enquiry_site_add is not None:
            self.custentity_enquiry_site_add = custentity_enquiry_site_add
        if custentity_hp_approv_trng_yn is not None:
            self.custentity_hp_approv_trng_yn = custentity_hp_approv_trng_yn
        if custentityinterested_training is not None:
            self.custentityinterested_training = custentityinterested_training
        if custentity_17th_edition is not None:
            self.custentity_17th_edition = custentity_17th_edition
        if custentity_lastsystemsaledate is not None:
            self.custentity_lastsystemsaledate = custentity_lastsystemsaledate
        if custentity_solar_instll_prev_yn is not None:
            self.custentity_solar_instll_prev_yn = custentity_solar_instll_prev_yn
        if url is not None:
            self.url = url
        if custentity_field_sales_managed is not None:
            self.custentity_field_sales_managed = custentity_field_sales_managed
        if auto_name is not None:
            self.auto_name = auto_name
        if custentity_cv_dob is not None:
            self.custentity_cv_dob = custentity_cv_dob
        if ship_complete is not None:
            self.ship_complete = ship_complete
        if third_party_carrier is not None:
            self.third_party_carrier = third_party_carrier
        if custentity_in_enq_mcs is not None:
            self.custentity_in_enq_mcs = custentity_in_enq_mcs
        if custentity_emcs_vouchers_issued is not None:
            self.custentity_emcs_vouchers_issued = custentity_emcs_vouchers_issued
        if custentity_in_enq_projects is not None:
            self.custentity_in_enq_projects = custentity_in_enq_projects
        if custentity_comm_pref_email is not None:
            self.custentity_comm_pref_email = custentity_comm_pref_email
        if custentitytop_customer is not None:
            self.custentitytop_customer = custentitytop_customer
        if custentity_printed_inv_state is not None:
            self.custentity_printed_inv_state = custentity_printed_inv_state
        if custentity_ga_medium is not None:
            self.custentity_ga_medium = custentity_ga_medium
        if custentityplans_available is not None:
            self.custentityplans_available = custentityplans_available
        if unbilled_orders is not None:
            self.unbilled_orders = unbilled_orders
        if custentity_3805_dunning_letters_toemail is not None:
            self.custentity_3805_dunning_letters_toemail = custentity_3805_dunning_letters_toemail
        if custentity_department is not None:
            self.custentity_department = custentity_department
        if custentity_salesteamupdatestatus is not None:
            self.custentity_salesteamupdatestatus = custentity_salesteamupdatestatus
        if custentity_service_partner is not None:
            self.custentity_service_partner = custentity_service_partner
        if custentity_outstanding is not None:
            self.custentity_outstanding = custentity_outstanding
        if custentity_ga_source is not None:
            self.custentity_ga_source = custentity_ga_source
        if custentitycredit_insurance_detail is not None:
            self.custentitycredit_insurance_detail = custentitycredit_insurance_detail
        if custentity_gshp_installer is not None:
            self.custentity_gshp_installer = custentity_gshp_installer
        if override_currency_format is not None:
            self.override_currency_format = override_currency_format
        if custentity_build_stage_score is not None:
            self.custentity_build_stage_score = custentity_build_stage_score
        if custentity_not_using_nh_comments is not None:
            self.custentity_not_using_nh_comments = custentity_not_using_nh_comments
        if custentity_tax_contact_first is not None:
            self.custentity_tax_contact_first = custentity_tax_contact_first
        if custentity_gdpr is not None:
            self.custentity_gdpr = custentity_gdpr
        if is_inactive is not None:
            self.is_inactive = is_inactive
        if custentity_number_of_floors is not None:
            self.custentity_number_of_floors = custentity_number_of_floors
        if custentity_pv_qual_details is not None:
            self.custentity_pv_qual_details = custentity_pv_qual_details
        if custentity_profile_sent is not None:
            self.custentity_profile_sent = custentity_profile_sent
        if custentity_cust_first_quote_fu is not None:
            self.custentity_cust_first_quote_fu = custentity_cust_first_quote_fu
        if custentity_cust_next_contact is not None:
            self.custentity_cust_next_contact = custentity_cust_next_contact
        if negative_number_format is not None:
            self.negative_number_format = negative_number_format
        if custentity_fc_disc is not None:
            self.custentity_fc_disc = custentity_fc_disc
        if custentity_health_safety_man_hdling is not None:
            self.custentity_health_safety_man_hdling = custentity_health_safety_man_hdling
        if comments is not None:
            self.comments = comments
        if account_number is not None:
            self.account_number = account_number
        if consol_days_overdue is not None:
            self.consol_days_overdue = consol_days_overdue
        if custentity_sol_installer is not None:
            self.custentity_sol_installer = custentity_sol_installer
        if reminder_days is not None:
            self.reminder_days = reminder_days
        if last_modified_date is not None:
            self.last_modified_date = last_modified_date
        if print_transactions is not None:
            self.print_transactions = print_transactions
        if custentity_bb1_googlemap_2 is not None:
            self.custentity_bb1_googlemap_2 = custentity_bb1_googlemap_2
        if custentity_po_document_req is not None:
            self.custentity_po_document_req = custentity_po_document_req
        if custentity_co_mailing_dear is not None:
            self.custentity_co_mailing_dear = custentity_co_mailing_dear
        if custentity_in_enq_ufhexp is not None:
            self.custentity_in_enq_ufhexp = custentity_in_enq_ufhexp
        if custentity_dic is not None:
            self.custentity_dic = custentity_dic
        if custentity_sfa_reassign is not None:
            self.custentity_sfa_reassign = custentity_sfa_reassign
        if custentity_our_reference is not None:
            self.custentity_our_reference = custentity_our_reference
        if custentity_eff_fw_kvk_number is not None:
            self.custentity_eff_fw_kvk_number = custentity_eff_fw_kvk_number
        if custentity_comm_pref_sms is not None:
            self.custentity_comm_pref_sms = custentity_comm_pref_sms
        if custentity_trainer_rating is not None:
            self.custentity_trainer_rating = custentity_trainer_rating
        if custentity_cis_utr is not None:
            self.custentity_cis_utr = custentity_cis_utr
        if start_date is not None:
            self.start_date = start_date
        if custentity_other_tech_quals is not None:
            self.custentity_other_tech_quals = custentity_other_tech_quals
        if custentity_ashp_installer is not None:
            self.custentity_ashp_installer = custentity_ashp_installer
        if password is not None:
            self.password = password
        if custentityhp_approv_trng_details is not None:
            self.custentityhp_approv_trng_details = custentityhp_approv_trng_details
        if custentity_ri_oftec_reg is not None:
            self.custentity_ri_oftec_reg = custentity_ri_oftec_reg
        if custentity_day_of_week is not None:
            self.custentity_day_of_week = custentity_day_of_week
        if custentity_fin_spec_reqmts is not None:
            self.custentity_fin_spec_reqmts = custentity_fin_spec_reqmts
        if custentity_ufh_qual_details is not None:
            self.custentity_ufh_qual_details = custentity_ufh_qual_details
        if custentity_erpff_p2p_party_endp_sch_id is not None:
            self.custentity_erpff_p2p_party_endp_sch_id = custentity_erpff_p2p_party_endp_sch_id
        if third_party_zip_code is not None:
            self.third_party_zip_code = third_party_zip_code
        if custentity_in_enq_max_contract is not None:
            self.custentity_in_enq_max_contract = custentity_in_enq_max_contract
        if custentity_neceic_scheme_yn is not None:
            self.custentity_neceic_scheme_yn = custentity_neceic_scheme_yn
        if date_created is not None:
            self.date_created = date_created
        if custentity_in_enq_competitors is not None:
            self.custentity_in_enq_competitors = custentity_in_enq_competitors
        if custentity_nibe_vip is not None:
            self.custentity_nibe_vip = custentity_nibe_vip
        if custentity_ga_gclid is not None:
            self.custentity_ga_gclid = custentity_ga_gclid
        if custentity_rwh_disc is not None:
            self.custentity_rwh_disc = custentity_rwh_disc
        if custentity_2663_direct_debit is not None:
            self.custentity_2663_direct_debit = custentity_2663_direct_debit
        if custentity_2_photographs is not None:
            self.custentity_2_photographs = custentity_2_photographs
        if custentity_mm_lastsmsmessage is not None:
            self.custentity_mm_lastsmsmessage = custentity_mm_lastsmsmessage
        if custentity_spec_care is not None:
            self.custentity_spec_care = custentity_spec_care
        if custentity_in_enq_project_info is not None:
            self.custentity_in_enq_project_info = custentity_in_enq_project_info
        if custentity_health_safety_heights is not None:
            self.custentity_health_safety_heights = custentity_health_safety_heights
        if consol_aging4 is not None:
            self.consol_aging4 = consol_aging4
        if consol_aging3 is not None:
            self.consol_aging3 = consol_aging3
        if consol_aging2 is not None:
            self.consol_aging2 = consol_aging2
        if consol_aging1 is not None:
            self.consol_aging1 = consol_aging1
        if custentity_ufh_instll_prev_yn is not None:
            self.custentity_ufh_instll_prev_yn = custentity_ufh_instll_prev_yn
        if custentity_pv_qual is not None:
            self.custentity_pv_qual = custentity_pv_qual
        if custentity_joined_inst_network is not None:
            self.custentity_joined_inst_network = custentity_joined_inst_network
        if custentity_living_with_nuheat is not None:
            self.custentity_living_with_nuheat = custentity_living_with_nuheat
        if custentity_uln is not None:
            self.custentity_uln = custentity_uln
        if email is not None:
            self.email = email
        if custentity_photo_recd is not None:
            self.custentity_photo_recd = custentity_photo_recd
        if custentity_exc_lead_count is not None:
            self.custentity_exc_lead_count = custentity_exc_lead_count
        if custentity_ga_campaign is not None:
            self.custentity_ga_campaign = custentity_ga_campaign
        if deposit_balance is not None:
            self.deposit_balance = deposit_balance
        if custentity_entity_longitude is not None:
            self.custentity_entity_longitude = custentity_entity_longitude
        if custentity_pv_systems is not None:
            self.custentity_pv_systems = custentity_pv_systems
        if first_sale_date is not None:
            self.first_sale_date = first_sale_date
        if custom_form is not None:
            self.custom_form = custom_form
        if custentity_cust_cat_type is not None:
            self.custentity_cust_cat_type = custentity_cust_cat_type
        if custentity_in_enq_comp_size is not None:
            self.custentity_in_enq_comp_size = custentity_in_enq_comp_size
        if custentity_reg_ins is not None:
            self.custentity_reg_ins = custentity_reg_ins
        if custentity_hp_disc is not None:
            self.custentity_hp_disc = custentity_hp_disc
        if custentity_sales_rep_photo_url is not None:
            self.custentity_sales_rep_photo_url = custentity_sales_rep_photo_url
        if custentity_discount_lettertype is not None:
            self.custentity_discount_lettertype = custentity_discount_lettertype
        if entity_id is not None:
            self.entity_id = entity_id
        if custentity_mi_lead_closed is not None:
            self.custentity_mi_lead_closed = custentity_mi_lead_closed
        if email_preference is not None:
            self.email_preference = email_preference
        if custentity_med_diet_spec_req is not None:
            self.custentity_med_diet_spec_req = custentity_med_diet_spec_req
        if custentity_number_of_units is not None:
            self.custentity_number_of_units = custentity_number_of_units
        if custentity_sfa_allocated is not None:
            self.custentity_sfa_allocated = custentity_sfa_allocated
        if custentity_first_enq_date is not None:
            self.custentity_first_enq_date = custentity_first_enq_date
        if custentity_comp_reg_no is not None:
            self.custentity_comp_reg_no = custentity_comp_reg_no
        if custentity_housebuilder_contacts_backup is not None:
            self.custentity_housebuilder_contacts_backup = custentity_housebuilder_contacts_backup
        if custentity_hp_installer is not None:
            self.custentity_hp_installer = custentity_hp_installer
        if custentity_ph_nvq3 is not None:
            self.custentity_ph_nvq3 = custentity_ph_nvq3
        if custentity_prospect_date is not None:
            self.custentity_prospect_date = custentity_prospect_date
        if search_stage is not None:
            self.search_stage = search_stage
        if custentity_plans_available is not None:
            self.custentity_plans_available = custentity_plans_available
        if resale_number is not None:
            self.resale_number = resale_number
        if custentity_ph_nvq2 is not None:
            self.custentity_ph_nvq2 = custentity_ph_nvq2
        if custentity_send_emp_sms is not None:
            self.custentity_send_emp_sms = custentity_send_emp_sms
        if alt_email is not None:
            self.alt_email = alt_email
        if custentity_mcs_solar is not None:
            self.custentity_mcs_solar = custentity_mcs_solar
        if custentity_feedback_completed is not None:
            self.custentity_feedback_completed = custentity_feedback_completed
        if custentity_gdpr_contact_email is not None:
            self.custentity_gdpr_contact_email = custentity_gdpr_contact_email
        if first_name is not None:
            self.first_name = first_name
        if custentity_health_safety_coshh is not None:
            self.custentity_health_safety_coshh = custentity_health_safety_coshh
        if custentity_sales_rep_title_test is not None:
            self.custentity_sales_rep_title_test = custentity_sales_rep_title_test
        if custentity_nat_ins is not None:
            self.custentity_nat_ins = custentity_nat_ins
        if default_shipping_address is not None:
            self.default_shipping_address = default_shipping_address
        if give_access is not None:
            self.give_access = give_access
        if aging2 is not None:
            self.aging2 = aging2
        if aging3 is not None:
            self.aging3 = aging3
        if aging1 is not None:
            self.aging1 = aging1
        if custentityka_ranking is not None:
            self.custentityka_ranking = custentityka_ranking
        if aging4 is not None:
            self.aging4 = aging4
        if consol_overdue_balance is not None:
            self.consol_overdue_balance = consol_overdue_balance
        if custentity_cc_action is not None:
            self.custentity_cc_action = custentity_cc_action
        if custentity_in_enq_client_profile is not None:
            self.custentity_in_enq_client_profile = custentity_in_enq_client_profile
        if custentity_send_emp_email is not None:
            self.custentity_send_emp_email = custentity_send_emp_email
        if middle_name is not None:
            self.middle_name = middle_name
        if custentity_learning_needs is not None:
            self.custentity_learning_needs = custentity_learning_needs
        if custentity_3805_dunning_paused is not None:
            self.custentity_3805_dunning_paused = custentity_3805_dunning_paused
        if custentity_last_statement_sent is not None:
            self.custentity_last_statement_sent = custentity_last_statement_sent
        if days_overdue is not None:
            self.days_overdue = days_overdue
        if custentity_in_enq_working_with is not None:
            self.custentity_in_enq_working_with = custentity_in_enq_working_with
        if custentity_qualtextbox is not None:
            self.custentity_qualtextbox = custentity_qualtextbox
        if credit_limit is not None:
            self.credit_limit = credit_limit
        if custentity_lm_contact_details is not None:
            self.custentity_lm_contact_details = custentity_lm_contact_details
        if custentity_national_ins_no is not None:
            self.custentity_national_ins_no = custentity_national_ins_no
        if custentity_erpff_p2p_party_endpoint_id is not None:
            self.custentity_erpff_p2p_party_endpoint_id = custentity_erpff_p2p_party_endpoint_id
        if email_transactions is not None:
            self.email_transactions = email_transactions
        if print_on_check_as is not None:
            self.print_on_check_as = print_on_check_as
        if custentityka_type is not None:
            self.custentityka_type = custentityka_type
        if custentity_mcs_ashp is not None:
            self.custentity_mcs_ashp = custentity_mcs_ashp
        if fax is not None:
            self.fax = fax
        if custentity_solar_trng_details is not None:
            self.custentity_solar_trng_details = custentity_solar_trng_details
        if custentity_subregion_check is not None:
            self.custentity_subregion_check = custentity_subregion_check
        if last_name is not None:
            self.last_name = last_name
        if custentitydl_expiry is not None:
            self.custentitydl_expiry = custentitydl_expiry
        if custentity_prequote_call is not None:
            self.custentity_prequote_call = custentity_prequote_call
        if custentityinterested_solar is not None:
            self.custentityinterested_solar = custentityinterested_solar
        if end_date is not None:
            self.end_date = end_date
        if custentity_mm_lastoptinkeyword is not None:
            self.custentity_mm_lastoptinkeyword = custentity_mm_lastoptinkeyword
        if custentity_ri_pl_limit is not None:
            self.custentity_ri_pl_limit = custentity_ri_pl_limit
        if custentity_optin_date is not None:
            self.custentity_optin_date = custentity_optin_date
        if phone is not None:
            self.phone = phone
        if custentity_pr_link is not None:
            self.custentity_pr_link = custentity_pr_link
        if custentity_as_hwl_disc is not None:
            self.custentity_as_hwl_disc = custentity_as_hwl_disc
        if custentity_erpff_p2p_party_endp_op_id is not None:
            self.custentity_erpff_p2p_party_endp_op_id = custentity_erpff_p2p_party_endp_op_id
        if custentity_sales_rep_title is not None:
            self.custentity_sales_rep_title = custentity_sales_rep_title
        if custentity_signature_image is not None:
            self.custentity_signature_image = custentity_signature_image
        if custentity_2663_customer_refund is not None:
            self.custentity_2663_customer_refund = custentity_2663_customer_refund
        if custentity_neceic_qualifications is not None:
            self.custentity_neceic_qualifications = custentity_neceic_qualifications
        if custentity_conf_2yrs_indexp is not None:
            self.custentity_conf_2yrs_indexp = custentity_conf_2yrs_indexp
        if is_person is not None:
            self.is_person = is_person
        if opening_balance_date is not None:
            self.opening_balance_date = opening_balance_date
        if custentity_account_opened is not None:
            self.custentity_account_opened = custentity_account_opened
        if custentity_tax_contact_middle is not None:
            self.custentity_tax_contact_middle = custentity_tax_contact_middle
        if custentity_ufh_discount is not None:
            self.custentity_ufh_discount = custentity_ufh_discount
        if custentity_bdm_exclude is not None:
            self.custentity_bdm_exclude = custentity_bdm_exclude
        if number_format is not None:
            self.number_format = number_format
        if custentity_ufh_approv_training is not None:
            self.custentity_ufh_approv_training = custentity_ufh_approv_training
        if custentity_ufh_installer is not None:
            self.custentity_ufh_installer = custentity_ufh_installer
        if custentity_open_opps_count is not None:
            self.custentity_open_opps_count = custentity_open_opps_count
        if is_budget_approved is not None:
            self.is_budget_approved = is_budget_approved
        if custentity_in_enq_local is not None:
            self.custentity_in_enq_local = custentity_in_enq_local
        if custentity_ri_score is not None:
            self.custentity_ri_score = custentity_ri_score
        if custentity_test_entity is not None:
            self.custentity_test_entity = custentity_test_entity
        if custentity_credit_insturance is not None:
            self.custentity_credit_insturance = custentity_credit_insturance
        if custentity_pre_requisites_certs is not None:
            self.custentity_pre_requisites_certs = custentity_pre_requisites_certs
        if custentity_sales_rep_dd is not None:
            self.custentity_sales_rep_dd = custentity_sales_rep_dd
        if custentity_sales_camp_target is not None:
            self.custentity_sales_camp_target = custentity_sales_camp_target
        if custentity_ri_finance_rating is not None:
            self.custentity_ri_finance_rating = custentity_ri_finance_rating
        if custentity_mcs_number is not None:
            self.custentity_mcs_number = custentity_mcs_number
        if custentity_gdpr_mc_reconsent_2 is not None:
            self.custentity_gdpr_mc_reconsent_2 = custentity_gdpr_mc_reconsent_2
        if global_subscription_status is not None:
            self.global_subscription_status = global_subscription_status
        if default_order_priority is not None:
            self.default_order_priority = default_order_priority
        if custentity_hp_qual_details is not None:
            self.custentity_hp_qual_details = custentity_hp_qual_details
        if custentity_website_qr_number is not None:
            self.custentity_website_qr_number = custentity_website_qr_number
        if custentity_voucher_registered is not None:
            self.custentity_voucher_registered = custentity_voucher_registered
        if custentity_in_enq_future is not None:
            self.custentity_in_enq_future = custentity_in_enq_future
        if third_party_acct is not None:
            self.third_party_acct = third_party_acct
        if custentity_co_mailing_name is not None:
            self.custentity_co_mailing_name = custentity_co_mailing_name
        if custentity_fsm is not None:
            self.custentity_fsm = custentity_fsm
        if custentity_training_needs_detail is not None:
            self.custentity_training_needs_detail = custentity_training_needs_detail
        if custentity_project_score is not None:
            self.custentity_project_score = custentity_project_score
        if estimated_budget is not None:
            self.estimated_budget = estimated_budget
        if custentityent_mobile_phone is not None:
            self.custentityent_mobile_phone = custentityent_mobile_phone
        if custentity_discretionary_limit is not None:
            self.custentity_discretionary_limit = custentity_discretionary_limit
        if custentity_in_enq_tech_installed is not None:
            self.custentity_in_enq_tech_installed = custentity_in_enq_tech_installed
        if custentity_3805_exclude_comp_email is not None:
            self.custentity_3805_exclude_comp_email = custentity_3805_exclude_comp_email
        if custentity_2663_email_address_notif is not None:
            self.custentity_2663_email_address_notif = custentity_2663_email_address_notif
        if custentity_build_start_date is not None:
            self.custentity_build_start_date = custentity_build_start_date
        if custentity_keyaccount is not None:
            self.custentity_keyaccount = custentity_keyaccount
        if custentity_alt_phone is not None:
            self.custentity_alt_phone = custentity_alt_phone
        if custentity_dob is not None:
            self.custentity_dob = custentity_dob
        if custentity_additonal_notes_backup is not None:
            self.custentity_additonal_notes_backup = custentity_additonal_notes_backup
        if display_symbol is not None:
            self.display_symbol = display_symbol
        if custentity_sales_rep_email is not None:
            self.custentity_sales_rep_email = custentity_sales_rep_email
        if custentityinterested_hp is not None:
            self.custentityinterested_hp = custentityinterested_hp
        if custentity_no_engineers is not None:
            self.custentity_no_engineers = custentity_no_engineers
        if custentity_erpff_p2p_basw_tax_scheme_id is not None:
            self.custentity_erpff_p2p_basw_tax_scheme_id = custentity_erpff_p2p_basw_tax_scheme_id
        if custentity_ri_partp_reg is not None:
            self.custentity_ri_partp_reg = custentity_ri_partp_reg
        if ref_name is not None:
            self.ref_name = ref_name
        if links is not None:
            self.links = links
        if custentityent_bestcontact is not None:
            self.custentityent_bestcontact = custentityent_bestcontact
        if custentity_field_sales_rep is not None:
            self.custentity_field_sales_rep = custentity_field_sales_rep
        if contact_roles is not None:
            self.contact_roles = contact_roles
        if custentity_water_regulations_1999 is not None:
            self.custentity_water_regulations_1999 = custentity_water_regulations_1999
        if contact is not None:
            self.contact = contact
        if custentity_3805_dunning_status is not None:
            self.custentity_3805_dunning_status = custentity_3805_dunning_status
        if custentity_tax_contact is not None:
            self.custentity_tax_contact = custentity_tax_contact
        if custentity_ethnic_group is not None:
            self.custentity_ethnic_group = custentity_ethnic_group
        if custentity_gdpr_contact_post is not None:
            self.custentity_gdpr_contact_post = custentity_gdpr_contact_post
        if custentity_sol_course_attended is not None:
            self.custentity_sol_course_attended = custentity_sol_course_attended
        if custentity_hp_course_attended is not None:
            self.custentity_hp_course_attended = custentity_hp_course_attended
        if custentity_mktg_web_review is not None:
            self.custentity_mktg_web_review = custentity_mktg_web_review
        if custentity_sub_region is not None:
            self.custentity_sub_region = custentity_sub_region
        if custentity_cust_sol_competitor is not None:
            self.custentity_cust_sol_competitor = custentity_cust_sol_competitor
        if custentity_gdpr_contact_phone is not None:
            self.custentity_gdpr_contact_phone = custentity_gdpr_contact_phone
        if default_bank_account is not None:
            self.default_bank_account = default_bank_account
        if custentity_9572_ddcust_entitybnkformat is not None:
            self.custentity_9572_ddcust_entitybnkformat = custentity_9572_ddcust_entitybnkformat
        if custentity_3805_dunning_substatus is not None:
            self.custentity_3805_dunning_substatus = custentity_3805_dunning_substatus
        if custentity_further_training_offer is not None:
            self.custentity_further_training_offer = custentity_further_training_offer
        if receivables_account is not None:
            self.receivables_account = receivables_account
        if sales_readiness is not None:
            self.sales_readiness = sales_readiness
        if custentity_9997_dd_file_format is not None:
            self.custentity_9997_dd_file_format = custentity_9997_dd_file_format
        if custentity_sol_volume_per_annum is not None:
            self.custentity_sol_volume_per_annum = custentity_sol_volume_per_annum
        if custentity_mkt_category is not None:
            self.custentity_mkt_category = custentity_mkt_category
        if group_pricing is not None:
            self.group_pricing = group_pricing
        if pref_cc_processor is not None:
            self.pref_cc_processor = pref_cc_processor
        if custentityent_building_type is not None:
            self.custentityent_building_type = custentityent_building_type
        if sales_rep is not None:
            self.sales_rep = sales_rep
        if custentity_would_recommend is not None:
            self.custentity_would_recommend = custentity_would_recommend
        if custentity_building_stage is not None:
            self.custentity_building_stage = custentity_building_stage
        if shipping_item is not None:
            self.shipping_item = shipping_item
        if opening_balance_account is not None:
            self.opening_balance_account = opening_balance_account
        if subsidiary is not None:
            self.subsidiary = subsidiary
        if custentity_cust_cat is not None:
            self.custentity_cust_cat = custentity_cust_cat
        if custentity_energy_eff_attended is not None:
            self.custentity_energy_eff_attended = custentity_energy_eff_attended
        if territory is not None:
            self.territory = territory
        if custentity_ff_sc_entity_ita_pay_term is not None:
            self.custentity_ff_sc_entity_ita_pay_term = custentity_ff_sc_entity_ita_pay_term
        if custentity_design_resp is not None:
            self.custentity_design_resp = custentity_design_resp
        if custentity_ff_sc_bank_details is not None:
            self.custentity_ff_sc_bank_details = custentity_ff_sc_bank_details
        if custentity_heat_source is not None:
            self.custentity_heat_source = custentity_heat_source
        if entity_status is not None:
            self.entity_status = entity_status
        if custentity_enquiry_no_of_floors is not None:
            self.custentity_enquiry_no_of_floors = custentity_enquiry_no_of_floors
        if custentity_initial_enq_glazing is not None:
            self.custentity_initial_enq_glazing = custentity_initial_enq_glazing
        if billing_rate_card is not None:
            self.billing_rate_card = billing_rate_card
        if custentity_mcs_status is not None:
            self.custentity_mcs_status = custentity_mcs_status
        if custentity_hitachi_course_attended is not None:
            self.custentity_hitachi_course_attended = custentity_hitachi_course_attended
        if custentity_enquiry_loft_insulation is not None:
            self.custentity_enquiry_loft_insulation = custentity_enquiry_loft_insulation
        if custentity_3805_dunning_procedure is not None:
            self.custentity_3805_dunning_procedure = custentity_3805_dunning_procedure
        if custentity_cust_ashp_competitor is not None:
            self.custentity_cust_ashp_competitor = custentity_cust_ashp_competitor
        if custentity_type_of_discount is not None:
            self.custentity_type_of_discount = custentity_type_of_discount
        if custentity_9572_refcust_entitybnkformat is not None:
            self.custentity_9572_refcust_entitybnkformat = custentity_9572_refcust_entitybnkformat
        if custentity_not_using_nh is not None:
            self.custentity_not_using_nh = custentity_not_using_nh
        if custentity_recently_seen_an_ad is not None:
            self.custentity_recently_seen_an_ad = custentity_recently_seen_an_ad
        if custentity_ashp_volume_per_annum is not None:
            self.custentity_ashp_volume_per_annum = custentity_ashp_volume_per_annum
        if custentity_heat_pump_training is not None:
            self.custentity_heat_pump_training = custentity_heat_pump_training
        if custentity_dietry_requirements is not None:
            self.custentity_dietry_requirements = custentity_dietry_requirements
        if custentity_9572_dd_file_format is not None:
            self.custentity_9572_dd_file_format = custentity_9572_dd_file_format
        if address_book is not None:
            self.address_book = address_book
        if custentity_emp_letter_sig is not None:
            self.custentity_emp_letter_sig = custentity_emp_letter_sig
        if custentity_lead_mining_category is not None:
            self.custentity_lead_mining_category = custentity_lead_mining_category
        if campaigns is not None:
            self.campaigns = campaigns
        if custentity_best_contact_time is not None:
            self.custentity_best_contact_time = custentity_best_contact_time
        if buying_reason is not None:
            self.buying_reason = buying_reason
        if custentity_enquiry_wall_insulation is not None:
            self.custentity_enquiry_wall_insulation = custentity_enquiry_wall_insulation
        if custentity_marketing_source is not None:
            self.custentity_marketing_source = custentity_marketing_source
        if custentity_cust_department is not None:
            self.custentity_cust_department = custentity_cust_department
        if custentity_3805_dunning_level is not None:
            self.custentity_3805_dunning_level = custentity_3805_dunning_level
        if terms is not None:
            self.terms = terms
        if custentity_cust_instll_training is not None:
            self.custentity_cust_instll_training = custentity_cust_instll_training
        if custentity_cust_gshp_competitor is not None:
            self.custentity_cust_gshp_competitor = custentity_cust_gshp_competitor
        if custentitymcs_rating is not None:
            self.custentitymcs_rating = custentitymcs_rating
        if custentity_enquiry_product_interest is not None:
            self.custentity_enquiry_product_interest = custentity_enquiry_product_interest
        if custentity_lm_lead_miner is not None:
            self.custentity_lm_lead_miner = custentity_lm_lead_miner
        if custentityri_market_sector is not None:
            self.custentityri_market_sector = custentityri_market_sector
        if custentity_mm_lastsmssentby is not None:
            self.custentity_mm_lastsmssentby = custentity_mm_lastsmssentby
        if custentity_3805_last_dunning_result is not None:
            self.custentity_3805_last_dunning_result = custentity_3805_last_dunning_result
        if custentity_web_category is not None:
            self.custentity_web_category = custentity_web_category
        if custentity_rwh_volume_per_annum is not None:
            self.custentity_rwh_volume_per_annum = custentity_rwh_volume_per_annum
        if custentity_in_enq_linked_customers is not None:
            self.custentity_in_enq_linked_customers = custentity_in_enq_linked_customers
        if partner is not None:
            self.partner = partner
        if custentity_contact_details is not None:
            self.custentity_contact_details = custentity_contact_details
        if custentity_cust_rwh_competitor is not None:
            self.custentity_cust_rwh_competitor = custentity_cust_rwh_competitor
        if custentity_cus_follow_up is not None:
            self.custentity_cus_follow_up = custentity_cus_follow_up
        if custentity_9572_refundcust_entitybnk_sub is not None:
            self.custentity_9572_refundcust_entitybnk_sub = custentity_9572_refundcust_entitybnk_sub
        if category is not None:
            self.category = category
        if custentity_gdpr_contact_text is not None:
            self.custentity_gdpr_contact_text = custentity_gdpr_contact_text
        if source_web_site is not None:
            self.source_web_site = source_web_site
        if custentity_gdpr_newsletter_req is not None:
            self.custentity_gdpr_newsletter_req = custentity_gdpr_newsletter_req
        if custentity_type_of_scheme is not None:
            self.custentity_type_of_scheme = custentity_type_of_scheme
        if custentity_ufh_volume_per_annum is not None:
            self.custentity_ufh_volume_per_annum = custentity_ufh_volume_per_annum
        if custentity_sub_category is not None:
            self.custentity_sub_category = custentity_sub_category
        if custentity_show_ticket is not None:
            self.custentity_show_ticket = custentity_show_ticket
        if assigned_web_site is not None:
            self.assigned_web_site = assigned_web_site
        if custentity_course_attended is not None:
            self.custentity_course_attended = custentity_course_attended
        if custentity_mcs_technology is not None:
            self.custentity_mcs_technology = custentity_mcs_technology
        if campaign_category is not None:
            self.campaign_category = campaign_category
        if custentity12 is not None:
            self.custentity12 = custentity12
        if lead_source is not None:
            self.lead_source = lead_source
        if custentity10 is not None:
            self.custentity10 = custentity10
        if custentity_travel_distance is not None:
            self.custentity_travel_distance = custentity_travel_distance
        if custentity_gshp_volume_per_annum is not None:
            self.custentity_gshp_volume_per_annum = custentity_gshp_volume_per_annum
        if custentity_cust_ufh_competitor is not None:
            self.custentity_cust_ufh_competitor = custentity_cust_ufh_competitor
        if custentityent_fo_rep is not None:
            self.custentityent_fo_rep = custentityent_fo_rep
        if item_pricing is not None:
            self.item_pricing = item_pricing
        if custentity_lead_qualifier is not None:
            self.custentity_lead_qualifier = custentity_lead_qualifier
        if custentity_cust_com_acc_man is not None:
            self.custentity_cust_com_acc_man = custentity_cust_com_acc_man
        if buying_time_frame is not None:
            self.buying_time_frame = buying_time_frame
        if custentity_erpff_p2p_party_endp_scheme is not None:
            self.custentity_erpff_p2p_party_endp_scheme = custentity_erpff_p2p_party_endp_scheme
        if custentity_unvent_hot_water_g3 is not None:
            self.custentity_unvent_hot_water_g3 = custentity_unvent_hot_water_g3
        if custentity_3805_dunning_manager is not None:
            self.custentity_3805_dunning_manager = custentity_3805_dunning_manager
        if campaign_event is not None:
            self.campaign_event = campaign_event
        if custentity_sfa_assigned is not None:
            self.custentity_sfa_assigned = custentity_sfa_assigned
        if custentity_pv_course_atteneded is not None:
            self.custentity_pv_course_atteneded = custentity_pv_course_atteneded
        if custentity_number_emp is not None:
            self.custentity_number_emp = custentity_number_emp
        if custentity_9572_custref_file_format is not None:
            self.custentity_9572_custref_file_format = custentity_9572_custref_file_format
        if contact_list is not None:
            self.contact_list = contact_list
        if custentity_enquiry_floor_insulation is not None:
            self.custentity_enquiry_floor_insulation = custentity_enquiry_floor_insulation
        if custentity_mcs_scheme_provider is not None:
            self.custentity_mcs_scheme_provider = custentity_mcs_scheme_provider
        if currency is not None:
            self.currency = currency
        if parent is not None:
            self.parent = parent
        if custentity_cust_project_engineer is not None:
            self.custentity_cust_project_engineer = custentity_cust_project_engineer
        if custentity_erpff_p2p_basw_tax_scheme is not None:
            self.custentity_erpff_p2p_basw_tax_scheme = custentity_erpff_p2p_basw_tax_scheme
        if price_level is not None:
            self.price_level = price_level
        if image is not None:
            self.image = image
        if custentity_scope_of_business is not None:
            self.custentity_scope_of_business = custentity_scope_of_business
        if custentity_9572_ddcust_entitybank_sub is not None:
            self.custentity_9572_ddcust_entitybank_sub = custentity_9572_ddcust_entitybank_sub
        if custentity_website_existing is not None:
            self.custentity_website_existing = custentity_website_existing

    @property
    def custentity_mm_stopsendingsms(self):
        """Gets the custentity_mm_stopsendingsms of this Customer.  # noqa: E501


        :return: The custentity_mm_stopsendingsms of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_mm_stopsendingsms

    @custentity_mm_stopsendingsms.setter
    def custentity_mm_stopsendingsms(self, custentity_mm_stopsendingsms):
        """Sets the custentity_mm_stopsendingsms of this Customer.


        :param custentity_mm_stopsendingsms: The custentity_mm_stopsendingsms of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_mm_stopsendingsms = custentity_mm_stopsendingsms

    @property
    def custentityinterested_sol_pv(self):
        """Gets the custentityinterested_sol_pv of this Customer.  # noqa: E501


        :return: The custentityinterested_sol_pv of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentityinterested_sol_pv

    @custentityinterested_sol_pv.setter
    def custentityinterested_sol_pv(self, custentityinterested_sol_pv):
        """Sets the custentityinterested_sol_pv of this Customer.


        :param custentityinterested_sol_pv: The custentityinterested_sol_pv of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentityinterested_sol_pv = custentityinterested_sol_pv

    @property
    def last_sale_date(self):
        """Gets the last_sale_date of this Customer.  # noqa: E501

        Returns the date of the last sale to the customer.  # noqa: E501

        :return: The last_sale_date of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._last_sale_date

    @last_sale_date.setter
    def last_sale_date(self, last_sale_date):
        """Sets the last_sale_date of this Customer.

        Returns the date of the last sale to the customer.  # noqa: E501

        :param last_sale_date: The last_sale_date of this Customer.  # noqa: E501
        :type: date
        """

        self._last_sale_date = last_sale_date

    @property
    def custentityent_fod(self):
        """Gets the custentityent_fod of this Customer.  # noqa: E501


        :return: The custentityent_fod of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentityent_fod

    @custentityent_fod.setter
    def custentityent_fod(self, custentityent_fod):
        """Sets the custentityent_fod of this Customer.


        :param custentityent_fod: The custentityent_fod of this Customer.  # noqa: E501
        :type: date
        """

        self._custentityent_fod = custentityent_fod

    @property
    def custentityrecord_start_date(self):
        """Gets the custentityrecord_start_date of this Customer.  # noqa: E501


        :return: The custentityrecord_start_date of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentityrecord_start_date

    @custentityrecord_start_date.setter
    def custentityrecord_start_date(self, custentityrecord_start_date):
        """Sets the custentityrecord_start_date of this Customer.


        :param custentityrecord_start_date: The custentityrecord_start_date of this Customer.  # noqa: E501
        :type: date
        """

        self._custentityrecord_start_date = custentityrecord_start_date

    @property
    def custentity_nibe_hp_parts_discount(self):
        """Gets the custentity_nibe_hp_parts_discount of this Customer.  # noqa: E501


        :return: The custentity_nibe_hp_parts_discount of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_nibe_hp_parts_discount

    @custentity_nibe_hp_parts_discount.setter
    def custentity_nibe_hp_parts_discount(self, custentity_nibe_hp_parts_discount):
        """Sets the custentity_nibe_hp_parts_discount of this Customer.


        :param custentity_nibe_hp_parts_discount: The custentity_nibe_hp_parts_discount of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_nibe_hp_parts_discount = custentity_nibe_hp_parts_discount

    @property
    def consol_balance(self):
        """Gets the consol_balance of this Customer.  # noqa: E501

        The current accounts receivable balance due for the customer-subcustomer hierarchy this customer is a part of is shown here.  # noqa: E501

        :return: The consol_balance of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._consol_balance

    @consol_balance.setter
    def consol_balance(self, consol_balance):
        """Sets the consol_balance of this Customer.

        The current accounts receivable balance due for the customer-subcustomer hierarchy this customer is a part of is shown here.  # noqa: E501

        :param consol_balance: The consol_balance of this Customer.  # noqa: E501
        :type: float
        """

        self._consol_balance = consol_balance

    @property
    def custentity_sol_qual_details(self):
        """Gets the custentity_sol_qual_details of this Customer.  # noqa: E501


        :return: The custentity_sol_qual_details of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_sol_qual_details

    @custentity_sol_qual_details.setter
    def custentity_sol_qual_details(self, custentity_sol_qual_details):
        """Sets the custentity_sol_qual_details of this Customer.


        :param custentity_sol_qual_details: The custentity_sol_qual_details of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_sol_qual_details = custentity_sol_qual_details

    @property
    def overdue_balance(self):
        """Gets the overdue_balance of this Customer.  # noqa: E501

        The Overdue field shows the total amount owed for open transactions that are past their due date based on the invoice terms. Note: For open transactions that do not have a due date, the transaction date is used as the due date to calculate this total. If you use the Multiple Currencies feature, the amount in this field is shown in the customer&apos;s currency.  # noqa: E501

        :return: The overdue_balance of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._overdue_balance

    @overdue_balance.setter
    def overdue_balance(self, overdue_balance):
        """Sets the overdue_balance of this Customer.

        The Overdue field shows the total amount owed for open transactions that are past their due date based on the invoice terms. Note: For open transactions that do not have a due date, the transaction date is used as the due date to calculate this total. If you use the Multiple Currencies feature, the amount in this field is shown in the customer&apos;s currency.  # noqa: E501

        :param overdue_balance: The overdue_balance of this Customer.  # noqa: E501
        :type: float
        """

        self._overdue_balance = overdue_balance

    @property
    def custentity_credit_contact(self):
        """Gets the custentity_credit_contact of this Customer.  # noqa: E501


        :return: The custentity_credit_contact of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_credit_contact

    @custentity_credit_contact.setter
    def custentity_credit_contact(self, custentity_credit_contact):
        """Sets the custentity_credit_contact of this Customer.


        :param custentity_credit_contact: The custentity_credit_contact of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_credit_contact = custentity_credit_contact

    @property
    def custentity_ri_training_note(self):
        """Gets the custentity_ri_training_note of this Customer.  # noqa: E501


        :return: The custentity_ri_training_note of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_ri_training_note

    @custentity_ri_training_note.setter
    def custentity_ri_training_note(self, custentity_ri_training_note):
        """Sets the custentity_ri_training_note of this Customer.


        :param custentity_ri_training_note: The custentity_ri_training_note of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_ri_training_note = custentity_ri_training_note

    @property
    def custentity_ri_cust_service_rating(self):
        """Gets the custentity_ri_cust_service_rating of this Customer.  # noqa: E501


        :return: The custentity_ri_cust_service_rating of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._custentity_ri_cust_service_rating

    @custentity_ri_cust_service_rating.setter
    def custentity_ri_cust_service_rating(self, custentity_ri_cust_service_rating):
        """Sets the custentity_ri_cust_service_rating of this Customer.


        :param custentity_ri_cust_service_rating: The custentity_ri_cust_service_rating of this Customer.  # noqa: E501
        :type: int
        """

        self._custentity_ri_cust_service_rating = custentity_ri_cust_service_rating

    @property
    def custentityinterested_rwh(self):
        """Gets the custentityinterested_rwh of this Customer.  # noqa: E501


        :return: The custentityinterested_rwh of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentityinterested_rwh

    @custentityinterested_rwh.setter
    def custentityinterested_rwh(self, custentityinterested_rwh):
        """Sets the custentityinterested_rwh of this Customer.


        :param custentityinterested_rwh: The custentityinterested_rwh of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentityinterested_rwh = custentityinterested_rwh

    @property
    def custentity_credit_application_form(self):
        """Gets the custentity_credit_application_form of this Customer.  # noqa: E501


        :return: The custentity_credit_application_form of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_credit_application_form

    @custentity_credit_application_form.setter
    def custentity_credit_application_form(self, custentity_credit_application_form):
        """Sets the custentity_credit_application_form of this Customer.


        :param custentity_credit_application_form: The custentity_credit_application_form of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_credit_application_form = custentity_credit_application_form

    @property
    def custentity_ff_sc_entity_ita_apy_code(self):
        """Gets the custentity_ff_sc_entity_ita_apy_code of this Customer.  # noqa: E501


        :return: The custentity_ff_sc_entity_ita_apy_code of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_ff_sc_entity_ita_apy_code

    @custentity_ff_sc_entity_ita_apy_code.setter
    def custentity_ff_sc_entity_ita_apy_code(self, custentity_ff_sc_entity_ita_apy_code):
        """Sets the custentity_ff_sc_entity_ita_apy_code of this Customer.


        :param custentity_ff_sc_entity_ita_apy_code: The custentity_ff_sc_entity_ita_apy_code of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_ff_sc_entity_ita_apy_code = custentity_ff_sc_entity_ita_apy_code

    @property
    def opening_balance(self):
        """Gets the opening_balance of this Customer.  # noqa: E501

        Enter the opening balance of this customer&apos;s account.  # noqa: E501

        :return: The opening_balance of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._opening_balance

    @opening_balance.setter
    def opening_balance(self, opening_balance):
        """Sets the opening_balance of this Customer.

        Enter the opening balance of this customer&apos;s account.  # noqa: E501

        :param opening_balance: The opening_balance of this Customer.  # noqa: E501
        :type: float
        """

        self._opening_balance = opening_balance

    @property
    def custentity_training_info_reqd(self):
        """Gets the custentity_training_info_reqd of this Customer.  # noqa: E501


        :return: The custentity_training_info_reqd of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_training_info_reqd

    @custentity_training_info_reqd.setter
    def custentity_training_info_reqd(self, custentity_training_info_reqd):
        """Sets the custentity_training_info_reqd of this Customer.


        :param custentity_training_info_reqd: The custentity_training_info_reqd of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_training_info_reqd = custentity_training_info_reqd

    @property
    def custentity_towel_rail_disc(self):
        """Gets the custentity_towel_rail_disc of this Customer.  # noqa: E501


        :return: The custentity_towel_rail_disc of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_towel_rail_disc

    @custentity_towel_rail_disc.setter
    def custentity_towel_rail_disc(self, custentity_towel_rail_disc):
        """Sets the custentity_towel_rail_disc of this Customer.


        :param custentity_towel_rail_disc: The custentity_towel_rail_disc of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_towel_rail_disc = custentity_towel_rail_disc

    @property
    def password2(self):
        """Gets the password2 of this Customer.  # noqa: E501

        Reenter the password in this field to verify that you entered the same password twice.  # noqa: E501

        :return: The password2 of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._password2

    @password2.setter
    def password2(self, password2):
        """Sets the password2 of this Customer.

        Reenter the password in this field to verify that you entered the same password twice.  # noqa: E501

        :param password2: The password2 of this Customer.  # noqa: E501
        :type: str
        """

        self._password2 = password2

    @property
    def custentity_creditholdoverride(self):
        """Gets the custentity_creditholdoverride of this Customer.  # noqa: E501


        :return: The custentity_creditholdoverride of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_creditholdoverride

    @custentity_creditholdoverride.setter
    def custentity_creditholdoverride(self, custentity_creditholdoverride):
        """Sets the custentity_creditholdoverride of this Customer.


        :param custentity_creditholdoverride: The custentity_creditholdoverride of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_creditholdoverride = custentity_creditholdoverride

    @property
    def custentity_mcs_cert_reqd(self):
        """Gets the custentity_mcs_cert_reqd of this Customer.  # noqa: E501


        :return: The custentity_mcs_cert_reqd of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_mcs_cert_reqd

    @custentity_mcs_cert_reqd.setter
    def custentity_mcs_cert_reqd(self, custentity_mcs_cert_reqd):
        """Sets the custentity_mcs_cert_reqd of this Customer.


        :param custentity_mcs_cert_reqd: The custentity_mcs_cert_reqd of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_mcs_cert_reqd = custentity_mcs_cert_reqd

    @property
    def custentity_tax_contact_last(self):
        """Gets the custentity_tax_contact_last of this Customer.  # noqa: E501


        :return: The custentity_tax_contact_last of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_tax_contact_last

    @custentity_tax_contact_last.setter
    def custentity_tax_contact_last(self, custentity_tax_contact_last):
        """Sets the custentity_tax_contact_last of this Customer.


        :param custentity_tax_contact_last: The custentity_tax_contact_last of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_tax_contact_last = custentity_tax_contact_last

    @property
    def last_order_date(self):
        """Gets the last_order_date of this Customer.  # noqa: E501

        Returns the date of the last order from the customer.  # noqa: E501

        :return: The last_order_date of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._last_order_date

    @last_order_date.setter
    def last_order_date(self, last_order_date):
        """Sets the last_order_date of this Customer.

        Returns the date of the last order from the customer.  # noqa: E501

        :param last_order_date: The last_order_date of this Customer.  # noqa: E501
        :type: date
        """

        self._last_order_date = last_order_date

    @property
    def custentity_mm_iskeylinkentity(self):
        """Gets the custentity_mm_iskeylinkentity of this Customer.  # noqa: E501


        :return: The custentity_mm_iskeylinkentity of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_mm_iskeylinkentity

    @custentity_mm_iskeylinkentity.setter
    def custentity_mm_iskeylinkentity(self, custentity_mm_iskeylinkentity):
        """Sets the custentity_mm_iskeylinkentity of this Customer.


        :param custentity_mm_iskeylinkentity: The custentity_mm_iskeylinkentity of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_mm_iskeylinkentity = custentity_mm_iskeylinkentity

    @property
    def custentity_email_trade_short(self):
        """Gets the custentity_email_trade_short of this Customer.  # noqa: E501


        :return: The custentity_email_trade_short of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_email_trade_short

    @custentity_email_trade_short.setter
    def custentity_email_trade_short(self, custentity_email_trade_short):
        """Sets the custentity_email_trade_short of this Customer.


        :param custentity_email_trade_short: The custentity_email_trade_short of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_email_trade_short = custentity_email_trade_short

    @property
    def custentity_po_required(self):
        """Gets the custentity_po_required of this Customer.  # noqa: E501


        :return: The custentity_po_required of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_po_required

    @custentity_po_required.setter
    def custentity_po_required(self, custentity_po_required):
        """Sets the custentity_po_required of this Customer.


        :param custentity_po_required: The custentity_po_required of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_po_required = custentity_po_required

    @property
    def custentitycustentity_mcs_app_sentdate(self):
        """Gets the custentitycustentity_mcs_app_sentdate of this Customer.  # noqa: E501


        :return: The custentitycustentity_mcs_app_sentdate of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentitycustentity_mcs_app_sentdate

    @custentitycustentity_mcs_app_sentdate.setter
    def custentitycustentity_mcs_app_sentdate(self, custentitycustentity_mcs_app_sentdate):
        """Sets the custentitycustentity_mcs_app_sentdate of this Customer.


        :param custentitycustentity_mcs_app_sentdate: The custentitycustentity_mcs_app_sentdate of this Customer.  # noqa: E501
        :type: date
        """

        self._custentitycustentity_mcs_app_sentdate = custentitycustentity_mcs_app_sentdate

    @property
    def custentity_mm_iskeylinkprospect(self):
        """Gets the custentity_mm_iskeylinkprospect of this Customer.  # noqa: E501


        :return: The custentity_mm_iskeylinkprospect of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_mm_iskeylinkprospect

    @custentity_mm_iskeylinkprospect.setter
    def custentity_mm_iskeylinkprospect(self, custentity_mm_iskeylinkprospect):
        """Sets the custentity_mm_iskeylinkprospect of this Customer.


        :param custentity_mm_iskeylinkprospect: The custentity_mm_iskeylinkprospect of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_mm_iskeylinkprospect = custentity_mm_iskeylinkprospect

    @property
    def custentity_geographical_cover(self):
        """Gets the custentity_geographical_cover of this Customer.  # noqa: E501


        :return: The custentity_geographical_cover of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_geographical_cover

    @custentity_geographical_cover.setter
    def custentity_geographical_cover(self, custentity_geographical_cover):
        """Sets the custentity_geographical_cover of this Customer.


        :param custentity_geographical_cover: The custentity_geographical_cover of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_geographical_cover = custentity_geographical_cover

    @property
    def custentity_ico(self):
        """Gets the custentity_ico of this Customer.  # noqa: E501


        :return: The custentity_ico of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_ico

    @custentity_ico.setter
    def custentity_ico(self, custentity_ico):
        """Sets the custentity_ico of this Customer.


        :param custentity_ico: The custentity_ico of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_ico = custentity_ico

    @property
    def custentity_entity_latitude(self):
        """Gets the custentity_entity_latitude of this Customer.  # noqa: E501


        :return: The custentity_entity_latitude of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_entity_latitude

    @custentity_entity_latitude.setter
    def custentity_entity_latitude(self, custentity_entity_latitude):
        """Sets the custentity_entity_latitude of this Customer.


        :param custentity_entity_latitude: The custentity_entity_latitude of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_entity_latitude = custentity_entity_latitude

    @property
    def aging(self):
        """Gets the aging of this Customer.  # noqa: E501

        The overdue A/R balance is shown here with the balance totals for each aging period.  # noqa: E501

        :return: The aging of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._aging

    @aging.setter
    def aging(self, aging):
        """Sets the aging of this Customer.

        The overdue A/R balance is shown here with the balance totals for each aging period.  # noqa: E501

        :param aging: The aging of this Customer.  # noqa: E501
        :type: float
        """

        self._aging = aging

    @property
    def symbol_placement(self):
        """Gets the symbol_placement of this Customer.  # noqa: E501


        :return: The symbol_placement of this Customer.  # noqa: E501
        :rtype: CustomerSymbolPlacement
        """
        return self._symbol_placement

    @symbol_placement.setter
    def symbol_placement(self, symbol_placement):
        """Sets the symbol_placement of this Customer.


        :param symbol_placement: The symbol_placement of this Customer.  # noqa: E501
        :type: CustomerSymbolPlacement
        """

        self._symbol_placement = symbol_placement

    @property
    def custentity_bb1_googlemap(self):
        """Gets the custentity_bb1_googlemap of this Customer.  # noqa: E501


        :return: The custentity_bb1_googlemap of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_bb1_googlemap

    @custentity_bb1_googlemap.setter
    def custentity_bb1_googlemap(self, custentity_bb1_googlemap):
        """Sets the custentity_bb1_googlemap of this Customer.


        :param custentity_bb1_googlemap: The custentity_bb1_googlemap of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_bb1_googlemap = custentity_bb1_googlemap

    @property
    def custentity_quote_required(self):
        """Gets the custentity_quote_required of this Customer.  # noqa: E501


        :return: The custentity_quote_required of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentity_quote_required

    @custentity_quote_required.setter
    def custentity_quote_required(self, custentity_quote_required):
        """Sets the custentity_quote_required of this Customer.


        :param custentity_quote_required: The custentity_quote_required of this Customer.  # noqa: E501
        :type: date
        """

        self._custentity_quote_required = custentity_quote_required

    @property
    def custentity_in_enq_ufh_volume(self):
        """Gets the custentity_in_enq_ufh_volume of this Customer.  # noqa: E501


        :return: The custentity_in_enq_ufh_volume of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_in_enq_ufh_volume

    @custentity_in_enq_ufh_volume.setter
    def custentity_in_enq_ufh_volume(self, custentity_in_enq_ufh_volume):
        """Sets the custentity_in_enq_ufh_volume of this Customer.


        :param custentity_in_enq_ufh_volume: The custentity_in_enq_ufh_volume of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_in_enq_ufh_volume = custentity_in_enq_ufh_volume

    @property
    def external_id(self):
        """Gets the external_id of this Customer.  # noqa: E501

        Returns the customer&apos;s external ID, if one is assigned.  # noqa: E501

        :return: The external_id of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this Customer.

        Returns the customer&apos;s external ID, if one is assigned.  # noqa: E501

        :param external_id: The external_id of this Customer.  # noqa: E501
        :type: str
        """

        self._external_id = external_id

    @property
    def custentity_gdpr_offers_consent(self):
        """Gets the custentity_gdpr_offers_consent of this Customer.  # noqa: E501


        :return: The custentity_gdpr_offers_consent of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_gdpr_offers_consent

    @custentity_gdpr_offers_consent.setter
    def custentity_gdpr_offers_consent(self, custentity_gdpr_offers_consent):
        """Sets the custentity_gdpr_offers_consent of this Customer.


        :param custentity_gdpr_offers_consent: The custentity_gdpr_offers_consent of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_gdpr_offers_consent = custentity_gdpr_offers_consent

    @property
    def custentity_erpff_p2p_basw_tax_id(self):
        """Gets the custentity_erpff_p2p_basw_tax_id of this Customer.  # noqa: E501


        :return: The custentity_erpff_p2p_basw_tax_id of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_erpff_p2p_basw_tax_id

    @custentity_erpff_p2p_basw_tax_id.setter
    def custentity_erpff_p2p_basw_tax_id(self, custentity_erpff_p2p_basw_tax_id):
        """Sets the custentity_erpff_p2p_basw_tax_id of this Customer.


        :param custentity_erpff_p2p_basw_tax_id: The custentity_erpff_p2p_basw_tax_id of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_erpff_p2p_basw_tax_id = custentity_erpff_p2p_basw_tax_id

    @property
    def language(self):
        """Gets the language of this Customer.  # noqa: E501


        :return: The language of this Customer.  # noqa: E501
        :rtype: CustomerLanguage
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this Customer.


        :param language: The language of this Customer.  # noqa: E501
        :type: CustomerLanguage
        """

        self._language = language

    @property
    def consol_unbilled_orders(self):
        """Gets the consol_unbilled_orders of this Customer.  # noqa: E501

        This field displays the total amount of orders that have been entered but not yet billed for the customer-subcustomer hierarchy this customer is a part of. If you have enabled the preference Customer Credit Limit Includes Orders, then this total is included in credit limit calculations. Set this preference at Setup &gt; Accounting &gt; Preferences &gt; Accounting Preferences &gt; General.  # noqa: E501

        :return: The consol_unbilled_orders of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._consol_unbilled_orders

    @consol_unbilled_orders.setter
    def consol_unbilled_orders(self, consol_unbilled_orders):
        """Sets the consol_unbilled_orders of this Customer.

        This field displays the total amount of orders that have been entered but not yet billed for the customer-subcustomer hierarchy this customer is a part of. If you have enabled the preference Customer Credit Limit Includes Orders, then this total is included in credit limit calculations. Set this preference at Setup &gt; Accounting &gt; Preferences &gt; Accounting Preferences &gt; General.  # noqa: E501

        :param consol_unbilled_orders: The consol_unbilled_orders of this Customer.  # noqa: E501
        :type: float
        """

        self._consol_unbilled_orders = consol_unbilled_orders

    @property
    def custentity_sfa_assigned_time(self):
        """Gets the custentity_sfa_assigned_time of this Customer.  # noqa: E501


        :return: The custentity_sfa_assigned_time of this Customer.  # noqa: E501
        :rtype: datetime
        """
        return self._custentity_sfa_assigned_time

    @custentity_sfa_assigned_time.setter
    def custentity_sfa_assigned_time(self, custentity_sfa_assigned_time):
        """Sets the custentity_sfa_assigned_time of this Customer.


        :param custentity_sfa_assigned_time: The custentity_sfa_assigned_time of this Customer.  # noqa: E501
        :type: datetime
        """

        self._custentity_sfa_assigned_time = custentity_sfa_assigned_time

    @property
    def custentity_g3_hws_qualification_yn(self):
        """Gets the custentity_g3_hws_qualification_yn of this Customer.  # noqa: E501


        :return: The custentity_g3_hws_qualification_yn of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_g3_hws_qualification_yn

    @custentity_g3_hws_qualification_yn.setter
    def custentity_g3_hws_qualification_yn(self, custentity_g3_hws_qualification_yn):
        """Sets the custentity_g3_hws_qualification_yn of this Customer.


        :param custentity_g3_hws_qualification_yn: The custentity_g3_hws_qualification_yn of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_g3_hws_qualification_yn = custentity_g3_hws_qualification_yn

    @property
    def consol_aging(self):
        """Gets the consol_aging of this Customer.  # noqa: E501

        The overdue consolidated A/R balance is shown here with the balance totals for each aging period. These totals include the balance from all the customers and subcustomers in this hierarchy.  # noqa: E501

        :return: The consol_aging of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._consol_aging

    @consol_aging.setter
    def consol_aging(self, consol_aging):
        """Sets the consol_aging of this Customer.

        The overdue consolidated A/R balance is shown here with the balance totals for each aging period. These totals include the balance from all the customers and subcustomers in this hierarchy.  # noqa: E501

        :param consol_aging: The consol_aging of this Customer.  # noqa: E501
        :type: float
        """

        self._consol_aging = consol_aging

    @property
    def consol_deposit_balance(self):
        """Gets the consol_deposit_balance of this Customer.  # noqa: E501

        This field displays the total amount of unapplied deposits for the customer-subcustomer hierarchy this customer is a member of. Deposits are recorded in the general ledger, as a liability, when the customer makes an advance payment before delivery of goods or services. A deposit balance exists until the goods or services are delivered. Deposits do not affect the customer&apos;s accounts receivable balance.  # noqa: E501

        :return: The consol_deposit_balance of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._consol_deposit_balance

    @consol_deposit_balance.setter
    def consol_deposit_balance(self, consol_deposit_balance):
        """Sets the consol_deposit_balance of this Customer.

        This field displays the total amount of unapplied deposits for the customer-subcustomer hierarchy this customer is a member of. Deposits are recorded in the general ledger, as a liability, when the customer makes an advance payment before delivery of goods or services. A deposit balance exists until the goods or services are delivered. Deposits do not affect the customer&apos;s accounts receivable balance.  # noqa: E501

        :param consol_deposit_balance: The consol_deposit_balance of this Customer.  # noqa: E501
        :type: float
        """

        self._consol_deposit_balance = consol_deposit_balance

    @property
    def mobile_phone(self):
        """Gets the mobile_phone of this Customer.  # noqa: E501

        Enter a mobile or cell phone number for this person.  # noqa: E501

        :return: The mobile_phone of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._mobile_phone

    @mobile_phone.setter
    def mobile_phone(self, mobile_phone):
        """Sets the mobile_phone of this Customer.

        Enter a mobile or cell phone number for this person.  # noqa: E501

        :param mobile_phone: The mobile_phone of this Customer.  # noqa: E501
        :type: str
        """

        self._mobile_phone = mobile_phone

    @property
    def custentity_solar_discount(self):
        """Gets the custentity_solar_discount of this Customer.  # noqa: E501


        :return: The custentity_solar_discount of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_solar_discount

    @custentity_solar_discount.setter
    def custentity_solar_discount(self, custentity_solar_discount):
        """Sets the custentity_solar_discount of this Customer.


        :param custentity_solar_discount: The custentity_solar_discount of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_solar_discount = custentity_solar_discount

    @property
    def custentity_em_discount(self):
        """Gets the custentity_em_discount of this Customer.  # noqa: E501


        :return: The custentity_em_discount of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_em_discount

    @custentity_em_discount.setter
    def custentity_em_discount(self, custentity_em_discount):
        """Sets the custentity_em_discount of this Customer.


        :param custentity_em_discount: The custentity_em_discount of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_em_discount = custentity_em_discount

    @property
    def custentity_onezone_discount(self):
        """Gets the custentity_onezone_discount of this Customer.  # noqa: E501


        :return: The custentity_onezone_discount of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_onezone_discount

    @custentity_onezone_discount.setter
    def custentity_onezone_discount(self, custentity_onezone_discount):
        """Sets the custentity_onezone_discount of this Customer.


        :param custentity_onezone_discount: The custentity_onezone_discount of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_onezone_discount = custentity_onezone_discount

    @property
    def alt_phone(self):
        """Gets the alt_phone of this Customer.  # noqa: E501

        If applicable, enter an alternate phone number for this record.  # noqa: E501

        :return: The alt_phone of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._alt_phone

    @alt_phone.setter
    def alt_phone(self, alt_phone):
        """Sets the alt_phone of this Customer.

        If applicable, enter an alternate phone number for this record.  # noqa: E501

        :param alt_phone: The alt_phone of this Customer.  # noqa: E501
        :type: str
        """

        self._alt_phone = alt_phone

    @property
    def custentity_perf_survey_sent(self):
        """Gets the custentity_perf_survey_sent of this Customer.  # noqa: E501


        :return: The custentity_perf_survey_sent of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentity_perf_survey_sent

    @custentity_perf_survey_sent.setter
    def custentity_perf_survey_sent(self, custentity_perf_survey_sent):
        """Sets the custentity_perf_survey_sent of this Customer.


        :param custentity_perf_survey_sent: The custentity_perf_survey_sent of this Customer.  # noqa: E501
        :type: date
        """

        self._custentity_perf_survey_sent = custentity_perf_survey_sent

    @property
    def custentity_in_enq_core_work(self):
        """Gets the custentity_in_enq_core_work of this Customer.  # noqa: E501


        :return: The custentity_in_enq_core_work of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_in_enq_core_work

    @custentity_in_enq_core_work.setter
    def custentity_in_enq_core_work(self, custentity_in_enq_core_work):
        """Sets the custentity_in_enq_core_work of this Customer.


        :param custentity_in_enq_core_work: The custentity_in_enq_core_work of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_in_enq_core_work = custentity_in_enq_core_work

    @property
    def first_order_date(self):
        """Gets the first_order_date of this Customer.  # noqa: E501

        Returns the date of the first order from the customer.  # noqa: E501

        :return: The first_order_date of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._first_order_date

    @first_order_date.setter
    def first_order_date(self, first_order_date):
        """Sets the first_order_date of this Customer.

        Returns the date of the first order from the customer.  # noqa: E501

        :param first_order_date: The first_order_date of this Customer.  # noqa: E501
        :type: date
        """

        self._first_order_date = first_order_date

    @property
    def fax_transactions(self):
        """Gets the fax_transactions of this Customer.  # noqa: E501

        Set a preferred transaction delivery method for this customer. Choose to send transactions by regular mail, by email, by fax, or by a combination of the three. Then, when you select the customer on a transaction, their preferred delivery method is marked by default. * Email – Check this box to check the To Be Emailed box by default on transactions when this customer is selected. * Print – Check this box to check the To Be Printed box by default on transactions when this customer is selected. * Fax – Check this box to check the To Be Faxed box by default on transactions when this customer is selected. Once you enter these settings on the customer record, these boxes are checked by default for transactions created from the customer record or for transactions that are copied or converted. Note: These settings override any customized settings on transaction forms you use. There are also preferences to set default values for new customer records at Setup &gt; Company &gt; Preferences &gt; Printing, Fax,&amp; Email Preferences. On the Print subtab, Fax subtab, or Email subtab, check Customers Default to [Print/Fax/Email] Transactions. You can also set these fields using the Mass Update function. Go to Lists &gt; Mass Updates &gt; Mass Updates &gt; General and click Customer.  # noqa: E501

        :return: The fax_transactions of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._fax_transactions

    @fax_transactions.setter
    def fax_transactions(self, fax_transactions):
        """Sets the fax_transactions of this Customer.

        Set a preferred transaction delivery method for this customer. Choose to send transactions by regular mail, by email, by fax, or by a combination of the three. Then, when you select the customer on a transaction, their preferred delivery method is marked by default. * Email – Check this box to check the To Be Emailed box by default on transactions when this customer is selected. * Print – Check this box to check the To Be Printed box by default on transactions when this customer is selected. * Fax – Check this box to check the To Be Faxed box by default on transactions when this customer is selected. Once you enter these settings on the customer record, these boxes are checked by default for transactions created from the customer record or for transactions that are copied or converted. Note: These settings override any customized settings on transaction forms you use. There are also preferences to set default values for new customer records at Setup &gt; Company &gt; Preferences &gt; Printing, Fax,&amp; Email Preferences. On the Print subtab, Fax subtab, or Email subtab, check Customers Default to [Print/Fax/Email] Transactions. You can also set these fields using the Mass Update function. Go to Lists &gt; Mass Updates &gt; Mass Updates &gt; General and click Customer.  # noqa: E501

        :param fax_transactions: The fax_transactions of this Customer.  # noqa: E501
        :type: bool
        """

        self._fax_transactions = fax_transactions

    @property
    def custentity_ga_url(self):
        """Gets the custentity_ga_url of this Customer.  # noqa: E501


        :return: The custentity_ga_url of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_ga_url

    @custentity_ga_url.setter
    def custentity_ga_url(self, custentity_ga_url):
        """Sets the custentity_ga_url of this Customer.


        :param custentity_ga_url: The custentity_ga_url of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_ga_url = custentity_ga_url

    @property
    def custentityniceic_accreditation_date(self):
        """Gets the custentityniceic_accreditation_date of this Customer.  # noqa: E501


        :return: The custentityniceic_accreditation_date of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentityniceic_accreditation_date

    @custentityniceic_accreditation_date.setter
    def custentityniceic_accreditation_date(self, custentityniceic_accreditation_date):
        """Sets the custentityniceic_accreditation_date of this Customer.


        :param custentityniceic_accreditation_date: The custentityniceic_accreditation_date of this Customer.  # noqa: E501
        :type: date
        """

        self._custentityniceic_accreditation_date = custentityniceic_accreditation_date

    @property
    def salutation(self):
        """Gets the salutation of this Customer.  # noqa: E501

        Enter the title of this person, such as Mr., Mrs., Ms., Dr., Rev., etc.  # noqa: E501

        :return: The salutation of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._salutation

    @salutation.setter
    def salutation(self, salutation):
        """Sets the salutation of this Customer.

        Enter the title of this person, such as Mr., Mrs., Ms., Dr., Rev., etc.  # noqa: E501

        :param salutation: The salutation of this Customer.  # noqa: E501
        :type: str
        """

        self._salutation = salutation

    @property
    def custentity_hp_instll_prev_yn(self):
        """Gets the custentity_hp_instll_prev_yn of this Customer.  # noqa: E501


        :return: The custentity_hp_instll_prev_yn of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_hp_instll_prev_yn

    @custentity_hp_instll_prev_yn.setter
    def custentity_hp_instll_prev_yn(self, custentity_hp_instll_prev_yn):
        """Sets the custentity_hp_instll_prev_yn of this Customer.


        :param custentity_hp_instll_prev_yn: The custentity_hp_instll_prev_yn of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_hp_instll_prev_yn = custentity_hp_instll_prev_yn

    @property
    def custentity_training_needs(self):
        """Gets the custentity_training_needs of this Customer.  # noqa: E501


        :return: The custentity_training_needs of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_training_needs

    @custentity_training_needs.setter
    def custentity_training_needs(self, custentity_training_needs):
        """Sets the custentity_training_needs of this Customer.


        :param custentity_training_needs: The custentity_training_needs of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_training_needs = custentity_training_needs

    @property
    def custentity_solar_training(self):
        """Gets the custentity_solar_training of this Customer.  # noqa: E501


        :return: The custentity_solar_training of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_solar_training

    @custentity_solar_training.setter
    def custentity_solar_training(self, custentity_solar_training):
        """Sets the custentity_solar_training of this Customer.


        :param custentity_solar_training: The custentity_solar_training of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_solar_training = custentity_solar_training

    @property
    def custentity_notes_created(self):
        """Gets the custentity_notes_created of this Customer.  # noqa: E501


        :return: The custentity_notes_created of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_notes_created

    @custentity_notes_created.setter
    def custentity_notes_created(self, custentity_notes_created):
        """Sets the custentity_notes_created of this Customer.


        :param custentity_notes_created: The custentity_notes_created of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_notes_created = custentity_notes_created

    @property
    def home_phone(self):
        """Gets the home_phone of this Customer.  # noqa: E501

        Enter a home phone number for this person.  # noqa: E501

        :return: The home_phone of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._home_phone

    @home_phone.setter
    def home_phone(self, home_phone):
        """Sets the home_phone of this Customer.

        Enter a home phone number for this person.  # noqa: E501

        :param home_phone: The home_phone of this Customer.  # noqa: E501
        :type: str
        """

        self._home_phone = home_phone

    @property
    def custentity_cis_hmrc_tax(self):
        """Gets the custentity_cis_hmrc_tax of this Customer.  # noqa: E501


        :return: The custentity_cis_hmrc_tax of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_cis_hmrc_tax

    @custentity_cis_hmrc_tax.setter
    def custentity_cis_hmrc_tax(self, custentity_cis_hmrc_tax):
        """Sets the custentity_cis_hmrc_tax of this Customer.


        :param custentity_cis_hmrc_tax: The custentity_cis_hmrc_tax of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_cis_hmrc_tax = custentity_cis_hmrc_tax

    @property
    def custentity_mm_smsreplystatus(self):
        """Gets the custentity_mm_smsreplystatus of this Customer.  # noqa: E501


        :return: The custentity_mm_smsreplystatus of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_mm_smsreplystatus

    @custentity_mm_smsreplystatus.setter
    def custentity_mm_smsreplystatus(self, custentity_mm_smsreplystatus):
        """Sets the custentity_mm_smsreplystatus of this Customer.


        :param custentity_mm_smsreplystatus: The custentity_mm_smsreplystatus of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_mm_smsreplystatus = custentity_mm_smsreplystatus

    @property
    def custentity_comm_install_partner(self):
        """Gets the custentity_comm_install_partner of this Customer.  # noqa: E501


        :return: The custentity_comm_install_partner of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_comm_install_partner

    @custentity_comm_install_partner.setter
    def custentity_comm_install_partner(self, custentity_comm_install_partner):
        """Sets the custentity_comm_install_partner of this Customer.


        :param custentity_comm_install_partner: The custentity_comm_install_partner of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_comm_install_partner = custentity_comm_install_partner

    @property
    def title(self):
        """Gets the title of this Customer.  # noqa: E501

        Enter the job title for this person&apos;s position at his or her company.  # noqa: E501

        :return: The title of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Customer.

        Enter the job title for this person&apos;s position at his or her company.  # noqa: E501

        :param title: The title of this Customer.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def custentity_customer_requirements(self):
        """Gets the custentity_customer_requirements of this Customer.  # noqa: E501


        :return: The custentity_customer_requirements of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_customer_requirements

    @custentity_customer_requirements.setter
    def custentity_customer_requirements(self, custentity_customer_requirements):
        """Sets the custentity_customer_requirements of this Customer.


        :param custentity_customer_requirements: The custentity_customer_requirements of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_customer_requirements = custentity_customer_requirements

    @property
    def shipping_carrier(self):
        """Gets the shipping_carrier of this Customer.  # noqa: E501


        :return: The shipping_carrier of this Customer.  # noqa: E501
        :rtype: CustomerShippingCarrier
        """
        return self._shipping_carrier

    @shipping_carrier.setter
    def shipping_carrier(self, shipping_carrier):
        """Sets the shipping_carrier of this Customer.


        :param shipping_carrier: The shipping_carrier of this Customer.  # noqa: E501
        :type: CustomerShippingCarrier
        """

        self._shipping_carrier = shipping_carrier

    @property
    def custentity_initial_site_address_backup(self):
        """Gets the custentity_initial_site_address_backup of this Customer.  # noqa: E501


        :return: The custentity_initial_site_address_backup of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_initial_site_address_backup

    @custentity_initial_site_address_backup.setter
    def custentity_initial_site_address_backup(self, custentity_initial_site_address_backup):
        """Sets the custentity_initial_site_address_backup of this Customer.


        :param custentity_initial_site_address_backup: The custentity_initial_site_address_backup of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_initial_site_address_backup = custentity_initial_site_address_backup

    @property
    def custentity8(self):
        """Gets the custentity8 of this Customer.  # noqa: E501


        :return: The custentity8 of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity8

    @custentity8.setter
    def custentity8(self, custentity8):
        """Sets the custentity8 of this Customer.


        :param custentity8: The custentity8 of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity8 = custentity8

    @property
    def custentity_dl_sales_rep_bcc(self):
        """Gets the custentity_dl_sales_rep_bcc of this Customer.  # noqa: E501


        :return: The custentity_dl_sales_rep_bcc of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_dl_sales_rep_bcc

    @custentity_dl_sales_rep_bcc.setter
    def custentity_dl_sales_rep_bcc(self, custentity_dl_sales_rep_bcc):
        """Sets the custentity_dl_sales_rep_bcc of this Customer.


        :param custentity_dl_sales_rep_bcc: The custentity_dl_sales_rep_bcc of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_dl_sales_rep_bcc = custentity_dl_sales_rep_bcc

    @property
    def custentity6(self):
        """Gets the custentity6 of this Customer.  # noqa: E501


        :return: The custentity6 of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity6

    @custentity6.setter
    def custentity6(self, custentity6):
        """Sets the custentity6 of this Customer.


        :param custentity6: The custentity6 of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity6 = custentity6

    @property
    def custentity7(self):
        """Gets the custentity7 of this Customer.  # noqa: E501


        :return: The custentity7 of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity7

    @custentity7.setter
    def custentity7(self, custentity7):
        """Sets the custentity7 of this Customer.


        :param custentity7: The custentity7 of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity7 = custentity7

    @property
    def custentity_ri_pl_expiry(self):
        """Gets the custentity_ri_pl_expiry of this Customer.  # noqa: E501


        :return: The custentity_ri_pl_expiry of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentity_ri_pl_expiry

    @custentity_ri_pl_expiry.setter
    def custentity_ri_pl_expiry(self, custentity_ri_pl_expiry):
        """Sets the custentity_ri_pl_expiry of this Customer.


        :param custentity_ri_pl_expiry: The custentity_ri_pl_expiry of this Customer.  # noqa: E501
        :type: date
        """

        self._custentity_ri_pl_expiry = custentity_ri_pl_expiry

    @property
    def custentity_resubscribestatus(self):
        """Gets the custentity_resubscribestatus of this Customer.  # noqa: E501


        :return: The custentity_resubscribestatus of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_resubscribestatus

    @custentity_resubscribestatus.setter
    def custentity_resubscribestatus(self, custentity_resubscribestatus):
        """Sets the custentity_resubscribestatus of this Customer.


        :param custentity_resubscribestatus: The custentity_resubscribestatus of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_resubscribestatus = custentity_resubscribestatus

    @property
    def custentity_init_enq_notes(self):
        """Gets the custentity_init_enq_notes of this Customer.  # noqa: E501


        :return: The custentity_init_enq_notes of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_init_enq_notes

    @custentity_init_enq_notes.setter
    def custentity_init_enq_notes(self, custentity_init_enq_notes):
        """Sets the custentity_init_enq_notes of this Customer.


        :param custentity_init_enq_notes: The custentity_init_enq_notes of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_init_enq_notes = custentity_init_enq_notes

    @property
    def custentity_future_of_business(self):
        """Gets the custentity_future_of_business of this Customer.  # noqa: E501


        :return: The custentity_future_of_business of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_future_of_business

    @custentity_future_of_business.setter
    def custentity_future_of_business(self, custentity_future_of_business):
        """Sets the custentity_future_of_business of this Customer.


        :param custentity_future_of_business: The custentity_future_of_business of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_future_of_business = custentity_future_of_business

    @property
    def custentity_course_comments(self):
        """Gets the custentity_course_comments of this Customer.  # noqa: E501


        :return: The custentity_course_comments of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_course_comments

    @custentity_course_comments.setter
    def custentity_course_comments(self, custentity_course_comments):
        """Sets the custentity_course_comments of this Customer.


        :param custentity_course_comments: The custentity_course_comments of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_course_comments = custentity_course_comments

    @property
    def custentity_average_monthly_spend(self):
        """Gets the custentity_average_monthly_spend of this Customer.  # noqa: E501


        :return: The custentity_average_monthly_spend of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_average_monthly_spend

    @custentity_average_monthly_spend.setter
    def custentity_average_monthly_spend(self, custentity_average_monthly_spend):
        """Sets the custentity_average_monthly_spend of this Customer.


        :param custentity_average_monthly_spend: The custentity_average_monthly_spend of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_average_monthly_spend = custentity_average_monthly_spend

    @property
    def custentity_would_recommend_comments(self):
        """Gets the custentity_would_recommend_comments of this Customer.  # noqa: E501


        :return: The custentity_would_recommend_comments of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_would_recommend_comments

    @custentity_would_recommend_comments.setter
    def custentity_would_recommend_comments(self, custentity_would_recommend_comments):
        """Sets the custentity_would_recommend_comments of this Customer.


        :param custentity_would_recommend_comments: The custentity_would_recommend_comments of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_would_recommend_comments = custentity_would_recommend_comments

    @property
    def send_email(self):
        """Gets the send_email of this Customer.  # noqa: E501

        Check this box to automatically send an email notifying this customer that you have them access to NetSuite. The standard NetSuite email message also contains a link to let the user create a password. If you do not check this box, you must check the Manually Assign or Change Password box. You must create the password, and tell the user the password, and when and how to log in. For security reasons, do not send the password by email.  # noqa: E501

        :return: The send_email of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._send_email

    @send_email.setter
    def send_email(self, send_email):
        """Sets the send_email of this Customer.

        Check this box to automatically send an email notifying this customer that you have them access to NetSuite. The standard NetSuite email message also contains a link to let the user create a password. If you do not check this box, you must check the Manually Assign or Change Password box. You must create the password, and tell the user the password, and when and how to log in. For security reasons, do not send the password by email.  # noqa: E501

        :param send_email: The send_email of this Customer.  # noqa: E501
        :type: bool
        """

        self._send_email = send_email

    @property
    def custentity_3805_dunning_letters_toprint(self):
        """Gets the custentity_3805_dunning_letters_toprint of this Customer.  # noqa: E501


        :return: The custentity_3805_dunning_letters_toprint of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_3805_dunning_letters_toprint

    @custentity_3805_dunning_letters_toprint.setter
    def custentity_3805_dunning_letters_toprint(self, custentity_3805_dunning_letters_toprint):
        """Sets the custentity_3805_dunning_letters_toprint of this Customer.


        :param custentity_3805_dunning_letters_toprint: The custentity_3805_dunning_letters_toprint of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_3805_dunning_letters_toprint = custentity_3805_dunning_letters_toprint

    @property
    def custentity_ri_sales_rating(self):
        """Gets the custentity_ri_sales_rating of this Customer.  # noqa: E501


        :return: The custentity_ri_sales_rating of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._custentity_ri_sales_rating

    @custentity_ri_sales_rating.setter
    def custentity_ri_sales_rating(self, custentity_ri_sales_rating):
        """Sets the custentity_ri_sales_rating of this Customer.


        :param custentity_ri_sales_rating: The custentity_ri_sales_rating of this Customer.  # noqa: E501
        :type: int
        """

        self._custentity_ri_sales_rating = custentity_ri_sales_rating

    @property
    def custentity_gdpr_newsletter_consent(self):
        """Gets the custentity_gdpr_newsletter_consent of this Customer.  # noqa: E501


        :return: The custentity_gdpr_newsletter_consent of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentity_gdpr_newsletter_consent

    @custentity_gdpr_newsletter_consent.setter
    def custentity_gdpr_newsletter_consent(self, custentity_gdpr_newsletter_consent):
        """Sets the custentity_gdpr_newsletter_consent of this Customer.


        :param custentity_gdpr_newsletter_consent: The custentity_gdpr_newsletter_consent of this Customer.  # noqa: E501
        :type: date
        """

        self._custentity_gdpr_newsletter_consent = custentity_gdpr_newsletter_consent

    @property
    def custentity_ufh_approv_trng_details(self):
        """Gets the custentity_ufh_approv_trng_details of this Customer.  # noqa: E501


        :return: The custentity_ufh_approv_trng_details of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_ufh_approv_trng_details

    @custentity_ufh_approv_trng_details.setter
    def custentity_ufh_approv_trng_details(self, custentity_ufh_approv_trng_details):
        """Sets the custentity_ufh_approv_trng_details of this Customer.


        :param custentity_ufh_approv_trng_details: The custentity_ufh_approv_trng_details of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_ufh_approv_trng_details = custentity_ufh_approv_trng_details

    @property
    def custentity_profile_eceived(self):
        """Gets the custentity_profile_eceived of this Customer.  # noqa: E501


        :return: The custentity_profile_eceived of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentity_profile_eceived

    @custentity_profile_eceived.setter
    def custentity_profile_eceived(self, custentity_profile_eceived):
        """Sets the custentity_profile_eceived of this Customer.


        :param custentity_profile_eceived: The custentity_profile_eceived of this Customer.  # noqa: E501
        :type: date
        """

        self._custentity_profile_eceived = custentity_profile_eceived

    @property
    def custentityinterested_ufh(self):
        """Gets the custentityinterested_ufh of this Customer.  # noqa: E501


        :return: The custentityinterested_ufh of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentityinterested_ufh

    @custentityinterested_ufh.setter
    def custentityinterested_ufh(self, custentityinterested_ufh):
        """Sets the custentityinterested_ufh of this Customer.


        :param custentityinterested_ufh: The custentityinterested_ufh of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentityinterested_ufh = custentityinterested_ufh

    @property
    def custentity_qualification_backup(self):
        """Gets the custentity_qualification_backup of this Customer.  # noqa: E501


        :return: The custentity_qualification_backup of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_qualification_backup

    @custentity_qualification_backup.setter
    def custentity_qualification_backup(self, custentity_qualification_backup):
        """Sets the custentity_qualification_backup of this Customer.


        :param custentity_qualification_backup: The custentity_qualification_backup of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_qualification_backup = custentity_qualification_backup

    @property
    def third_party_country(self):
        """Gets the third_party_country of this Customer.  # noqa: E501


        :return: The third_party_country of this Customer.  # noqa: E501
        :rtype: CustomeraddressBookaddressBookAddressCountry
        """
        return self._third_party_country

    @third_party_country.setter
    def third_party_country(self, third_party_country):
        """Sets the third_party_country of this Customer.


        :param third_party_country: The third_party_country of this Customer.  # noqa: E501
        :type: CustomeraddressBookaddressBookAddressCountry
        """

        self._third_party_country = third_party_country

    @property
    def custentity_top_cust_job(self):
        """Gets the custentity_top_cust_job of this Customer.  # noqa: E501


        :return: The custentity_top_cust_job of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_top_cust_job

    @custentity_top_cust_job.setter
    def custentity_top_cust_job(self, custentity_top_cust_job):
        """Sets the custentity_top_cust_job of this Customer.


        :param custentity_top_cust_job: The custentity_top_cust_job of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_top_cust_job = custentity_top_cust_job

    @property
    def custentity_cis_hmrc_varify(self):
        """Gets the custentity_cis_hmrc_varify of this Customer.  # noqa: E501


        :return: The custentity_cis_hmrc_varify of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_cis_hmrc_varify

    @custentity_cis_hmrc_varify.setter
    def custentity_cis_hmrc_varify(self, custentity_cis_hmrc_varify):
        """Sets the custentity_cis_hmrc_varify of this Customer.


        :param custentity_cis_hmrc_varify: The custentity_cis_hmrc_varify of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_cis_hmrc_varify = custentity_cis_hmrc_varify

    @property
    def custentity_credit_insurance_backup(self):
        """Gets the custentity_credit_insurance_backup of this Customer.  # noqa: E501


        :return: The custentity_credit_insurance_backup of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_credit_insurance_backup

    @custentity_credit_insurance_backup.setter
    def custentity_credit_insurance_backup(self, custentity_credit_insurance_backup):
        """Sets the custentity_credit_insurance_backup of this Customer.


        :param custentity_credit_insurance_backup: The custentity_credit_insurance_backup of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_credit_insurance_backup = custentity_credit_insurance_backup

    @property
    def balance(self):
        """Gets the balance of this Customer.  # noqa: E501

        The customer&apos;s current accounts receivable balance due appears here. If you use the Multiple Currencies feature, the amount in this field is shown in the customer&apos;s currency.  # noqa: E501

        :return: The balance of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._balance

    @balance.setter
    def balance(self, balance):
        """Sets the balance of this Customer.

        The customer&apos;s current accounts receivable balance due appears here. If you use the Multiple Currencies feature, the amount in this field is shown in the customer&apos;s currency.  # noqa: E501

        :param balance: The balance of this Customer.  # noqa: E501
        :type: float
        """

        self._balance = balance

    @property
    def custentity_lead_mining_priority(self):
        """Gets the custentity_lead_mining_priority of this Customer.  # noqa: E501


        :return: The custentity_lead_mining_priority of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_lead_mining_priority

    @custentity_lead_mining_priority.setter
    def custentity_lead_mining_priority(self, custentity_lead_mining_priority):
        """Sets the custentity_lead_mining_priority of this Customer.


        :param custentity_lead_mining_priority: The custentity_lead_mining_priority of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_lead_mining_priority = custentity_lead_mining_priority

    @property
    def custentity5(self):
        """Gets the custentity5 of this Customer.  # noqa: E501


        :return: The custentity5 of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity5

    @custentity5.setter
    def custentity5(self, custentity5):
        """Sets the custentity5 of this Customer.


        :param custentity5: The custentity5 of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity5 = custentity5

    @property
    def id(self):
        """Gets the id of this Customer.  # noqa: E501

        The internal ID for this record is shown here. If you do not want to show internal IDs, clear the Show Internal IDs box at Home &gt; Set Preferences.  # noqa: E501

        :return: The id of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Customer.

        The internal ID for this record is shown here. If you do not want to show internal IDs, clear the Show Internal IDs box at Home &gt; Set Preferences.  # noqa: E501

        :param id: The id of this Customer.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def custentity1(self):
        """Gets the custentity1 of this Customer.  # noqa: E501


        :return: The custentity1 of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity1

    @custentity1.setter
    def custentity1(self, custentity1):
        """Sets the custentity1 of this Customer.


        :param custentity1: The custentity1 of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity1 = custentity1

    @property
    def custentity_cis_name(self):
        """Gets the custentity_cis_name of this Customer.  # noqa: E501


        :return: The custentity_cis_name of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_cis_name

    @custentity_cis_name.setter
    def custentity_cis_name(self, custentity_cis_name):
        """Sets the custentity_cis_name of this Customer.


        :param custentity_cis_name: The custentity_cis_name of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_cis_name = custentity_cis_name

    @property
    def custentity_mcs_gshp(self):
        """Gets the custentity_mcs_gshp of this Customer.  # noqa: E501


        :return: The custentity_mcs_gshp of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_mcs_gshp

    @custentity_mcs_gshp.setter
    def custentity_mcs_gshp(self, custentity_mcs_gshp):
        """Sets the custentity_mcs_gshp of this Customer.


        :param custentity_mcs_gshp: The custentity_mcs_gshp of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_mcs_gshp = custentity_mcs_gshp

    @property
    def custentity_housebuilder_contacts(self):
        """Gets the custentity_housebuilder_contacts of this Customer.  # noqa: E501


        :return: The custentity_housebuilder_contacts of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_housebuilder_contacts

    @custentity_housebuilder_contacts.setter
    def custentity_housebuilder_contacts(self, custentity_housebuilder_contacts):
        """Sets the custentity_housebuilder_contacts of this Customer.


        :param custentity_housebuilder_contacts: The custentity_housebuilder_contacts of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_housebuilder_contacts = custentity_housebuilder_contacts

    @property
    def custentity_3805_last_dunning_letter_sent(self):
        """Gets the custentity_3805_last_dunning_letter_sent of this Customer.  # noqa: E501


        :return: The custentity_3805_last_dunning_letter_sent of this Customer.  # noqa: E501
        :rtype: datetime
        """
        return self._custentity_3805_last_dunning_letter_sent

    @custentity_3805_last_dunning_letter_sent.setter
    def custentity_3805_last_dunning_letter_sent(self, custentity_3805_last_dunning_letter_sent):
        """Sets the custentity_3805_last_dunning_letter_sent of this Customer.


        :param custentity_3805_last_dunning_letter_sent: The custentity_3805_last_dunning_letter_sent of this Customer.  # noqa: E501
        :type: datetime
        """

        self._custentity_3805_last_dunning_letter_sent = custentity_3805_last_dunning_letter_sent

    @property
    def custentity_reg_screeder(self):
        """Gets the custentity_reg_screeder of this Customer.  # noqa: E501


        :return: The custentity_reg_screeder of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_reg_screeder

    @custentity_reg_screeder.setter
    def custentity_reg_screeder(self, custentity_reg_screeder):
        """Sets the custentity_reg_screeder of this Customer.


        :param custentity_reg_screeder: The custentity_reg_screeder of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_reg_screeder = custentity_reg_screeder

    @property
    def custentity_invoiceemail(self):
        """Gets the custentity_invoiceemail of this Customer.  # noqa: E501


        :return: The custentity_invoiceemail of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_invoiceemail

    @custentity_invoiceemail.setter
    def custentity_invoiceemail(self, custentity_invoiceemail):
        """Sets the custentity_invoiceemail of this Customer.


        :param custentity_invoiceemail: The custentity_invoiceemail of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_invoiceemail = custentity_invoiceemail

    @property
    def custentity_water_regs_1999(self):
        """Gets the custentity_water_regs_1999 of this Customer.  # noqa: E501


        :return: The custentity_water_regs_1999 of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_water_regs_1999

    @custentity_water_regs_1999.setter
    def custentity_water_regs_1999(self, custentity_water_regs_1999):
        """Sets the custentity_water_regs_1999 of this Customer.


        :param custentity_water_regs_1999: The custentity_water_regs_1999 of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_water_regs_1999 = custentity_water_regs_1999

    @property
    def alcohol_recipient_type(self):
        """Gets the alcohol_recipient_type of this Customer.  # noqa: E501


        :return: The alcohol_recipient_type of this Customer.  # noqa: E501
        :rtype: CustomerAlcoholRecipientType
        """
        return self._alcohol_recipient_type

    @alcohol_recipient_type.setter
    def alcohol_recipient_type(self, alcohol_recipient_type):
        """Sets the alcohol_recipient_type of this Customer.


        :param alcohol_recipient_type: The alcohol_recipient_type of this Customer.  # noqa: E501
        :type: CustomerAlcoholRecipientType
        """

        self._alcohol_recipient_type = alcohol_recipient_type

    @property
    def custentity_oz_installer(self):
        """Gets the custentity_oz_installer of this Customer.  # noqa: E501


        :return: The custentity_oz_installer of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_oz_installer

    @custentity_oz_installer.setter
    def custentity_oz_installer(self, custentity_oz_installer):
        """Sets the custentity_oz_installer of this Customer.


        :param custentity_oz_installer: The custentity_oz_installer of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_oz_installer = custentity_oz_installer

    @property
    def custentity_ri_technical_rating(self):
        """Gets the custentity_ri_technical_rating of this Customer.  # noqa: E501


        :return: The custentity_ri_technical_rating of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._custentity_ri_technical_rating

    @custentity_ri_technical_rating.setter
    def custentity_ri_technical_rating(self, custentity_ri_technical_rating):
        """Sets the custentity_ri_technical_rating of this Customer.


        :param custentity_ri_technical_rating: The custentity_ri_technical_rating of this Customer.  # noqa: E501
        :type: int
        """

        self._custentity_ri_technical_rating = custentity_ri_technical_rating

    @property
    def company_name(self):
        """Gets the company_name of this Customer.  # noqa: E501

        Enter the legal name of the customer. If you use Auto-Generated Numbering, it is important that you enter the customer&apos;s name here, as the Customer Name field fills with the number or code for this record.  # noqa: E501

        :return: The company_name of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this Customer.

        Enter the legal name of the customer. If you use Auto-Generated Numbering, it is important that you enter the customer&apos;s name here, as the Customer Name field fills with the number or code for this record.  # noqa: E501

        :param company_name: The company_name of this Customer.  # noqa: E501
        :type: str
        """

        self._company_name = company_name

    @property
    def default_address(self):
        """Gets the default_address of this Customer.  # noqa: E501

        This field automatically shows the default billing address that you enter and add using the Address subtab.  # noqa: E501

        :return: The default_address of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._default_address

    @default_address.setter
    def default_address(self, default_address):
        """Sets the default_address of this Customer.

        This field automatically shows the default billing address that you enter and add using the Address subtab.  # noqa: E501

        :param default_address: The default_address of this Customer.  # noqa: E501
        :type: str
        """

        self._default_address = default_address

    @property
    def custentity_ga_client_id(self):
        """Gets the custentity_ga_client_id of this Customer.  # noqa: E501


        :return: The custentity_ga_client_id of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_ga_client_id

    @custentity_ga_client_id.setter
    def custentity_ga_client_id(self, custentity_ga_client_id):
        """Sets the custentity_ga_client_id of this Customer.


        :param custentity_ga_client_id: The custentity_ga_client_id of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_ga_client_id = custentity_ga_client_id

    @property
    def custentitysolar_trng_yn(self):
        """Gets the custentitysolar_trng_yn of this Customer.  # noqa: E501


        :return: The custentitysolar_trng_yn of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentitysolar_trng_yn

    @custentitysolar_trng_yn.setter
    def custentitysolar_trng_yn(self, custentitysolar_trng_yn):
        """Sets the custentitysolar_trng_yn of this Customer.


        :param custentitysolar_trng_yn: The custentitysolar_trng_yn of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentitysolar_trng_yn = custentitysolar_trng_yn

    @property
    def custentity_gdpr_contact_consent(self):
        """Gets the custentity_gdpr_contact_consent of this Customer.  # noqa: E501


        :return: The custentity_gdpr_contact_consent of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_gdpr_contact_consent

    @custentity_gdpr_contact_consent.setter
    def custentity_gdpr_contact_consent(self, custentity_gdpr_contact_consent):
        """Sets the custentity_gdpr_contact_consent of this Customer.


        :param custentity_gdpr_contact_consent: The custentity_gdpr_contact_consent of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_gdpr_contact_consent = custentity_gdpr_contact_consent

    @property
    def custentity_cust_last_contact(self):
        """Gets the custentity_cust_last_contact of this Customer.  # noqa: E501


        :return: The custentity_cust_last_contact of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentity_cust_last_contact

    @custentity_cust_last_contact.setter
    def custentity_cust_last_contact(self, custentity_cust_last_contact):
        """Sets the custentity_cust_last_contact of this Customer.


        :param custentity_cust_last_contact: The custentity_cust_last_contact of this Customer.  # noqa: E501
        :type: date
        """

        self._custentity_cust_last_contact = custentity_cust_last_contact

    @property
    def custentity_mcs_membership(self):
        """Gets the custentity_mcs_membership of this Customer.  # noqa: E501


        :return: The custentity_mcs_membership of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_mcs_membership

    @custentity_mcs_membership.setter
    def custentity_mcs_membership(self, custentity_mcs_membership):
        """Sets the custentity_mcs_membership of this Customer.


        :param custentity_mcs_membership: The custentity_mcs_membership of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_mcs_membership = custentity_mcs_membership

    @property
    def custentity_pv_installed_before(self):
        """Gets the custentity_pv_installed_before of this Customer.  # noqa: E501


        :return: The custentity_pv_installed_before of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_pv_installed_before

    @custentity_pv_installed_before.setter
    def custentity_pv_installed_before(self, custentity_pv_installed_before):
        """Sets the custentity_pv_installed_before of this Customer.


        :param custentity_pv_installed_before: The custentity_pv_installed_before of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_pv_installed_before = custentity_pv_installed_before

    @property
    def custentity_other_electrical(self):
        """Gets the custentity_other_electrical of this Customer.  # noqa: E501


        :return: The custentity_other_electrical of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_other_electrical

    @custentity_other_electrical.setter
    def custentity_other_electrical(self, custentity_other_electrical):
        """Sets the custentity_other_electrical of this Customer.


        :param custentity_other_electrical: The custentity_other_electrical of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_other_electrical = custentity_other_electrical

    @property
    def custentity_released_unbilledorders(self):
        """Gets the custentity_released_unbilledorders of this Customer.  # noqa: E501


        :return: The custentity_released_unbilledorders of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_released_unbilledorders

    @custentity_released_unbilledorders.setter
    def custentity_released_unbilledorders(self, custentity_released_unbilledorders):
        """Sets the custentity_released_unbilledorders of this Customer.


        :param custentity_released_unbilledorders: The custentity_released_unbilledorders of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_released_unbilledorders = custentity_released_unbilledorders

    @property
    def custentity_ufh_disc(self):
        """Gets the custentity_ufh_disc of this Customer.  # noqa: E501


        :return: The custentity_ufh_disc of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_ufh_disc

    @custentity_ufh_disc.setter
    def custentity_ufh_disc(self, custentity_ufh_disc):
        """Sets the custentity_ufh_disc of this Customer.


        :param custentity_ufh_disc: The custentity_ufh_disc of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_ufh_disc = custentity_ufh_disc

    @property
    def custentity_tech_finance_note(self):
        """Gets the custentity_tech_finance_note of this Customer.  # noqa: E501


        :return: The custentity_tech_finance_note of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_tech_finance_note

    @custentity_tech_finance_note.setter
    def custentity_tech_finance_note(self, custentity_tech_finance_note):
        """Sets the custentity_tech_finance_note of this Customer.


        :param custentity_tech_finance_note: The custentity_tech_finance_note of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_tech_finance_note = custentity_tech_finance_note

    @property
    def custentity_erpff_p2p_auto_send_document(self):
        """Gets the custentity_erpff_p2p_auto_send_document of this Customer.  # noqa: E501


        :return: The custentity_erpff_p2p_auto_send_document of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_erpff_p2p_auto_send_document

    @custentity_erpff_p2p_auto_send_document.setter
    def custentity_erpff_p2p_auto_send_document(self, custentity_erpff_p2p_auto_send_document):
        """Sets the custentity_erpff_p2p_auto_send_document of this Customer.


        :param custentity_erpff_p2p_auto_send_document: The custentity_erpff_p2p_auto_send_document of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_erpff_p2p_auto_send_document = custentity_erpff_p2p_auto_send_document

    @property
    def custentity_mcs_joining_pack_sent(self):
        """Gets the custentity_mcs_joining_pack_sent of this Customer.  # noqa: E501


        :return: The custentity_mcs_joining_pack_sent of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentity_mcs_joining_pack_sent

    @custentity_mcs_joining_pack_sent.setter
    def custentity_mcs_joining_pack_sent(self, custentity_mcs_joining_pack_sent):
        """Sets the custentity_mcs_joining_pack_sent of this Customer.


        :param custentity_mcs_joining_pack_sent: The custentity_mcs_joining_pack_sent of this Customer.  # noqa: E501
        :type: date
        """

        self._custentity_mcs_joining_pack_sent = custentity_mcs_joining_pack_sent

    @property
    def custentity_gdpr_mailchimp_reconsent(self):
        """Gets the custentity_gdpr_mailchimp_reconsent of this Customer.  # noqa: E501


        :return: The custentity_gdpr_mailchimp_reconsent of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_gdpr_mailchimp_reconsent

    @custentity_gdpr_mailchimp_reconsent.setter
    def custentity_gdpr_mailchimp_reconsent(self, custentity_gdpr_mailchimp_reconsent):
        """Sets the custentity_gdpr_mailchimp_reconsent of this Customer.


        :param custentity_gdpr_mailchimp_reconsent: The custentity_gdpr_mailchimp_reconsent of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_gdpr_mailchimp_reconsent = custentity_gdpr_mailchimp_reconsent

    @property
    def custentity_legacy_num(self):
        """Gets the custentity_legacy_num of this Customer.  # noqa: E501


        :return: The custentity_legacy_num of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_legacy_num

    @custentity_legacy_num.setter
    def custentity_legacy_num(self, custentity_legacy_num):
        """Sets the custentity_legacy_num of this Customer.


        :param custentity_legacy_num: The custentity_legacy_num of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_legacy_num = custentity_legacy_num

    @property
    def custentity_cust_vat_rate(self):
        """Gets the custentity_cust_vat_rate of this Customer.  # noqa: E501


        :return: The custentity_cust_vat_rate of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_cust_vat_rate

    @custentity_cust_vat_rate.setter
    def custentity_cust_vat_rate(self, custentity_cust_vat_rate):
        """Sets the custentity_cust_vat_rate of this Customer.


        :param custentity_cust_vat_rate: The custentity_cust_vat_rate of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_cust_vat_rate = custentity_cust_vat_rate

    @property
    def custentitycust_sys_dep(self):
        """Gets the custentitycust_sys_dep of this Customer.  # noqa: E501


        :return: The custentitycust_sys_dep of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentitycust_sys_dep

    @custentitycust_sys_dep.setter
    def custentitycust_sys_dep(self, custentitycust_sys_dep):
        """Sets the custentitycust_sys_dep of this Customer.


        :param custentitycust_sys_dep: The custentitycust_sys_dep of this Customer.  # noqa: E501
        :type: float
        """

        self._custentitycust_sys_dep = custentitycust_sys_dep

    @property
    def custentity_enquiry_site_add(self):
        """Gets the custentity_enquiry_site_add of this Customer.  # noqa: E501


        :return: The custentity_enquiry_site_add of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_enquiry_site_add

    @custentity_enquiry_site_add.setter
    def custentity_enquiry_site_add(self, custentity_enquiry_site_add):
        """Sets the custentity_enquiry_site_add of this Customer.


        :param custentity_enquiry_site_add: The custentity_enquiry_site_add of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_enquiry_site_add = custentity_enquiry_site_add

    @property
    def custentity_hp_approv_trng_yn(self):
        """Gets the custentity_hp_approv_trng_yn of this Customer.  # noqa: E501


        :return: The custentity_hp_approv_trng_yn of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_hp_approv_trng_yn

    @custentity_hp_approv_trng_yn.setter
    def custentity_hp_approv_trng_yn(self, custentity_hp_approv_trng_yn):
        """Sets the custentity_hp_approv_trng_yn of this Customer.


        :param custentity_hp_approv_trng_yn: The custentity_hp_approv_trng_yn of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_hp_approv_trng_yn = custentity_hp_approv_trng_yn

    @property
    def custentityinterested_training(self):
        """Gets the custentityinterested_training of this Customer.  # noqa: E501


        :return: The custentityinterested_training of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentityinterested_training

    @custentityinterested_training.setter
    def custentityinterested_training(self, custentityinterested_training):
        """Sets the custentityinterested_training of this Customer.


        :param custentityinterested_training: The custentityinterested_training of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentityinterested_training = custentityinterested_training

    @property
    def custentity_17th_edition(self):
        """Gets the custentity_17th_edition of this Customer.  # noqa: E501


        :return: The custentity_17th_edition of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_17th_edition

    @custentity_17th_edition.setter
    def custentity_17th_edition(self, custentity_17th_edition):
        """Sets the custentity_17th_edition of this Customer.


        :param custentity_17th_edition: The custentity_17th_edition of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_17th_edition = custentity_17th_edition

    @property
    def custentity_lastsystemsaledate(self):
        """Gets the custentity_lastsystemsaledate of this Customer.  # noqa: E501


        :return: The custentity_lastsystemsaledate of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentity_lastsystemsaledate

    @custentity_lastsystemsaledate.setter
    def custentity_lastsystemsaledate(self, custentity_lastsystemsaledate):
        """Sets the custentity_lastsystemsaledate of this Customer.


        :param custentity_lastsystemsaledate: The custentity_lastsystemsaledate of this Customer.  # noqa: E501
        :type: date
        """

        self._custentity_lastsystemsaledate = custentity_lastsystemsaledate

    @property
    def custentity_solar_instll_prev_yn(self):
        """Gets the custentity_solar_instll_prev_yn of this Customer.  # noqa: E501


        :return: The custentity_solar_instll_prev_yn of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_solar_instll_prev_yn

    @custentity_solar_instll_prev_yn.setter
    def custentity_solar_instll_prev_yn(self, custentity_solar_instll_prev_yn):
        """Sets the custentity_solar_instll_prev_yn of this Customer.


        :param custentity_solar_instll_prev_yn: The custentity_solar_instll_prev_yn of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_solar_instll_prev_yn = custentity_solar_instll_prev_yn

    @property
    def url(self):
        """Gets the url of this Customer.  # noqa: E501

        Enter the URL associated with this customer.  # noqa: E501

        :return: The url of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Customer.

        Enter the URL associated with this customer.  # noqa: E501

        :param url: The url of this Customer.  # noqa: E501
        :type: str
        """

        self._url = url

    @property
    def custentity_field_sales_managed(self):
        """Gets the custentity_field_sales_managed of this Customer.  # noqa: E501


        :return: The custentity_field_sales_managed of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_field_sales_managed

    @custentity_field_sales_managed.setter
    def custentity_field_sales_managed(self, custentity_field_sales_managed):
        """Sets the custentity_field_sales_managed of this Customer.


        :param custentity_field_sales_managed: The custentity_field_sales_managed of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_field_sales_managed = custentity_field_sales_managed

    @property
    def auto_name(self):
        """Gets the auto_name of this Customer.  # noqa: E501

        Clear this box to manually enter a name for this record. If you leave this box marked, NetSuite assigns a name or number for this record based on your settings at Setup &gt; Set Up Auto-Generated Numbers.  # noqa: E501

        :return: The auto_name of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._auto_name

    @auto_name.setter
    def auto_name(self, auto_name):
        """Sets the auto_name of this Customer.

        Clear this box to manually enter a name for this record. If you leave this box marked, NetSuite assigns a name or number for this record based on your settings at Setup &gt; Set Up Auto-Generated Numbers.  # noqa: E501

        :param auto_name: The auto_name of this Customer.  # noqa: E501
        :type: bool
        """

        self._auto_name = auto_name

    @property
    def custentity_cv_dob(self):
        """Gets the custentity_cv_dob of this Customer.  # noqa: E501


        :return: The custentity_cv_dob of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentity_cv_dob

    @custentity_cv_dob.setter
    def custentity_cv_dob(self, custentity_cv_dob):
        """Sets the custentity_cv_dob of this Customer.


        :param custentity_cv_dob: The custentity_cv_dob of this Customer.  # noqa: E501
        :type: date
        """

        self._custentity_cv_dob = custentity_cv_dob

    @property
    def ship_complete(self):
        """Gets the ship_complete of this Customer.  # noqa: E501

        Check this box if you only want to ship orders to this customer when they are completely fulfilled.  # noqa: E501

        :return: The ship_complete of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._ship_complete

    @ship_complete.setter
    def ship_complete(self, ship_complete):
        """Sets the ship_complete of this Customer.

        Check this box if you only want to ship orders to this customer when they are completely fulfilled.  # noqa: E501

        :param ship_complete: The ship_complete of this Customer.  # noqa: E501
        :type: bool
        """

        self._ship_complete = ship_complete

    @property
    def third_party_carrier(self):
        """Gets the third_party_carrier of this Customer.  # noqa: E501


        :return: The third_party_carrier of this Customer.  # noqa: E501
        :rtype: CustomerThirdPartyCarrier
        """
        return self._third_party_carrier

    @third_party_carrier.setter
    def third_party_carrier(self, third_party_carrier):
        """Sets the third_party_carrier of this Customer.


        :param third_party_carrier: The third_party_carrier of this Customer.  # noqa: E501
        :type: CustomerThirdPartyCarrier
        """

        self._third_party_carrier = third_party_carrier

    @property
    def custentity_in_enq_mcs(self):
        """Gets the custentity_in_enq_mcs of this Customer.  # noqa: E501


        :return: The custentity_in_enq_mcs of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_in_enq_mcs

    @custentity_in_enq_mcs.setter
    def custentity_in_enq_mcs(self, custentity_in_enq_mcs):
        """Sets the custentity_in_enq_mcs of this Customer.


        :param custentity_in_enq_mcs: The custentity_in_enq_mcs of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_in_enq_mcs = custentity_in_enq_mcs

    @property
    def custentity_emcs_vouchers_issued(self):
        """Gets the custentity_emcs_vouchers_issued of this Customer.  # noqa: E501


        :return: The custentity_emcs_vouchers_issued of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._custentity_emcs_vouchers_issued

    @custentity_emcs_vouchers_issued.setter
    def custentity_emcs_vouchers_issued(self, custentity_emcs_vouchers_issued):
        """Sets the custentity_emcs_vouchers_issued of this Customer.


        :param custentity_emcs_vouchers_issued: The custentity_emcs_vouchers_issued of this Customer.  # noqa: E501
        :type: int
        """

        self._custentity_emcs_vouchers_issued = custentity_emcs_vouchers_issued

    @property
    def custentity_in_enq_projects(self):
        """Gets the custentity_in_enq_projects of this Customer.  # noqa: E501


        :return: The custentity_in_enq_projects of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_in_enq_projects

    @custentity_in_enq_projects.setter
    def custentity_in_enq_projects(self, custentity_in_enq_projects):
        """Sets the custentity_in_enq_projects of this Customer.


        :param custentity_in_enq_projects: The custentity_in_enq_projects of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_in_enq_projects = custentity_in_enq_projects

    @property
    def custentity_comm_pref_email(self):
        """Gets the custentity_comm_pref_email of this Customer.  # noqa: E501


        :return: The custentity_comm_pref_email of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_comm_pref_email

    @custentity_comm_pref_email.setter
    def custentity_comm_pref_email(self, custentity_comm_pref_email):
        """Sets the custentity_comm_pref_email of this Customer.


        :param custentity_comm_pref_email: The custentity_comm_pref_email of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_comm_pref_email = custentity_comm_pref_email

    @property
    def custentitytop_customer(self):
        """Gets the custentitytop_customer of this Customer.  # noqa: E501


        :return: The custentitytop_customer of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentitytop_customer

    @custentitytop_customer.setter
    def custentitytop_customer(self, custentitytop_customer):
        """Sets the custentitytop_customer of this Customer.


        :param custentitytop_customer: The custentitytop_customer of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentitytop_customer = custentitytop_customer

    @property
    def custentity_printed_inv_state(self):
        """Gets the custentity_printed_inv_state of this Customer.  # noqa: E501


        :return: The custentity_printed_inv_state of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_printed_inv_state

    @custentity_printed_inv_state.setter
    def custentity_printed_inv_state(self, custentity_printed_inv_state):
        """Sets the custentity_printed_inv_state of this Customer.


        :param custentity_printed_inv_state: The custentity_printed_inv_state of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_printed_inv_state = custentity_printed_inv_state

    @property
    def custentity_ga_medium(self):
        """Gets the custentity_ga_medium of this Customer.  # noqa: E501


        :return: The custentity_ga_medium of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_ga_medium

    @custentity_ga_medium.setter
    def custentity_ga_medium(self, custentity_ga_medium):
        """Sets the custentity_ga_medium of this Customer.


        :param custentity_ga_medium: The custentity_ga_medium of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_ga_medium = custentity_ga_medium

    @property
    def custentityplans_available(self):
        """Gets the custentityplans_available of this Customer.  # noqa: E501


        :return: The custentityplans_available of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentityplans_available

    @custentityplans_available.setter
    def custentityplans_available(self, custentityplans_available):
        """Sets the custentityplans_available of this Customer.


        :param custentityplans_available: The custentityplans_available of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentityplans_available = custentityplans_available

    @property
    def unbilled_orders(self):
        """Gets the unbilled_orders of this Customer.  # noqa: E501

        This field displays the total amount of orders that have been entered but not yet billed. If you have enabled the preference Customer Credit Limit Includes Orders, then this total is included in credit limit calculations. Set this preference at Setup &gt; Accounting &gt; Preferences &gt; Accounting Preferences &gt; General. If you use the Multiple Currencies feature, the amount in this field is shown in the customer&apos;s currency.  # noqa: E501

        :return: The unbilled_orders of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._unbilled_orders

    @unbilled_orders.setter
    def unbilled_orders(self, unbilled_orders):
        """Sets the unbilled_orders of this Customer.

        This field displays the total amount of orders that have been entered but not yet billed. If you have enabled the preference Customer Credit Limit Includes Orders, then this total is included in credit limit calculations. Set this preference at Setup &gt; Accounting &gt; Preferences &gt; Accounting Preferences &gt; General. If you use the Multiple Currencies feature, the amount in this field is shown in the customer&apos;s currency.  # noqa: E501

        :param unbilled_orders: The unbilled_orders of this Customer.  # noqa: E501
        :type: float
        """

        self._unbilled_orders = unbilled_orders

    @property
    def custentity_3805_dunning_letters_toemail(self):
        """Gets the custentity_3805_dunning_letters_toemail of this Customer.  # noqa: E501


        :return: The custentity_3805_dunning_letters_toemail of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_3805_dunning_letters_toemail

    @custentity_3805_dunning_letters_toemail.setter
    def custentity_3805_dunning_letters_toemail(self, custentity_3805_dunning_letters_toemail):
        """Sets the custentity_3805_dunning_letters_toemail of this Customer.


        :param custentity_3805_dunning_letters_toemail: The custentity_3805_dunning_letters_toemail of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_3805_dunning_letters_toemail = custentity_3805_dunning_letters_toemail

    @property
    def custentity_department(self):
        """Gets the custentity_department of this Customer.  # noqa: E501


        :return: The custentity_department of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_department

    @custentity_department.setter
    def custentity_department(self, custentity_department):
        """Sets the custentity_department of this Customer.


        :param custentity_department: The custentity_department of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_department = custentity_department

    @property
    def custentity_salesteamupdatestatus(self):
        """Gets the custentity_salesteamupdatestatus of this Customer.  # noqa: E501


        :return: The custentity_salesteamupdatestatus of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_salesteamupdatestatus

    @custentity_salesteamupdatestatus.setter
    def custentity_salesteamupdatestatus(self, custentity_salesteamupdatestatus):
        """Sets the custentity_salesteamupdatestatus of this Customer.


        :param custentity_salesteamupdatestatus: The custentity_salesteamupdatestatus of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_salesteamupdatestatus = custentity_salesteamupdatestatus

    @property
    def custentity_service_partner(self):
        """Gets the custentity_service_partner of this Customer.  # noqa: E501


        :return: The custentity_service_partner of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_service_partner

    @custentity_service_partner.setter
    def custentity_service_partner(self, custentity_service_partner):
        """Sets the custentity_service_partner of this Customer.


        :param custentity_service_partner: The custentity_service_partner of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_service_partner = custentity_service_partner

    @property
    def custentity_outstanding(self):
        """Gets the custentity_outstanding of this Customer.  # noqa: E501


        :return: The custentity_outstanding of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_outstanding

    @custentity_outstanding.setter
    def custentity_outstanding(self, custentity_outstanding):
        """Sets the custentity_outstanding of this Customer.


        :param custentity_outstanding: The custentity_outstanding of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_outstanding = custentity_outstanding

    @property
    def custentity_ga_source(self):
        """Gets the custentity_ga_source of this Customer.  # noqa: E501


        :return: The custentity_ga_source of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_ga_source

    @custentity_ga_source.setter
    def custentity_ga_source(self, custentity_ga_source):
        """Sets the custentity_ga_source of this Customer.


        :param custentity_ga_source: The custentity_ga_source of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_ga_source = custentity_ga_source

    @property
    def custentitycredit_insurance_detail(self):
        """Gets the custentitycredit_insurance_detail of this Customer.  # noqa: E501


        :return: The custentitycredit_insurance_detail of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentitycredit_insurance_detail

    @custentitycredit_insurance_detail.setter
    def custentitycredit_insurance_detail(self, custentitycredit_insurance_detail):
        """Sets the custentitycredit_insurance_detail of this Customer.


        :param custentitycredit_insurance_detail: The custentitycredit_insurance_detail of this Customer.  # noqa: E501
        :type: str
        """

        self._custentitycredit_insurance_detail = custentitycredit_insurance_detail

    @property
    def custentity_gshp_installer(self):
        """Gets the custentity_gshp_installer of this Customer.  # noqa: E501


        :return: The custentity_gshp_installer of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_gshp_installer

    @custentity_gshp_installer.setter
    def custentity_gshp_installer(self, custentity_gshp_installer):
        """Sets the custentity_gshp_installer of this Customer.


        :param custentity_gshp_installer: The custentity_gshp_installer of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_gshp_installer = custentity_gshp_installer

    @property
    def override_currency_format(self):
        """Gets the override_currency_format of this Customer.  # noqa: E501

        Check this box to customize the currency format.  # noqa: E501

        :return: The override_currency_format of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._override_currency_format

    @override_currency_format.setter
    def override_currency_format(self, override_currency_format):
        """Sets the override_currency_format of this Customer.

        Check this box to customize the currency format.  # noqa: E501

        :param override_currency_format: The override_currency_format of this Customer.  # noqa: E501
        :type: bool
        """

        self._override_currency_format = override_currency_format

    @property
    def custentity_build_stage_score(self):
        """Gets the custentity_build_stage_score of this Customer.  # noqa: E501


        :return: The custentity_build_stage_score of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_build_stage_score

    @custentity_build_stage_score.setter
    def custentity_build_stage_score(self, custentity_build_stage_score):
        """Sets the custentity_build_stage_score of this Customer.


        :param custentity_build_stage_score: The custentity_build_stage_score of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_build_stage_score = custentity_build_stage_score

    @property
    def custentity_not_using_nh_comments(self):
        """Gets the custentity_not_using_nh_comments of this Customer.  # noqa: E501


        :return: The custentity_not_using_nh_comments of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_not_using_nh_comments

    @custentity_not_using_nh_comments.setter
    def custentity_not_using_nh_comments(self, custentity_not_using_nh_comments):
        """Sets the custentity_not_using_nh_comments of this Customer.


        :param custentity_not_using_nh_comments: The custentity_not_using_nh_comments of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_not_using_nh_comments = custentity_not_using_nh_comments

    @property
    def custentity_tax_contact_first(self):
        """Gets the custentity_tax_contact_first of this Customer.  # noqa: E501


        :return: The custentity_tax_contact_first of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_tax_contact_first

    @custentity_tax_contact_first.setter
    def custentity_tax_contact_first(self, custentity_tax_contact_first):
        """Sets the custentity_tax_contact_first of this Customer.


        :param custentity_tax_contact_first: The custentity_tax_contact_first of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_tax_contact_first = custentity_tax_contact_first

    @property
    def custentity_gdpr(self):
        """Gets the custentity_gdpr of this Customer.  # noqa: E501


        :return: The custentity_gdpr of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_gdpr

    @custentity_gdpr.setter
    def custentity_gdpr(self, custentity_gdpr):
        """Sets the custentity_gdpr of this Customer.


        :param custentity_gdpr: The custentity_gdpr of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_gdpr = custentity_gdpr

    @property
    def is_inactive(self):
        """Gets the is_inactive of this Customer.  # noqa: E501

        When you check this box, this customer will no longer appear on customer, prospect or lead list unless you check the Show Inactives box at the bottom of the list page. This customer&apos;s name will also no longer appear in other dropdown lists containing customers, and the customer will no longer have access to NetSuite or be able to sign into your Web store.  # noqa: E501

        :return: The is_inactive of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._is_inactive

    @is_inactive.setter
    def is_inactive(self, is_inactive):
        """Sets the is_inactive of this Customer.

        When you check this box, this customer will no longer appear on customer, prospect or lead list unless you check the Show Inactives box at the bottom of the list page. This customer&apos;s name will also no longer appear in other dropdown lists containing customers, and the customer will no longer have access to NetSuite or be able to sign into your Web store.  # noqa: E501

        :param is_inactive: The is_inactive of this Customer.  # noqa: E501
        :type: bool
        """

        self._is_inactive = is_inactive

    @property
    def custentity_number_of_floors(self):
        """Gets the custentity_number_of_floors of this Customer.  # noqa: E501


        :return: The custentity_number_of_floors of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_number_of_floors

    @custentity_number_of_floors.setter
    def custentity_number_of_floors(self, custentity_number_of_floors):
        """Sets the custentity_number_of_floors of this Customer.


        :param custentity_number_of_floors: The custentity_number_of_floors of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_number_of_floors = custentity_number_of_floors

    @property
    def custentity_pv_qual_details(self):
        """Gets the custentity_pv_qual_details of this Customer.  # noqa: E501


        :return: The custentity_pv_qual_details of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_pv_qual_details

    @custentity_pv_qual_details.setter
    def custentity_pv_qual_details(self, custentity_pv_qual_details):
        """Sets the custentity_pv_qual_details of this Customer.


        :param custentity_pv_qual_details: The custentity_pv_qual_details of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_pv_qual_details = custentity_pv_qual_details

    @property
    def custentity_profile_sent(self):
        """Gets the custentity_profile_sent of this Customer.  # noqa: E501


        :return: The custentity_profile_sent of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_profile_sent

    @custentity_profile_sent.setter
    def custentity_profile_sent(self, custentity_profile_sent):
        """Sets the custentity_profile_sent of this Customer.


        :param custentity_profile_sent: The custentity_profile_sent of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_profile_sent = custentity_profile_sent

    @property
    def custentity_cust_first_quote_fu(self):
        """Gets the custentity_cust_first_quote_fu of this Customer.  # noqa: E501


        :return: The custentity_cust_first_quote_fu of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_cust_first_quote_fu

    @custentity_cust_first_quote_fu.setter
    def custentity_cust_first_quote_fu(self, custentity_cust_first_quote_fu):
        """Sets the custentity_cust_first_quote_fu of this Customer.


        :param custentity_cust_first_quote_fu: The custentity_cust_first_quote_fu of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_cust_first_quote_fu = custentity_cust_first_quote_fu

    @property
    def custentity_cust_next_contact(self):
        """Gets the custentity_cust_next_contact of this Customer.  # noqa: E501


        :return: The custentity_cust_next_contact of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentity_cust_next_contact

    @custentity_cust_next_contact.setter
    def custentity_cust_next_contact(self, custentity_cust_next_contact):
        """Sets the custentity_cust_next_contact of this Customer.


        :param custentity_cust_next_contact: The custentity_cust_next_contact of this Customer.  # noqa: E501
        :type: date
        """

        self._custentity_cust_next_contact = custentity_cust_next_contact

    @property
    def negative_number_format(self):
        """Gets the negative_number_format of this Customer.  # noqa: E501


        :return: The negative_number_format of this Customer.  # noqa: E501
        :rtype: CustomerNegativeNumberFormat
        """
        return self._negative_number_format

    @negative_number_format.setter
    def negative_number_format(self, negative_number_format):
        """Sets the negative_number_format of this Customer.


        :param negative_number_format: The negative_number_format of this Customer.  # noqa: E501
        :type: CustomerNegativeNumberFormat
        """

        self._negative_number_format = negative_number_format

    @property
    def custentity_fc_disc(self):
        """Gets the custentity_fc_disc of this Customer.  # noqa: E501


        :return: The custentity_fc_disc of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_fc_disc

    @custentity_fc_disc.setter
    def custentity_fc_disc(self, custentity_fc_disc):
        """Sets the custentity_fc_disc of this Customer.


        :param custentity_fc_disc: The custentity_fc_disc of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_fc_disc = custentity_fc_disc

    @property
    def custentity_health_safety_man_hdling(self):
        """Gets the custentity_health_safety_man_hdling of this Customer.  # noqa: E501


        :return: The custentity_health_safety_man_hdling of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_health_safety_man_hdling

    @custentity_health_safety_man_hdling.setter
    def custentity_health_safety_man_hdling(self, custentity_health_safety_man_hdling):
        """Sets the custentity_health_safety_man_hdling of this Customer.


        :param custentity_health_safety_man_hdling: The custentity_health_safety_man_hdling of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_health_safety_man_hdling = custentity_health_safety_man_hdling

    @property
    def comments(self):
        """Gets the comments of this Customer.  # noqa: E501

        Enter any other information you wish to track for this customer.  # noqa: E501

        :return: The comments of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this Customer.

        Enter any other information you wish to track for this customer.  # noqa: E501

        :param comments: The comments of this Customer.  # noqa: E501
        :type: str
        """

        self._comments = comments

    @property
    def account_number(self):
        """Gets the account_number of this Customer.  # noqa: E501

        If you assign accounts to your customers, enter an account number for this customer here.  # noqa: E501

        :return: The account_number of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number):
        """Sets the account_number of this Customer.

        If you assign accounts to your customers, enter an account number for this customer here.  # noqa: E501

        :param account_number: The account_number of this Customer.  # noqa: E501
        :type: str
        """

        self._account_number = account_number

    @property
    def consol_days_overdue(self):
        """Gets the consol_days_overdue of this Customer.  # noqa: E501

        This field shows the number of days overdue the consolidated overdue balance is.  # noqa: E501

        :return: The consol_days_overdue of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._consol_days_overdue

    @consol_days_overdue.setter
    def consol_days_overdue(self, consol_days_overdue):
        """Sets the consol_days_overdue of this Customer.

        This field shows the number of days overdue the consolidated overdue balance is.  # noqa: E501

        :param consol_days_overdue: The consol_days_overdue of this Customer.  # noqa: E501
        :type: int
        """

        self._consol_days_overdue = consol_days_overdue

    @property
    def custentity_sol_installer(self):
        """Gets the custentity_sol_installer of this Customer.  # noqa: E501


        :return: The custentity_sol_installer of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_sol_installer

    @custentity_sol_installer.setter
    def custentity_sol_installer(self, custentity_sol_installer):
        """Sets the custentity_sol_installer of this Customer.


        :param custentity_sol_installer: The custentity_sol_installer of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_sol_installer = custentity_sol_installer

    @property
    def reminder_days(self):
        """Gets the reminder_days of this Customer.  # noqa: E501

        Enter how many days before the end date you want to be reminded that this customer&apos;s contract or job service needs renewing. You can set the reminder to appear in the Reminders portlet on your Home, Lists and Transactions pages by clicking Customize Page on each page. On the Layout tab, click the Right Side Content subtab, and check the Reminders box. Then click the Reminders subtab, and check the Customers to Review box. Click Save.  # noqa: E501

        :return: The reminder_days of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._reminder_days

    @reminder_days.setter
    def reminder_days(self, reminder_days):
        """Sets the reminder_days of this Customer.

        Enter how many days before the end date you want to be reminded that this customer&apos;s contract or job service needs renewing. You can set the reminder to appear in the Reminders portlet on your Home, Lists and Transactions pages by clicking Customize Page on each page. On the Layout tab, click the Right Side Content subtab, and check the Reminders box. Then click the Reminders subtab, and check the Customers to Review box. Click Save.  # noqa: E501

        :param reminder_days: The reminder_days of this Customer.  # noqa: E501
        :type: int
        """

        self._reminder_days = reminder_days

    @property
    def last_modified_date(self):
        """Gets the last_modified_date of this Customer.  # noqa: E501

        Returns the date on which the customer record was last modified.  # noqa: E501

        :return: The last_modified_date of this Customer.  # noqa: E501
        :rtype: datetime
        """
        return self._last_modified_date

    @last_modified_date.setter
    def last_modified_date(self, last_modified_date):
        """Sets the last_modified_date of this Customer.

        Returns the date on which the customer record was last modified.  # noqa: E501

        :param last_modified_date: The last_modified_date of this Customer.  # noqa: E501
        :type: datetime
        """

        self._last_modified_date = last_modified_date

    @property
    def print_transactions(self):
        """Gets the print_transactions of this Customer.  # noqa: E501

        Set a preferred transaction delivery method for this customer. Choose to send transactions by regular mail, by email, by fax, or by a combination of the three. Then, when you select the customer on a transaction, their preferred delivery method is marked by default. * Email – Check this box to check the To Be Emailed box by default on transactions when this customer is selected. * Print – Check this box to check the To Be Printed box by default on transactions when this customer is selected. * Fax – Check this box to check the To Be Faxed box by default on transactions when this customer is selected. Once you enter these settings on the customer record, these boxes are checked by default for transactions created from the customer record or for transactions that are copied or converted. Note: These settings override any customized settings on transaction forms you use. There are also preferences to set default values for new customer records at Setup &gt; Company &gt; Preferences &gt; Printing, Fax,&amp; Email Preferences. On the Print subtab, Fax subtab, or Email subtab, check Customers Default to [Print/Fax/Email] Transactions. You can also set these fields using the Mass Update function. Go to Lists &gt; Mass Updates &gt; Mass Updates &gt; General and click Customer.  # noqa: E501

        :return: The print_transactions of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._print_transactions

    @print_transactions.setter
    def print_transactions(self, print_transactions):
        """Sets the print_transactions of this Customer.

        Set a preferred transaction delivery method for this customer. Choose to send transactions by regular mail, by email, by fax, or by a combination of the three. Then, when you select the customer on a transaction, their preferred delivery method is marked by default. * Email – Check this box to check the To Be Emailed box by default on transactions when this customer is selected. * Print – Check this box to check the To Be Printed box by default on transactions when this customer is selected. * Fax – Check this box to check the To Be Faxed box by default on transactions when this customer is selected. Once you enter these settings on the customer record, these boxes are checked by default for transactions created from the customer record or for transactions that are copied or converted. Note: These settings override any customized settings on transaction forms you use. There are also preferences to set default values for new customer records at Setup &gt; Company &gt; Preferences &gt; Printing, Fax,&amp; Email Preferences. On the Print subtab, Fax subtab, or Email subtab, check Customers Default to [Print/Fax/Email] Transactions. You can also set these fields using the Mass Update function. Go to Lists &gt; Mass Updates &gt; Mass Updates &gt; General and click Customer.  # noqa: E501

        :param print_transactions: The print_transactions of this Customer.  # noqa: E501
        :type: bool
        """

        self._print_transactions = print_transactions

    @property
    def custentity_bb1_googlemap_2(self):
        """Gets the custentity_bb1_googlemap_2 of this Customer.  # noqa: E501


        :return: The custentity_bb1_googlemap_2 of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_bb1_googlemap_2

    @custentity_bb1_googlemap_2.setter
    def custentity_bb1_googlemap_2(self, custentity_bb1_googlemap_2):
        """Sets the custentity_bb1_googlemap_2 of this Customer.


        :param custentity_bb1_googlemap_2: The custentity_bb1_googlemap_2 of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_bb1_googlemap_2 = custentity_bb1_googlemap_2

    @property
    def custentity_po_document_req(self):
        """Gets the custentity_po_document_req of this Customer.  # noqa: E501


        :return: The custentity_po_document_req of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_po_document_req

    @custentity_po_document_req.setter
    def custentity_po_document_req(self, custentity_po_document_req):
        """Sets the custentity_po_document_req of this Customer.


        :param custentity_po_document_req: The custentity_po_document_req of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_po_document_req = custentity_po_document_req

    @property
    def custentity_co_mailing_dear(self):
        """Gets the custentity_co_mailing_dear of this Customer.  # noqa: E501


        :return: The custentity_co_mailing_dear of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_co_mailing_dear

    @custentity_co_mailing_dear.setter
    def custentity_co_mailing_dear(self, custentity_co_mailing_dear):
        """Sets the custentity_co_mailing_dear of this Customer.


        :param custentity_co_mailing_dear: The custentity_co_mailing_dear of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_co_mailing_dear = custentity_co_mailing_dear

    @property
    def custentity_in_enq_ufhexp(self):
        """Gets the custentity_in_enq_ufhexp of this Customer.  # noqa: E501


        :return: The custentity_in_enq_ufhexp of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_in_enq_ufhexp

    @custentity_in_enq_ufhexp.setter
    def custentity_in_enq_ufhexp(self, custentity_in_enq_ufhexp):
        """Sets the custentity_in_enq_ufhexp of this Customer.


        :param custentity_in_enq_ufhexp: The custentity_in_enq_ufhexp of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_in_enq_ufhexp = custentity_in_enq_ufhexp

    @property
    def custentity_dic(self):
        """Gets the custentity_dic of this Customer.  # noqa: E501


        :return: The custentity_dic of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_dic

    @custentity_dic.setter
    def custentity_dic(self, custentity_dic):
        """Sets the custentity_dic of this Customer.


        :param custentity_dic: The custentity_dic of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_dic = custentity_dic

    @property
    def custentity_sfa_reassign(self):
        """Gets the custentity_sfa_reassign of this Customer.  # noqa: E501


        :return: The custentity_sfa_reassign of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_sfa_reassign

    @custentity_sfa_reassign.setter
    def custentity_sfa_reassign(self, custentity_sfa_reassign):
        """Sets the custentity_sfa_reassign of this Customer.


        :param custentity_sfa_reassign: The custentity_sfa_reassign of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_sfa_reassign = custentity_sfa_reassign

    @property
    def custentity_our_reference(self):
        """Gets the custentity_our_reference of this Customer.  # noqa: E501


        :return: The custentity_our_reference of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_our_reference

    @custentity_our_reference.setter
    def custentity_our_reference(self, custentity_our_reference):
        """Sets the custentity_our_reference of this Customer.


        :param custentity_our_reference: The custentity_our_reference of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_our_reference = custentity_our_reference

    @property
    def custentity_eff_fw_kvk_number(self):
        """Gets the custentity_eff_fw_kvk_number of this Customer.  # noqa: E501


        :return: The custentity_eff_fw_kvk_number of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_eff_fw_kvk_number

    @custentity_eff_fw_kvk_number.setter
    def custentity_eff_fw_kvk_number(self, custentity_eff_fw_kvk_number):
        """Sets the custentity_eff_fw_kvk_number of this Customer.


        :param custentity_eff_fw_kvk_number: The custentity_eff_fw_kvk_number of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_eff_fw_kvk_number = custentity_eff_fw_kvk_number

    @property
    def custentity_comm_pref_sms(self):
        """Gets the custentity_comm_pref_sms of this Customer.  # noqa: E501


        :return: The custentity_comm_pref_sms of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_comm_pref_sms

    @custentity_comm_pref_sms.setter
    def custentity_comm_pref_sms(self, custentity_comm_pref_sms):
        """Sets the custentity_comm_pref_sms of this Customer.


        :param custentity_comm_pref_sms: The custentity_comm_pref_sms of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_comm_pref_sms = custentity_comm_pref_sms

    @property
    def custentity_trainer_rating(self):
        """Gets the custentity_trainer_rating of this Customer.  # noqa: E501


        :return: The custentity_trainer_rating of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._custentity_trainer_rating

    @custentity_trainer_rating.setter
    def custentity_trainer_rating(self, custentity_trainer_rating):
        """Sets the custentity_trainer_rating of this Customer.


        :param custentity_trainer_rating: The custentity_trainer_rating of this Customer.  # noqa: E501
        :type: int
        """

        self._custentity_trainer_rating = custentity_trainer_rating

    @property
    def custentity_cis_utr(self):
        """Gets the custentity_cis_utr of this Customer.  # noqa: E501


        :return: The custentity_cis_utr of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_cis_utr

    @custentity_cis_utr.setter
    def custentity_cis_utr(self, custentity_cis_utr):
        """Sets the custentity_cis_utr of this Customer.


        :param custentity_cis_utr: The custentity_cis_utr of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_cis_utr = custentity_cis_utr

    @property
    def start_date(self):
        """Gets the start_date of this Customer.  # noqa: E501

        Enter the date this person or company became a customer, lead or prospect. If this person or company has a contract with you, enter the start date of the contract. If you enter an estimate or an opportunity for this customer, this field will be updated with the date of that transaction.  # noqa: E501

        :return: The start_date of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this Customer.

        Enter the date this person or company became a customer, lead or prospect. If this person or company has a contract with you, enter the start date of the contract. If you enter an estimate or an opportunity for this customer, this field will be updated with the date of that transaction.  # noqa: E501

        :param start_date: The start_date of this Customer.  # noqa: E501
        :type: date
        """

        self._start_date = start_date

    @property
    def custentity_other_tech_quals(self):
        """Gets the custentity_other_tech_quals of this Customer.  # noqa: E501


        :return: The custentity_other_tech_quals of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_other_tech_quals

    @custentity_other_tech_quals.setter
    def custentity_other_tech_quals(self, custentity_other_tech_quals):
        """Sets the custentity_other_tech_quals of this Customer.


        :param custentity_other_tech_quals: The custentity_other_tech_quals of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_other_tech_quals = custentity_other_tech_quals

    @property
    def custentity_ashp_installer(self):
        """Gets the custentity_ashp_installer of this Customer.  # noqa: E501


        :return: The custentity_ashp_installer of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_ashp_installer

    @custentity_ashp_installer.setter
    def custentity_ashp_installer(self, custentity_ashp_installer):
        """Sets the custentity_ashp_installer of this Customer.


        :param custentity_ashp_installer: The custentity_ashp_installer of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_ashp_installer = custentity_ashp_installer

    @property
    def password(self):
        """Gets the password of this Customer.  # noqa: E501

        Assign a password to give this customer access to NetSuite. The Password Criteria fields will ensure that you create a password that meets the password policy in effect in your account. You will need to tell the user the password you assign. For more information, see the help topic NetSuite Password Requirements.  # noqa: E501

        :return: The password of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this Customer.

        Assign a password to give this customer access to NetSuite. The Password Criteria fields will ensure that you create a password that meets the password policy in effect in your account. You will need to tell the user the password you assign. For more information, see the help topic NetSuite Password Requirements.  # noqa: E501

        :param password: The password of this Customer.  # noqa: E501
        :type: str
        """

        self._password = password

    @property
    def custentityhp_approv_trng_details(self):
        """Gets the custentityhp_approv_trng_details of this Customer.  # noqa: E501


        :return: The custentityhp_approv_trng_details of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentityhp_approv_trng_details

    @custentityhp_approv_trng_details.setter
    def custentityhp_approv_trng_details(self, custentityhp_approv_trng_details):
        """Sets the custentityhp_approv_trng_details of this Customer.


        :param custentityhp_approv_trng_details: The custentityhp_approv_trng_details of this Customer.  # noqa: E501
        :type: str
        """

        self._custentityhp_approv_trng_details = custentityhp_approv_trng_details

    @property
    def custentity_ri_oftec_reg(self):
        """Gets the custentity_ri_oftec_reg of this Customer.  # noqa: E501


        :return: The custentity_ri_oftec_reg of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_ri_oftec_reg

    @custentity_ri_oftec_reg.setter
    def custentity_ri_oftec_reg(self, custentity_ri_oftec_reg):
        """Sets the custentity_ri_oftec_reg of this Customer.


        :param custentity_ri_oftec_reg: The custentity_ri_oftec_reg of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_ri_oftec_reg = custentity_ri_oftec_reg

    @property
    def custentity_day_of_week(self):
        """Gets the custentity_day_of_week of this Customer.  # noqa: E501


        :return: The custentity_day_of_week of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_day_of_week

    @custentity_day_of_week.setter
    def custentity_day_of_week(self, custentity_day_of_week):
        """Sets the custentity_day_of_week of this Customer.


        :param custentity_day_of_week: The custentity_day_of_week of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_day_of_week = custentity_day_of_week

    @property
    def custentity_fin_spec_reqmts(self):
        """Gets the custentity_fin_spec_reqmts of this Customer.  # noqa: E501


        :return: The custentity_fin_spec_reqmts of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_fin_spec_reqmts

    @custentity_fin_spec_reqmts.setter
    def custentity_fin_spec_reqmts(self, custentity_fin_spec_reqmts):
        """Sets the custentity_fin_spec_reqmts of this Customer.


        :param custentity_fin_spec_reqmts: The custentity_fin_spec_reqmts of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_fin_spec_reqmts = custentity_fin_spec_reqmts

    @property
    def custentity_ufh_qual_details(self):
        """Gets the custentity_ufh_qual_details of this Customer.  # noqa: E501


        :return: The custentity_ufh_qual_details of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_ufh_qual_details

    @custentity_ufh_qual_details.setter
    def custentity_ufh_qual_details(self, custentity_ufh_qual_details):
        """Sets the custentity_ufh_qual_details of this Customer.


        :param custentity_ufh_qual_details: The custentity_ufh_qual_details of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_ufh_qual_details = custentity_ufh_qual_details

    @property
    def custentity_erpff_p2p_party_endp_sch_id(self):
        """Gets the custentity_erpff_p2p_party_endp_sch_id of this Customer.  # noqa: E501


        :return: The custentity_erpff_p2p_party_endp_sch_id of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_erpff_p2p_party_endp_sch_id

    @custentity_erpff_p2p_party_endp_sch_id.setter
    def custentity_erpff_p2p_party_endp_sch_id(self, custentity_erpff_p2p_party_endp_sch_id):
        """Sets the custentity_erpff_p2p_party_endp_sch_id of this Customer.


        :param custentity_erpff_p2p_party_endp_sch_id: The custentity_erpff_p2p_party_endp_sch_id of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_erpff_p2p_party_endp_sch_id = custentity_erpff_p2p_party_endp_sch_id

    @property
    def third_party_zip_code(self):
        """Gets the third_party_zip_code of this Customer.  # noqa: E501

        Enter the zip code associated with the customer’s UPS or FedEx account number.  # noqa: E501

        :return: The third_party_zip_code of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._third_party_zip_code

    @third_party_zip_code.setter
    def third_party_zip_code(self, third_party_zip_code):
        """Sets the third_party_zip_code of this Customer.

        Enter the zip code associated with the customer’s UPS or FedEx account number.  # noqa: E501

        :param third_party_zip_code: The third_party_zip_code of this Customer.  # noqa: E501
        :type: str
        """

        self._third_party_zip_code = third_party_zip_code

    @property
    def custentity_in_enq_max_contract(self):
        """Gets the custentity_in_enq_max_contract of this Customer.  # noqa: E501


        :return: The custentity_in_enq_max_contract of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_in_enq_max_contract

    @custentity_in_enq_max_contract.setter
    def custentity_in_enq_max_contract(self, custentity_in_enq_max_contract):
        """Sets the custentity_in_enq_max_contract of this Customer.


        :param custentity_in_enq_max_contract: The custentity_in_enq_max_contract of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_in_enq_max_contract = custentity_in_enq_max_contract

    @property
    def custentity_neceic_scheme_yn(self):
        """Gets the custentity_neceic_scheme_yn of this Customer.  # noqa: E501


        :return: The custentity_neceic_scheme_yn of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_neceic_scheme_yn

    @custentity_neceic_scheme_yn.setter
    def custentity_neceic_scheme_yn(self, custentity_neceic_scheme_yn):
        """Sets the custentity_neceic_scheme_yn of this Customer.


        :param custentity_neceic_scheme_yn: The custentity_neceic_scheme_yn of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_neceic_scheme_yn = custentity_neceic_scheme_yn

    @property
    def date_created(self):
        """Gets the date_created of this Customer.  # noqa: E501

        In this field, NetSuite automatically records the date you created this record.  # noqa: E501

        :return: The date_created of this Customer.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this Customer.

        In this field, NetSuite automatically records the date you created this record.  # noqa: E501

        :param date_created: The date_created of this Customer.  # noqa: E501
        :type: datetime
        """

        self._date_created = date_created

    @property
    def custentity_in_enq_competitors(self):
        """Gets the custentity_in_enq_competitors of this Customer.  # noqa: E501


        :return: The custentity_in_enq_competitors of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_in_enq_competitors

    @custentity_in_enq_competitors.setter
    def custentity_in_enq_competitors(self, custentity_in_enq_competitors):
        """Sets the custentity_in_enq_competitors of this Customer.


        :param custentity_in_enq_competitors: The custentity_in_enq_competitors of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_in_enq_competitors = custentity_in_enq_competitors

    @property
    def custentity_nibe_vip(self):
        """Gets the custentity_nibe_vip of this Customer.  # noqa: E501


        :return: The custentity_nibe_vip of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_nibe_vip

    @custentity_nibe_vip.setter
    def custentity_nibe_vip(self, custentity_nibe_vip):
        """Sets the custentity_nibe_vip of this Customer.


        :param custentity_nibe_vip: The custentity_nibe_vip of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_nibe_vip = custentity_nibe_vip

    @property
    def custentity_ga_gclid(self):
        """Gets the custentity_ga_gclid of this Customer.  # noqa: E501


        :return: The custentity_ga_gclid of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_ga_gclid

    @custentity_ga_gclid.setter
    def custentity_ga_gclid(self, custentity_ga_gclid):
        """Sets the custentity_ga_gclid of this Customer.


        :param custentity_ga_gclid: The custentity_ga_gclid of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_ga_gclid = custentity_ga_gclid

    @property
    def custentity_rwh_disc(self):
        """Gets the custentity_rwh_disc of this Customer.  # noqa: E501


        :return: The custentity_rwh_disc of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_rwh_disc

    @custentity_rwh_disc.setter
    def custentity_rwh_disc(self, custentity_rwh_disc):
        """Sets the custentity_rwh_disc of this Customer.


        :param custentity_rwh_disc: The custentity_rwh_disc of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_rwh_disc = custentity_rwh_disc

    @property
    def custentity_2663_direct_debit(self):
        """Gets the custentity_2663_direct_debit of this Customer.  # noqa: E501


        :return: The custentity_2663_direct_debit of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_2663_direct_debit

    @custentity_2663_direct_debit.setter
    def custentity_2663_direct_debit(self, custentity_2663_direct_debit):
        """Sets the custentity_2663_direct_debit of this Customer.


        :param custentity_2663_direct_debit: The custentity_2663_direct_debit of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_2663_direct_debit = custentity_2663_direct_debit

    @property
    def custentity_2_photographs(self):
        """Gets the custentity_2_photographs of this Customer.  # noqa: E501


        :return: The custentity_2_photographs of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_2_photographs

    @custentity_2_photographs.setter
    def custentity_2_photographs(self, custentity_2_photographs):
        """Sets the custentity_2_photographs of this Customer.


        :param custentity_2_photographs: The custentity_2_photographs of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_2_photographs = custentity_2_photographs

    @property
    def custentity_mm_lastsmsmessage(self):
        """Gets the custentity_mm_lastsmsmessage of this Customer.  # noqa: E501


        :return: The custentity_mm_lastsmsmessage of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_mm_lastsmsmessage

    @custentity_mm_lastsmsmessage.setter
    def custentity_mm_lastsmsmessage(self, custentity_mm_lastsmsmessage):
        """Sets the custentity_mm_lastsmsmessage of this Customer.


        :param custentity_mm_lastsmsmessage: The custentity_mm_lastsmsmessage of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_mm_lastsmsmessage = custentity_mm_lastsmsmessage

    @property
    def custentity_spec_care(self):
        """Gets the custentity_spec_care of this Customer.  # noqa: E501


        :return: The custentity_spec_care of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_spec_care

    @custentity_spec_care.setter
    def custentity_spec_care(self, custentity_spec_care):
        """Sets the custentity_spec_care of this Customer.


        :param custentity_spec_care: The custentity_spec_care of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_spec_care = custentity_spec_care

    @property
    def custentity_in_enq_project_info(self):
        """Gets the custentity_in_enq_project_info of this Customer.  # noqa: E501


        :return: The custentity_in_enq_project_info of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_in_enq_project_info

    @custentity_in_enq_project_info.setter
    def custentity_in_enq_project_info(self, custentity_in_enq_project_info):
        """Sets the custentity_in_enq_project_info of this Customer.


        :param custentity_in_enq_project_info: The custentity_in_enq_project_info of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_in_enq_project_info = custentity_in_enq_project_info

    @property
    def custentity_health_safety_heights(self):
        """Gets the custentity_health_safety_heights of this Customer.  # noqa: E501


        :return: The custentity_health_safety_heights of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_health_safety_heights

    @custentity_health_safety_heights.setter
    def custentity_health_safety_heights(self, custentity_health_safety_heights):
        """Sets the custentity_health_safety_heights of this Customer.


        :param custentity_health_safety_heights: The custentity_health_safety_heights of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_health_safety_heights = custentity_health_safety_heights

    @property
    def consol_aging4(self):
        """Gets the consol_aging4 of this Customer.  # noqa: E501

        The overdue consolidated A/R balance is shown here with the balance totals for each aging period. These totals include the balance from all the customers and subcustomers in this hierarchy.  # noqa: E501

        :return: The consol_aging4 of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._consol_aging4

    @consol_aging4.setter
    def consol_aging4(self, consol_aging4):
        """Sets the consol_aging4 of this Customer.

        The overdue consolidated A/R balance is shown here with the balance totals for each aging period. These totals include the balance from all the customers and subcustomers in this hierarchy.  # noqa: E501

        :param consol_aging4: The consol_aging4 of this Customer.  # noqa: E501
        :type: float
        """

        self._consol_aging4 = consol_aging4

    @property
    def consol_aging3(self):
        """Gets the consol_aging3 of this Customer.  # noqa: E501

        The overdue consolidated A/R balance is shown here with the balance totals for each aging period. These totals include the balance from all the customers and subcustomers in this hierarchy.  # noqa: E501

        :return: The consol_aging3 of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._consol_aging3

    @consol_aging3.setter
    def consol_aging3(self, consol_aging3):
        """Sets the consol_aging3 of this Customer.

        The overdue consolidated A/R balance is shown here with the balance totals for each aging period. These totals include the balance from all the customers and subcustomers in this hierarchy.  # noqa: E501

        :param consol_aging3: The consol_aging3 of this Customer.  # noqa: E501
        :type: float
        """

        self._consol_aging3 = consol_aging3

    @property
    def consol_aging2(self):
        """Gets the consol_aging2 of this Customer.  # noqa: E501

        The overdue consolidated A/R balance is shown here with the balance totals for each aging period. These totals include the balance from all the customers and subcustomers in this hierarchy.  # noqa: E501

        :return: The consol_aging2 of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._consol_aging2

    @consol_aging2.setter
    def consol_aging2(self, consol_aging2):
        """Sets the consol_aging2 of this Customer.

        The overdue consolidated A/R balance is shown here with the balance totals for each aging period. These totals include the balance from all the customers and subcustomers in this hierarchy.  # noqa: E501

        :param consol_aging2: The consol_aging2 of this Customer.  # noqa: E501
        :type: float
        """

        self._consol_aging2 = consol_aging2

    @property
    def consol_aging1(self):
        """Gets the consol_aging1 of this Customer.  # noqa: E501

        The overdue consolidated A/R balance is shown here with the balance totals for each aging period. These totals include the balance from all the customers and subcustomers in this hierarchy.  # noqa: E501

        :return: The consol_aging1 of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._consol_aging1

    @consol_aging1.setter
    def consol_aging1(self, consol_aging1):
        """Sets the consol_aging1 of this Customer.

        The overdue consolidated A/R balance is shown here with the balance totals for each aging period. These totals include the balance from all the customers and subcustomers in this hierarchy.  # noqa: E501

        :param consol_aging1: The consol_aging1 of this Customer.  # noqa: E501
        :type: float
        """

        self._consol_aging1 = consol_aging1

    @property
    def custentity_ufh_instll_prev_yn(self):
        """Gets the custentity_ufh_instll_prev_yn of this Customer.  # noqa: E501


        :return: The custentity_ufh_instll_prev_yn of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_ufh_instll_prev_yn

    @custentity_ufh_instll_prev_yn.setter
    def custentity_ufh_instll_prev_yn(self, custentity_ufh_instll_prev_yn):
        """Sets the custentity_ufh_instll_prev_yn of this Customer.


        :param custentity_ufh_instll_prev_yn: The custentity_ufh_instll_prev_yn of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_ufh_instll_prev_yn = custentity_ufh_instll_prev_yn

    @property
    def custentity_pv_qual(self):
        """Gets the custentity_pv_qual of this Customer.  # noqa: E501


        :return: The custentity_pv_qual of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_pv_qual

    @custentity_pv_qual.setter
    def custentity_pv_qual(self, custentity_pv_qual):
        """Sets the custentity_pv_qual of this Customer.


        :param custentity_pv_qual: The custentity_pv_qual of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_pv_qual = custentity_pv_qual

    @property
    def custentity_joined_inst_network(self):
        """Gets the custentity_joined_inst_network of this Customer.  # noqa: E501


        :return: The custentity_joined_inst_network of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentity_joined_inst_network

    @custentity_joined_inst_network.setter
    def custentity_joined_inst_network(self, custentity_joined_inst_network):
        """Sets the custentity_joined_inst_network of this Customer.


        :param custentity_joined_inst_network: The custentity_joined_inst_network of this Customer.  # noqa: E501
        :type: date
        """

        self._custentity_joined_inst_network = custentity_joined_inst_network

    @property
    def custentity_living_with_nuheat(self):
        """Gets the custentity_living_with_nuheat of this Customer.  # noqa: E501


        :return: The custentity_living_with_nuheat of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_living_with_nuheat

    @custentity_living_with_nuheat.setter
    def custentity_living_with_nuheat(self, custentity_living_with_nuheat):
        """Sets the custentity_living_with_nuheat of this Customer.


        :param custentity_living_with_nuheat: The custentity_living_with_nuheat of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_living_with_nuheat = custentity_living_with_nuheat

    @property
    def custentity_uln(self):
        """Gets the custentity_uln of this Customer.  # noqa: E501


        :return: The custentity_uln of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_uln

    @custentity_uln.setter
    def custentity_uln(self, custentity_uln):
        """Sets the custentity_uln of this Customer.


        :param custentity_uln: The custentity_uln of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_uln = custentity_uln

    @property
    def email(self):
        """Gets the email of this Customer.  # noqa: E501

        Enter your customer&apos;s email address. If you allow your customers to access their accounts online, this becomes part of their access codes.  # noqa: E501

        :return: The email of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this Customer.

        Enter your customer&apos;s email address. If you allow your customers to access their accounts online, this becomes part of their access codes.  # noqa: E501

        :param email: The email of this Customer.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def custentity_photo_recd(self):
        """Gets the custentity_photo_recd of this Customer.  # noqa: E501


        :return: The custentity_photo_recd of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_photo_recd

    @custentity_photo_recd.setter
    def custentity_photo_recd(self, custentity_photo_recd):
        """Sets the custentity_photo_recd of this Customer.


        :param custentity_photo_recd: The custentity_photo_recd of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_photo_recd = custentity_photo_recd

    @property
    def custentity_exc_lead_count(self):
        """Gets the custentity_exc_lead_count of this Customer.  # noqa: E501


        :return: The custentity_exc_lead_count of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_exc_lead_count

    @custentity_exc_lead_count.setter
    def custentity_exc_lead_count(self, custentity_exc_lead_count):
        """Sets the custentity_exc_lead_count of this Customer.


        :param custentity_exc_lead_count: The custentity_exc_lead_count of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_exc_lead_count = custentity_exc_lead_count

    @property
    def custentity_ga_campaign(self):
        """Gets the custentity_ga_campaign of this Customer.  # noqa: E501


        :return: The custentity_ga_campaign of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_ga_campaign

    @custentity_ga_campaign.setter
    def custentity_ga_campaign(self, custentity_ga_campaign):
        """Sets the custentity_ga_campaign of this Customer.


        :param custentity_ga_campaign: The custentity_ga_campaign of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_ga_campaign = custentity_ga_campaign

    @property
    def deposit_balance(self):
        """Gets the deposit_balance of this Customer.  # noqa: E501

        The Customer Deposit Balance field displays the total amount of unapplied deposits for the customer. Deposits are recorded in the general ledger, as a liability, when the customer makes an advance payment before delivery of goods or services. A deposit balance exists until the goods or services are delivered. Deposits do not affect the customer&apos;s accounts receivable balance. If you use the Multiple Currencies feature, the amount in this field is shown in the customer&apos;s currency.  # noqa: E501

        :return: The deposit_balance of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._deposit_balance

    @deposit_balance.setter
    def deposit_balance(self, deposit_balance):
        """Sets the deposit_balance of this Customer.

        The Customer Deposit Balance field displays the total amount of unapplied deposits for the customer. Deposits are recorded in the general ledger, as a liability, when the customer makes an advance payment before delivery of goods or services. A deposit balance exists until the goods or services are delivered. Deposits do not affect the customer&apos;s accounts receivable balance. If you use the Multiple Currencies feature, the amount in this field is shown in the customer&apos;s currency.  # noqa: E501

        :param deposit_balance: The deposit_balance of this Customer.  # noqa: E501
        :type: float
        """

        self._deposit_balance = deposit_balance

    @property
    def custentity_entity_longitude(self):
        """Gets the custentity_entity_longitude of this Customer.  # noqa: E501


        :return: The custentity_entity_longitude of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_entity_longitude

    @custentity_entity_longitude.setter
    def custentity_entity_longitude(self, custentity_entity_longitude):
        """Sets the custentity_entity_longitude of this Customer.


        :param custentity_entity_longitude: The custentity_entity_longitude of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_entity_longitude = custentity_entity_longitude

    @property
    def custentity_pv_systems(self):
        """Gets the custentity_pv_systems of this Customer.  # noqa: E501


        :return: The custentity_pv_systems of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_pv_systems

    @custentity_pv_systems.setter
    def custentity_pv_systems(self, custentity_pv_systems):
        """Sets the custentity_pv_systems of this Customer.


        :param custentity_pv_systems: The custentity_pv_systems of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_pv_systems = custentity_pv_systems

    @property
    def first_sale_date(self):
        """Gets the first_sale_date of this Customer.  # noqa: E501

        Returns the date of the first sale to the customer.  # noqa: E501

        :return: The first_sale_date of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._first_sale_date

    @first_sale_date.setter
    def first_sale_date(self, first_sale_date):
        """Sets the first_sale_date of this Customer.

        Returns the date of the first sale to the customer.  # noqa: E501

        :param first_sale_date: The first_sale_date of this Customer.  # noqa: E501
        :type: date
        """

        self._first_sale_date = first_sale_date

    @property
    def custom_form(self):
        """Gets the custom_form of this Customer.  # noqa: E501


        :return: The custom_form of this Customer.  # noqa: E501
        :rtype: CustomerCustomForm
        """
        return self._custom_form

    @custom_form.setter
    def custom_form(self, custom_form):
        """Sets the custom_form of this Customer.


        :param custom_form: The custom_form of this Customer.  # noqa: E501
        :type: CustomerCustomForm
        """

        self._custom_form = custom_form

    @property
    def custentity_cust_cat_type(self):
        """Gets the custentity_cust_cat_type of this Customer.  # noqa: E501


        :return: The custentity_cust_cat_type of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_cust_cat_type

    @custentity_cust_cat_type.setter
    def custentity_cust_cat_type(self, custentity_cust_cat_type):
        """Sets the custentity_cust_cat_type of this Customer.


        :param custentity_cust_cat_type: The custentity_cust_cat_type of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_cust_cat_type = custentity_cust_cat_type

    @property
    def custentity_in_enq_comp_size(self):
        """Gets the custentity_in_enq_comp_size of this Customer.  # noqa: E501


        :return: The custentity_in_enq_comp_size of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_in_enq_comp_size

    @custentity_in_enq_comp_size.setter
    def custentity_in_enq_comp_size(self, custentity_in_enq_comp_size):
        """Sets the custentity_in_enq_comp_size of this Customer.


        :param custentity_in_enq_comp_size: The custentity_in_enq_comp_size of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_in_enq_comp_size = custentity_in_enq_comp_size

    @property
    def custentity_reg_ins(self):
        """Gets the custentity_reg_ins of this Customer.  # noqa: E501


        :return: The custentity_reg_ins of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_reg_ins

    @custentity_reg_ins.setter
    def custentity_reg_ins(self, custentity_reg_ins):
        """Sets the custentity_reg_ins of this Customer.


        :param custentity_reg_ins: The custentity_reg_ins of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_reg_ins = custentity_reg_ins

    @property
    def custentity_hp_disc(self):
        """Gets the custentity_hp_disc of this Customer.  # noqa: E501


        :return: The custentity_hp_disc of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_hp_disc

    @custentity_hp_disc.setter
    def custentity_hp_disc(self, custentity_hp_disc):
        """Sets the custentity_hp_disc of this Customer.


        :param custentity_hp_disc: The custentity_hp_disc of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_hp_disc = custentity_hp_disc

    @property
    def custentity_sales_rep_photo_url(self):
        """Gets the custentity_sales_rep_photo_url of this Customer.  # noqa: E501


        :return: The custentity_sales_rep_photo_url of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_sales_rep_photo_url

    @custentity_sales_rep_photo_url.setter
    def custentity_sales_rep_photo_url(self, custentity_sales_rep_photo_url):
        """Sets the custentity_sales_rep_photo_url of this Customer.


        :param custentity_sales_rep_photo_url: The custentity_sales_rep_photo_url of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_sales_rep_photo_url = custentity_sales_rep_photo_url

    @property
    def custentity_discount_lettertype(self):
        """Gets the custentity_discount_lettertype of this Customer.  # noqa: E501


        :return: The custentity_discount_lettertype of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_discount_lettertype

    @custentity_discount_lettertype.setter
    def custentity_discount_lettertype(self, custentity_discount_lettertype):
        """Sets the custentity_discount_lettertype of this Customer.


        :param custentity_discount_lettertype: The custentity_discount_lettertype of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_discount_lettertype = custentity_discount_lettertype

    @property
    def entity_id(self):
        """Gets the entity_id of this Customer.  # noqa: E501

        Enter the name of this customer, prospect or lead the way it should appear in all lists and on the Pay to the Order of line of checks. If you use Auto-Generated Numbering, the customer number or code fills here. Enter the customer name in the Company Name field.  # noqa: E501

        :return: The entity_id of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this Customer.

        Enter the name of this customer, prospect or lead the way it should appear in all lists and on the Pay to the Order of line of checks. If you use Auto-Generated Numbering, the customer number or code fills here. Enter the customer name in the Company Name field.  # noqa: E501

        :param entity_id: The entity_id of this Customer.  # noqa: E501
        :type: str
        """

        self._entity_id = entity_id

    @property
    def custentity_mi_lead_closed(self):
        """Gets the custentity_mi_lead_closed of this Customer.  # noqa: E501


        :return: The custentity_mi_lead_closed of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentity_mi_lead_closed

    @custentity_mi_lead_closed.setter
    def custentity_mi_lead_closed(self, custentity_mi_lead_closed):
        """Sets the custentity_mi_lead_closed of this Customer.


        :param custentity_mi_lead_closed: The custentity_mi_lead_closed of this Customer.  # noqa: E501
        :type: date
        """

        self._custentity_mi_lead_closed = custentity_mi_lead_closed

    @property
    def email_preference(self):
        """Gets the email_preference of this Customer.  # noqa: E501


        :return: The email_preference of this Customer.  # noqa: E501
        :rtype: CustomerEmailPreference
        """
        return self._email_preference

    @email_preference.setter
    def email_preference(self, email_preference):
        """Sets the email_preference of this Customer.


        :param email_preference: The email_preference of this Customer.  # noqa: E501
        :type: CustomerEmailPreference
        """

        self._email_preference = email_preference

    @property
    def custentity_med_diet_spec_req(self):
        """Gets the custentity_med_diet_spec_req of this Customer.  # noqa: E501


        :return: The custentity_med_diet_spec_req of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_med_diet_spec_req

    @custentity_med_diet_spec_req.setter
    def custentity_med_diet_spec_req(self, custentity_med_diet_spec_req):
        """Sets the custentity_med_diet_spec_req of this Customer.


        :param custentity_med_diet_spec_req: The custentity_med_diet_spec_req of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_med_diet_spec_req = custentity_med_diet_spec_req

    @property
    def custentity_number_of_units(self):
        """Gets the custentity_number_of_units of this Customer.  # noqa: E501


        :return: The custentity_number_of_units of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._custentity_number_of_units

    @custentity_number_of_units.setter
    def custentity_number_of_units(self, custentity_number_of_units):
        """Sets the custentity_number_of_units of this Customer.


        :param custentity_number_of_units: The custentity_number_of_units of this Customer.  # noqa: E501
        :type: int
        """

        self._custentity_number_of_units = custentity_number_of_units

    @property
    def custentity_sfa_allocated(self):
        """Gets the custentity_sfa_allocated of this Customer.  # noqa: E501


        :return: The custentity_sfa_allocated of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_sfa_allocated

    @custentity_sfa_allocated.setter
    def custentity_sfa_allocated(self, custentity_sfa_allocated):
        """Sets the custentity_sfa_allocated of this Customer.


        :param custentity_sfa_allocated: The custentity_sfa_allocated of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_sfa_allocated = custentity_sfa_allocated

    @property
    def custentity_first_enq_date(self):
        """Gets the custentity_first_enq_date of this Customer.  # noqa: E501


        :return: The custentity_first_enq_date of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentity_first_enq_date

    @custentity_first_enq_date.setter
    def custentity_first_enq_date(self, custentity_first_enq_date):
        """Sets the custentity_first_enq_date of this Customer.


        :param custentity_first_enq_date: The custentity_first_enq_date of this Customer.  # noqa: E501
        :type: date
        """

        self._custentity_first_enq_date = custentity_first_enq_date

    @property
    def custentity_comp_reg_no(self):
        """Gets the custentity_comp_reg_no of this Customer.  # noqa: E501


        :return: The custentity_comp_reg_no of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_comp_reg_no

    @custentity_comp_reg_no.setter
    def custentity_comp_reg_no(self, custentity_comp_reg_no):
        """Sets the custentity_comp_reg_no of this Customer.


        :param custentity_comp_reg_no: The custentity_comp_reg_no of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_comp_reg_no = custentity_comp_reg_no

    @property
    def custentity_housebuilder_contacts_backup(self):
        """Gets the custentity_housebuilder_contacts_backup of this Customer.  # noqa: E501


        :return: The custentity_housebuilder_contacts_backup of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_housebuilder_contacts_backup

    @custentity_housebuilder_contacts_backup.setter
    def custentity_housebuilder_contacts_backup(self, custentity_housebuilder_contacts_backup):
        """Sets the custentity_housebuilder_contacts_backup of this Customer.


        :param custentity_housebuilder_contacts_backup: The custentity_housebuilder_contacts_backup of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_housebuilder_contacts_backup = custentity_housebuilder_contacts_backup

    @property
    def custentity_hp_installer(self):
        """Gets the custentity_hp_installer of this Customer.  # noqa: E501


        :return: The custentity_hp_installer of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_hp_installer

    @custentity_hp_installer.setter
    def custentity_hp_installer(self, custentity_hp_installer):
        """Sets the custentity_hp_installer of this Customer.


        :param custentity_hp_installer: The custentity_hp_installer of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_hp_installer = custentity_hp_installer

    @property
    def custentity_ph_nvq3(self):
        """Gets the custentity_ph_nvq3 of this Customer.  # noqa: E501


        :return: The custentity_ph_nvq3 of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_ph_nvq3

    @custentity_ph_nvq3.setter
    def custentity_ph_nvq3(self, custentity_ph_nvq3):
        """Sets the custentity_ph_nvq3 of this Customer.


        :param custentity_ph_nvq3: The custentity_ph_nvq3 of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_ph_nvq3 = custentity_ph_nvq3

    @property
    def custentity_prospect_date(self):
        """Gets the custentity_prospect_date of this Customer.  # noqa: E501


        :return: The custentity_prospect_date of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentity_prospect_date

    @custentity_prospect_date.setter
    def custentity_prospect_date(self, custentity_prospect_date):
        """Sets the custentity_prospect_date of this Customer.


        :param custentity_prospect_date: The custentity_prospect_date of this Customer.  # noqa: E501
        :type: date
        """

        self._custentity_prospect_date = custentity_prospect_date

    @property
    def search_stage(self):
        """Gets the search_stage of this Customer.  # noqa: E501

        Returns the stage of the customer record, such as Customer or Lead.  # noqa: E501

        :return: The search_stage of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._search_stage

    @search_stage.setter
    def search_stage(self, search_stage):
        """Sets the search_stage of this Customer.

        Returns the stage of the customer record, such as Customer or Lead.  # noqa: E501

        :param search_stage: The search_stage of this Customer.  # noqa: E501
        :type: str
        """

        self._search_stage = search_stage

    @property
    def custentity_plans_available(self):
        """Gets the custentity_plans_available of this Customer.  # noqa: E501


        :return: The custentity_plans_available of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_plans_available

    @custentity_plans_available.setter
    def custentity_plans_available(self, custentity_plans_available):
        """Sets the custentity_plans_available of this Customer.


        :param custentity_plans_available: The custentity_plans_available of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_plans_available = custentity_plans_available

    @property
    def resale_number(self):
        """Gets the resale_number of this Customer.  # noqa: E501

        If you do not collect sales tax from this customer because your merchandise will be resold, enter your customer&apos;s valid tax license number here. Make sure that you also set the Not Taxable tax code for this customer.  # noqa: E501

        :return: The resale_number of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._resale_number

    @resale_number.setter
    def resale_number(self, resale_number):
        """Sets the resale_number of this Customer.

        If you do not collect sales tax from this customer because your merchandise will be resold, enter your customer&apos;s valid tax license number here. Make sure that you also set the Not Taxable tax code for this customer.  # noqa: E501

        :param resale_number: The resale_number of this Customer.  # noqa: E501
        :type: str
        """

        self._resale_number = resale_number

    @property
    def custentity_ph_nvq2(self):
        """Gets the custentity_ph_nvq2 of this Customer.  # noqa: E501


        :return: The custentity_ph_nvq2 of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_ph_nvq2

    @custentity_ph_nvq2.setter
    def custentity_ph_nvq2(self, custentity_ph_nvq2):
        """Sets the custentity_ph_nvq2 of this Customer.


        :param custentity_ph_nvq2: The custentity_ph_nvq2 of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_ph_nvq2 = custentity_ph_nvq2

    @property
    def custentity_send_emp_sms(self):
        """Gets the custentity_send_emp_sms of this Customer.  # noqa: E501


        :return: The custentity_send_emp_sms of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_send_emp_sms

    @custentity_send_emp_sms.setter
    def custentity_send_emp_sms(self, custentity_send_emp_sms):
        """Sets the custentity_send_emp_sms of this Customer.


        :param custentity_send_emp_sms: The custentity_send_emp_sms of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_send_emp_sms = custentity_send_emp_sms

    @property
    def alt_email(self):
        """Gets the alt_email of this Customer.  # noqa: E501

        Enter an alternate email address for this customer. If you use the Capture Email Replies, email sent with the alternate email address are automatically attached to the customer record.  # noqa: E501

        :return: The alt_email of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._alt_email

    @alt_email.setter
    def alt_email(self, alt_email):
        """Sets the alt_email of this Customer.

        Enter an alternate email address for this customer. If you use the Capture Email Replies, email sent with the alternate email address are automatically attached to the customer record.  # noqa: E501

        :param alt_email: The alt_email of this Customer.  # noqa: E501
        :type: str
        """

        self._alt_email = alt_email

    @property
    def custentity_mcs_solar(self):
        """Gets the custentity_mcs_solar of this Customer.  # noqa: E501


        :return: The custentity_mcs_solar of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_mcs_solar

    @custentity_mcs_solar.setter
    def custentity_mcs_solar(self, custentity_mcs_solar):
        """Sets the custentity_mcs_solar of this Customer.


        :param custentity_mcs_solar: The custentity_mcs_solar of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_mcs_solar = custentity_mcs_solar

    @property
    def custentity_feedback_completed(self):
        """Gets the custentity_feedback_completed of this Customer.  # noqa: E501


        :return: The custentity_feedback_completed of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_feedback_completed

    @custentity_feedback_completed.setter
    def custentity_feedback_completed(self, custentity_feedback_completed):
        """Sets the custentity_feedback_completed of this Customer.


        :param custentity_feedback_completed: The custentity_feedback_completed of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_feedback_completed = custentity_feedback_completed

    @property
    def custentity_gdpr_contact_email(self):
        """Gets the custentity_gdpr_contact_email of this Customer.  # noqa: E501


        :return: The custentity_gdpr_contact_email of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentity_gdpr_contact_email

    @custentity_gdpr_contact_email.setter
    def custentity_gdpr_contact_email(self, custentity_gdpr_contact_email):
        """Sets the custentity_gdpr_contact_email of this Customer.


        :param custentity_gdpr_contact_email: The custentity_gdpr_contact_email of this Customer.  # noqa: E501
        :type: date
        """

        self._custentity_gdpr_contact_email = custentity_gdpr_contact_email

    @property
    def first_name(self):
        """Gets the first_name of this Customer.  # noqa: E501

        Enter this customer&apos;s name.  # noqa: E501

        :return: The first_name of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this Customer.

        Enter this customer&apos;s name.  # noqa: E501

        :param first_name: The first_name of this Customer.  # noqa: E501
        :type: str
        """

        self._first_name = first_name

    @property
    def custentity_health_safety_coshh(self):
        """Gets the custentity_health_safety_coshh of this Customer.  # noqa: E501


        :return: The custentity_health_safety_coshh of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_health_safety_coshh

    @custentity_health_safety_coshh.setter
    def custentity_health_safety_coshh(self, custentity_health_safety_coshh):
        """Sets the custentity_health_safety_coshh of this Customer.


        :param custentity_health_safety_coshh: The custentity_health_safety_coshh of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_health_safety_coshh = custentity_health_safety_coshh

    @property
    def custentity_sales_rep_title_test(self):
        """Gets the custentity_sales_rep_title_test of this Customer.  # noqa: E501


        :return: The custentity_sales_rep_title_test of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_sales_rep_title_test

    @custentity_sales_rep_title_test.setter
    def custentity_sales_rep_title_test(self, custentity_sales_rep_title_test):
        """Sets the custentity_sales_rep_title_test of this Customer.


        :param custentity_sales_rep_title_test: The custentity_sales_rep_title_test of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_sales_rep_title_test = custentity_sales_rep_title_test

    @property
    def custentity_nat_ins(self):
        """Gets the custentity_nat_ins of this Customer.  # noqa: E501


        :return: The custentity_nat_ins of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_nat_ins

    @custentity_nat_ins.setter
    def custentity_nat_ins(self, custentity_nat_ins):
        """Sets the custentity_nat_ins of this Customer.


        :param custentity_nat_ins: The custentity_nat_ins of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_nat_ins = custentity_nat_ins

    @property
    def default_shipping_address(self):
        """Gets the default_shipping_address of this Customer.  # noqa: E501

        Returns the customer&apos;s default shipping address, if one is entered on the customer record.  # noqa: E501

        :return: The default_shipping_address of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._default_shipping_address

    @default_shipping_address.setter
    def default_shipping_address(self, default_shipping_address):
        """Sets the default_shipping_address of this Customer.

        Returns the customer&apos;s default shipping address, if one is entered on the customer record.  # noqa: E501

        :param default_shipping_address: The default_shipping_address of this Customer.  # noqa: E501
        :type: str
        """

        self._default_shipping_address = default_shipping_address

    @property
    def give_access(self):
        """Gets the give_access of this Customer.  # noqa: E501

        Check this box to give your customer access to NetSuite. The Customer Center role gives a customer access to view estimates, orders, invoices and payments.  # noqa: E501

        :return: The give_access of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._give_access

    @give_access.setter
    def give_access(self, give_access):
        """Sets the give_access of this Customer.

        Check this box to give your customer access to NetSuite. The Customer Center role gives a customer access to view estimates, orders, invoices and payments.  # noqa: E501

        :param give_access: The give_access of this Customer.  # noqa: E501
        :type: bool
        """

        self._give_access = give_access

    @property
    def aging2(self):
        """Gets the aging2 of this Customer.  # noqa: E501

        The overdue A/R balance is shown here with the balance totals for each aging period.  # noqa: E501

        :return: The aging2 of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._aging2

    @aging2.setter
    def aging2(self, aging2):
        """Sets the aging2 of this Customer.

        The overdue A/R balance is shown here with the balance totals for each aging period.  # noqa: E501

        :param aging2: The aging2 of this Customer.  # noqa: E501
        :type: float
        """

        self._aging2 = aging2

    @property
    def aging3(self):
        """Gets the aging3 of this Customer.  # noqa: E501

        The overdue A/R balance is shown here with the balance totals for each aging period.  # noqa: E501

        :return: The aging3 of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._aging3

    @aging3.setter
    def aging3(self, aging3):
        """Sets the aging3 of this Customer.

        The overdue A/R balance is shown here with the balance totals for each aging period.  # noqa: E501

        :param aging3: The aging3 of this Customer.  # noqa: E501
        :type: float
        """

        self._aging3 = aging3

    @property
    def aging1(self):
        """Gets the aging1 of this Customer.  # noqa: E501

        The overdue A/R balance is shown here with the balance totals for each aging period.  # noqa: E501

        :return: The aging1 of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._aging1

    @aging1.setter
    def aging1(self, aging1):
        """Sets the aging1 of this Customer.

        The overdue A/R balance is shown here with the balance totals for each aging period.  # noqa: E501

        :param aging1: The aging1 of this Customer.  # noqa: E501
        :type: float
        """

        self._aging1 = aging1

    @property
    def custentityka_ranking(self):
        """Gets the custentityka_ranking of this Customer.  # noqa: E501


        :return: The custentityka_ranking of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._custentityka_ranking

    @custentityka_ranking.setter
    def custentityka_ranking(self, custentityka_ranking):
        """Sets the custentityka_ranking of this Customer.


        :param custentityka_ranking: The custentityka_ranking of this Customer.  # noqa: E501
        :type: int
        """

        self._custentityka_ranking = custentityka_ranking

    @property
    def aging4(self):
        """Gets the aging4 of this Customer.  # noqa: E501

        The overdue A/R balance is shown here with the balance totals for each aging period.  # noqa: E501

        :return: The aging4 of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._aging4

    @aging4.setter
    def aging4(self, aging4):
        """Sets the aging4 of this Customer.

        The overdue A/R balance is shown here with the balance totals for each aging period.  # noqa: E501

        :param aging4: The aging4 of this Customer.  # noqa: E501
        :type: float
        """

        self._aging4 = aging4

    @property
    def consol_overdue_balance(self):
        """Gets the consol_overdue_balance of this Customer.  # noqa: E501

        This field shows the consolidated total owed for open transactions for this customer-subcustomer hierarchy that are past their due date based on the invoice terms. Note: For open transactions that do not have a due date, the transaction date is used as the due date to calculate this total.  # noqa: E501

        :return: The consol_overdue_balance of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._consol_overdue_balance

    @consol_overdue_balance.setter
    def consol_overdue_balance(self, consol_overdue_balance):
        """Sets the consol_overdue_balance of this Customer.

        This field shows the consolidated total owed for open transactions for this customer-subcustomer hierarchy that are past their due date based on the invoice terms. Note: For open transactions that do not have a due date, the transaction date is used as the due date to calculate this total.  # noqa: E501

        :param consol_overdue_balance: The consol_overdue_balance of this Customer.  # noqa: E501
        :type: float
        """

        self._consol_overdue_balance = consol_overdue_balance

    @property
    def custentity_cc_action(self):
        """Gets the custentity_cc_action of this Customer.  # noqa: E501


        :return: The custentity_cc_action of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_cc_action

    @custentity_cc_action.setter
    def custentity_cc_action(self, custentity_cc_action):
        """Sets the custentity_cc_action of this Customer.


        :param custentity_cc_action: The custentity_cc_action of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_cc_action = custentity_cc_action

    @property
    def custentity_in_enq_client_profile(self):
        """Gets the custentity_in_enq_client_profile of this Customer.  # noqa: E501


        :return: The custentity_in_enq_client_profile of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_in_enq_client_profile

    @custentity_in_enq_client_profile.setter
    def custentity_in_enq_client_profile(self, custentity_in_enq_client_profile):
        """Sets the custentity_in_enq_client_profile of this Customer.


        :param custentity_in_enq_client_profile: The custentity_in_enq_client_profile of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_in_enq_client_profile = custentity_in_enq_client_profile

    @property
    def custentity_send_emp_email(self):
        """Gets the custentity_send_emp_email of this Customer.  # noqa: E501


        :return: The custentity_send_emp_email of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_send_emp_email

    @custentity_send_emp_email.setter
    def custentity_send_emp_email(self, custentity_send_emp_email):
        """Sets the custentity_send_emp_email of this Customer.


        :param custentity_send_emp_email: The custentity_send_emp_email of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_send_emp_email = custentity_send_emp_email

    @property
    def middle_name(self):
        """Gets the middle_name of this Customer.  # noqa: E501

        Returns the customer&apos;s middle name or initial, if one is entered on the customer record.  # noqa: E501

        :return: The middle_name of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._middle_name

    @middle_name.setter
    def middle_name(self, middle_name):
        """Sets the middle_name of this Customer.

        Returns the customer&apos;s middle name or initial, if one is entered on the customer record.  # noqa: E501

        :param middle_name: The middle_name of this Customer.  # noqa: E501
        :type: str
        """

        self._middle_name = middle_name

    @property
    def custentity_learning_needs(self):
        """Gets the custentity_learning_needs of this Customer.  # noqa: E501


        :return: The custentity_learning_needs of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_learning_needs

    @custentity_learning_needs.setter
    def custentity_learning_needs(self, custentity_learning_needs):
        """Sets the custentity_learning_needs of this Customer.


        :param custentity_learning_needs: The custentity_learning_needs of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_learning_needs = custentity_learning_needs

    @property
    def custentity_3805_dunning_paused(self):
        """Gets the custentity_3805_dunning_paused of this Customer.  # noqa: E501


        :return: The custentity_3805_dunning_paused of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_3805_dunning_paused

    @custentity_3805_dunning_paused.setter
    def custentity_3805_dunning_paused(self, custentity_3805_dunning_paused):
        """Sets the custentity_3805_dunning_paused of this Customer.


        :param custentity_3805_dunning_paused: The custentity_3805_dunning_paused of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_3805_dunning_paused = custentity_3805_dunning_paused

    @property
    def custentity_last_statement_sent(self):
        """Gets the custentity_last_statement_sent of this Customer.  # noqa: E501


        :return: The custentity_last_statement_sent of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentity_last_statement_sent

    @custentity_last_statement_sent.setter
    def custentity_last_statement_sent(self, custentity_last_statement_sent):
        """Sets the custentity_last_statement_sent of this Customer.


        :param custentity_last_statement_sent: The custentity_last_statement_sent of this Customer.  # noqa: E501
        :type: date
        """

        self._custentity_last_statement_sent = custentity_last_statement_sent

    @property
    def days_overdue(self):
        """Gets the days_overdue of this Customer.  # noqa: E501

        The number of days overdue this balance is overdue is shown here.  # noqa: E501

        :return: The days_overdue of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._days_overdue

    @days_overdue.setter
    def days_overdue(self, days_overdue):
        """Sets the days_overdue of this Customer.

        The number of days overdue this balance is overdue is shown here.  # noqa: E501

        :param days_overdue: The days_overdue of this Customer.  # noqa: E501
        :type: int
        """

        self._days_overdue = days_overdue

    @property
    def custentity_in_enq_working_with(self):
        """Gets the custentity_in_enq_working_with of this Customer.  # noqa: E501


        :return: The custentity_in_enq_working_with of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_in_enq_working_with

    @custentity_in_enq_working_with.setter
    def custentity_in_enq_working_with(self, custentity_in_enq_working_with):
        """Sets the custentity_in_enq_working_with of this Customer.


        :param custentity_in_enq_working_with: The custentity_in_enq_working_with of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_in_enq_working_with = custentity_in_enq_working_with

    @property
    def custentity_qualtextbox(self):
        """Gets the custentity_qualtextbox of this Customer.  # noqa: E501


        :return: The custentity_qualtextbox of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_qualtextbox

    @custentity_qualtextbox.setter
    def custentity_qualtextbox(self, custentity_qualtextbox):
        """Sets the custentity_qualtextbox of this Customer.


        :param custentity_qualtextbox: The custentity_qualtextbox of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_qualtextbox = custentity_qualtextbox

    @property
    def credit_limit(self):
        """Gets the credit_limit of this Customer.  # noqa: E501

        Enter a credit limit to define the maximum currency amount the customer is allowed to accrue in outstanding receivables. When you meet or exceed this customer&apos;s limit while you are entering transactions, NetSuite can warn you or block the transaction. To set preferences for credit limit handling, an administrator must go to Setup &gt; Accounting &gt; Accounting Preferences &gt; General &gt; Customer Credit Limit Handling. For more information, click Help at the top of the page and search for Customer Credit Limits and Holds.  # noqa: E501

        :return: The credit_limit of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._credit_limit

    @credit_limit.setter
    def credit_limit(self, credit_limit):
        """Sets the credit_limit of this Customer.

        Enter a credit limit to define the maximum currency amount the customer is allowed to accrue in outstanding receivables. When you meet or exceed this customer&apos;s limit while you are entering transactions, NetSuite can warn you or block the transaction. To set preferences for credit limit handling, an administrator must go to Setup &gt; Accounting &gt; Accounting Preferences &gt; General &gt; Customer Credit Limit Handling. For more information, click Help at the top of the page and search for Customer Credit Limits and Holds.  # noqa: E501

        :param credit_limit: The credit_limit of this Customer.  # noqa: E501
        :type: float
        """

        self._credit_limit = credit_limit

    @property
    def custentity_lm_contact_details(self):
        """Gets the custentity_lm_contact_details of this Customer.  # noqa: E501


        :return: The custentity_lm_contact_details of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_lm_contact_details

    @custentity_lm_contact_details.setter
    def custentity_lm_contact_details(self, custentity_lm_contact_details):
        """Sets the custentity_lm_contact_details of this Customer.


        :param custentity_lm_contact_details: The custentity_lm_contact_details of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_lm_contact_details = custentity_lm_contact_details

    @property
    def custentity_national_ins_no(self):
        """Gets the custentity_national_ins_no of this Customer.  # noqa: E501


        :return: The custentity_national_ins_no of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_national_ins_no

    @custentity_national_ins_no.setter
    def custentity_national_ins_no(self, custentity_national_ins_no):
        """Sets the custentity_national_ins_no of this Customer.


        :param custentity_national_ins_no: The custentity_national_ins_no of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_national_ins_no = custentity_national_ins_no

    @property
    def custentity_erpff_p2p_party_endpoint_id(self):
        """Gets the custentity_erpff_p2p_party_endpoint_id of this Customer.  # noqa: E501


        :return: The custentity_erpff_p2p_party_endpoint_id of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_erpff_p2p_party_endpoint_id

    @custentity_erpff_p2p_party_endpoint_id.setter
    def custentity_erpff_p2p_party_endpoint_id(self, custentity_erpff_p2p_party_endpoint_id):
        """Sets the custentity_erpff_p2p_party_endpoint_id of this Customer.


        :param custentity_erpff_p2p_party_endpoint_id: The custentity_erpff_p2p_party_endpoint_id of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_erpff_p2p_party_endpoint_id = custentity_erpff_p2p_party_endpoint_id

    @property
    def email_transactions(self):
        """Gets the email_transactions of this Customer.  # noqa: E501

        Set a preferred transaction delivery method for this customer. Choose to send transactions by regular mail, by email, by fax, or by a combination of the three. Then, when you select the customer on a transaction, their preferred delivery method is marked by default. * Email – Check this box to check the To Be Emailed box by default on transactions when this customer is selected. * Print – Check this box to check the To Be Printed box by default on transactions when this customer is selected. * Fax – Check this box to check the To Be Faxed box by default on transactions when this customer is selected. Once you enter these settings on the customer record, these boxes are checked by default for transactions created from the customer record or for transactions that are copied or converted. Note: These settings override any customized settings on transaction forms you use. There are also preferences to set default values for new customer records at Setup &gt; Company &gt; Preferences &gt; Printing, Fax,&amp; Email Preferences. On the Print subtab, Fax subtab, or Email subtab, check Customers Default to [Print/Fax/Email] Transactions. You can also set these fields using the Mass Update function. Go to Lists &gt; Mass Updates &gt; Mass Updates &gt; General and click Customer.  # noqa: E501

        :return: The email_transactions of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._email_transactions

    @email_transactions.setter
    def email_transactions(self, email_transactions):
        """Sets the email_transactions of this Customer.

        Set a preferred transaction delivery method for this customer. Choose to send transactions by regular mail, by email, by fax, or by a combination of the three. Then, when you select the customer on a transaction, their preferred delivery method is marked by default. * Email – Check this box to check the To Be Emailed box by default on transactions when this customer is selected. * Print – Check this box to check the To Be Printed box by default on transactions when this customer is selected. * Fax – Check this box to check the To Be Faxed box by default on transactions when this customer is selected. Once you enter these settings on the customer record, these boxes are checked by default for transactions created from the customer record or for transactions that are copied or converted. Note: These settings override any customized settings on transaction forms you use. There are also preferences to set default values for new customer records at Setup &gt; Company &gt; Preferences &gt; Printing, Fax,&amp; Email Preferences. On the Print subtab, Fax subtab, or Email subtab, check Customers Default to [Print/Fax/Email] Transactions. You can also set these fields using the Mass Update function. Go to Lists &gt; Mass Updates &gt; Mass Updates &gt; General and click Customer.  # noqa: E501

        :param email_transactions: The email_transactions of this Customer.  # noqa: E501
        :type: bool
        """

        self._email_transactions = email_transactions

    @property
    def print_on_check_as(self):
        """Gets the print_on_check_as of this Customer.  # noqa: E501

        What you enter here prints on the Pay to the Order of line of a check instead of what you entered in the Customer field.  # noqa: E501

        :return: The print_on_check_as of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._print_on_check_as

    @print_on_check_as.setter
    def print_on_check_as(self, print_on_check_as):
        """Sets the print_on_check_as of this Customer.

        What you enter here prints on the Pay to the Order of line of a check instead of what you entered in the Customer field.  # noqa: E501

        :param print_on_check_as: The print_on_check_as of this Customer.  # noqa: E501
        :type: str
        """

        self._print_on_check_as = print_on_check_as

    @property
    def custentityka_type(self):
        """Gets the custentityka_type of this Customer.  # noqa: E501


        :return: The custentityka_type of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentityka_type

    @custentityka_type.setter
    def custentityka_type(self, custentityka_type):
        """Sets the custentityka_type of this Customer.


        :param custentityka_type: The custentityka_type of this Customer.  # noqa: E501
        :type: str
        """

        self._custentityka_type = custentityka_type

    @property
    def custentity_mcs_ashp(self):
        """Gets the custentity_mcs_ashp of this Customer.  # noqa: E501


        :return: The custentity_mcs_ashp of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_mcs_ashp

    @custentity_mcs_ashp.setter
    def custentity_mcs_ashp(self, custentity_mcs_ashp):
        """Sets the custentity_mcs_ashp of this Customer.


        :param custentity_mcs_ashp: The custentity_mcs_ashp of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_mcs_ashp = custentity_mcs_ashp

    @property
    def fax(self):
        """Gets the fax of this Customer.  # noqa: E501

        Enter a fax number for this record. You should enter the fax number exactly as it must be dialed. If a &apos;1&apos; is required to fax to this number, be sure to include it at the beginning of the number. The number you enter automatically appears in the To Be Faxed field of transactions when you select this customer. To fax NetSuite forms, an administrator must first set up fax service at Setup &gt; Set Up Printing, Fax and E-mail &gt; Fax.  # noqa: E501

        :return: The fax of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._fax

    @fax.setter
    def fax(self, fax):
        """Sets the fax of this Customer.

        Enter a fax number for this record. You should enter the fax number exactly as it must be dialed. If a &apos;1&apos; is required to fax to this number, be sure to include it at the beginning of the number. The number you enter automatically appears in the To Be Faxed field of transactions when you select this customer. To fax NetSuite forms, an administrator must first set up fax service at Setup &gt; Set Up Printing, Fax and E-mail &gt; Fax.  # noqa: E501

        :param fax: The fax of this Customer.  # noqa: E501
        :type: str
        """

        self._fax = fax

    @property
    def custentity_solar_trng_details(self):
        """Gets the custentity_solar_trng_details of this Customer.  # noqa: E501


        :return: The custentity_solar_trng_details of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_solar_trng_details

    @custentity_solar_trng_details.setter
    def custentity_solar_trng_details(self, custentity_solar_trng_details):
        """Sets the custentity_solar_trng_details of this Customer.


        :param custentity_solar_trng_details: The custentity_solar_trng_details of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_solar_trng_details = custentity_solar_trng_details

    @property
    def custentity_subregion_check(self):
        """Gets the custentity_subregion_check of this Customer.  # noqa: E501


        :return: The custentity_subregion_check of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_subregion_check

    @custentity_subregion_check.setter
    def custentity_subregion_check(self, custentity_subregion_check):
        """Sets the custentity_subregion_check of this Customer.


        :param custentity_subregion_check: The custentity_subregion_check of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_subregion_check = custentity_subregion_check

    @property
    def last_name(self):
        """Gets the last_name of this Customer.  # noqa: E501

        Optionally enter a last name here.  # noqa: E501

        :return: The last_name of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this Customer.

        Optionally enter a last name here.  # noqa: E501

        :param last_name: The last_name of this Customer.  # noqa: E501
        :type: str
        """

        self._last_name = last_name

    @property
    def custentitydl_expiry(self):
        """Gets the custentitydl_expiry of this Customer.  # noqa: E501


        :return: The custentitydl_expiry of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentitydl_expiry

    @custentitydl_expiry.setter
    def custentitydl_expiry(self, custentitydl_expiry):
        """Sets the custentitydl_expiry of this Customer.


        :param custentitydl_expiry: The custentitydl_expiry of this Customer.  # noqa: E501
        :type: date
        """

        self._custentitydl_expiry = custentitydl_expiry

    @property
    def custentity_prequote_call(self):
        """Gets the custentity_prequote_call of this Customer.  # noqa: E501


        :return: The custentity_prequote_call of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_prequote_call

    @custentity_prequote_call.setter
    def custentity_prequote_call(self, custentity_prequote_call):
        """Sets the custentity_prequote_call of this Customer.


        :param custentity_prequote_call: The custentity_prequote_call of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_prequote_call = custentity_prequote_call

    @property
    def custentityinterested_solar(self):
        """Gets the custentityinterested_solar of this Customer.  # noqa: E501


        :return: The custentityinterested_solar of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentityinterested_solar

    @custentityinterested_solar.setter
    def custentityinterested_solar(self, custentityinterested_solar):
        """Sets the custentityinterested_solar of this Customer.


        :param custentityinterested_solar: The custentityinterested_solar of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentityinterested_solar = custentityinterested_solar

    @property
    def end_date(self):
        """Gets the end_date of this Customer.  # noqa: E501

        If you have a contract with this customer, enter the end date here. If you are entering a job record, enter the projected end date of the job here.  # noqa: E501

        :return: The end_date of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this Customer.

        If you have a contract with this customer, enter the end date here. If you are entering a job record, enter the projected end date of the job here.  # noqa: E501

        :param end_date: The end_date of this Customer.  # noqa: E501
        :type: date
        """

        self._end_date = end_date

    @property
    def custentity_mm_lastoptinkeyword(self):
        """Gets the custentity_mm_lastoptinkeyword of this Customer.  # noqa: E501


        :return: The custentity_mm_lastoptinkeyword of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_mm_lastoptinkeyword

    @custentity_mm_lastoptinkeyword.setter
    def custentity_mm_lastoptinkeyword(self, custentity_mm_lastoptinkeyword):
        """Sets the custentity_mm_lastoptinkeyword of this Customer.


        :param custentity_mm_lastoptinkeyword: The custentity_mm_lastoptinkeyword of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_mm_lastoptinkeyword = custentity_mm_lastoptinkeyword

    @property
    def custentity_ri_pl_limit(self):
        """Gets the custentity_ri_pl_limit of this Customer.  # noqa: E501


        :return: The custentity_ri_pl_limit of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_ri_pl_limit

    @custentity_ri_pl_limit.setter
    def custentity_ri_pl_limit(self, custentity_ri_pl_limit):
        """Sets the custentity_ri_pl_limit of this Customer.


        :param custentity_ri_pl_limit: The custentity_ri_pl_limit of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_ri_pl_limit = custentity_ri_pl_limit

    @property
    def custentity_optin_date(self):
        """Gets the custentity_optin_date of this Customer.  # noqa: E501


        :return: The custentity_optin_date of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentity_optin_date

    @custentity_optin_date.setter
    def custentity_optin_date(self, custentity_optin_date):
        """Sets the custentity_optin_date of this Customer.


        :param custentity_optin_date: The custentity_optin_date of this Customer.  # noqa: E501
        :type: date
        """

        self._custentity_optin_date = custentity_optin_date

    @property
    def phone(self):
        """Gets the phone of this Customer.  # noqa: E501

        Enter a phone number for your customer. It will appear on the Customer List report.  # noqa: E501

        :return: The phone of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this Customer.

        Enter a phone number for your customer. It will appear on the Customer List report.  # noqa: E501

        :param phone: The phone of this Customer.  # noqa: E501
        :type: str
        """

        self._phone = phone

    @property
    def custentity_pr_link(self):
        """Gets the custentity_pr_link of this Customer.  # noqa: E501


        :return: The custentity_pr_link of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_pr_link

    @custentity_pr_link.setter
    def custentity_pr_link(self, custentity_pr_link):
        """Sets the custentity_pr_link of this Customer.


        :param custentity_pr_link: The custentity_pr_link of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_pr_link = custentity_pr_link

    @property
    def custentity_as_hwl_disc(self):
        """Gets the custentity_as_hwl_disc of this Customer.  # noqa: E501


        :return: The custentity_as_hwl_disc of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_as_hwl_disc

    @custentity_as_hwl_disc.setter
    def custentity_as_hwl_disc(self, custentity_as_hwl_disc):
        """Sets the custentity_as_hwl_disc of this Customer.


        :param custentity_as_hwl_disc: The custentity_as_hwl_disc of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_as_hwl_disc = custentity_as_hwl_disc

    @property
    def custentity_erpff_p2p_party_endp_op_id(self):
        """Gets the custentity_erpff_p2p_party_endp_op_id of this Customer.  # noqa: E501


        :return: The custentity_erpff_p2p_party_endp_op_id of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_erpff_p2p_party_endp_op_id

    @custentity_erpff_p2p_party_endp_op_id.setter
    def custentity_erpff_p2p_party_endp_op_id(self, custentity_erpff_p2p_party_endp_op_id):
        """Sets the custentity_erpff_p2p_party_endp_op_id of this Customer.


        :param custentity_erpff_p2p_party_endp_op_id: The custentity_erpff_p2p_party_endp_op_id of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_erpff_p2p_party_endp_op_id = custentity_erpff_p2p_party_endp_op_id

    @property
    def custentity_sales_rep_title(self):
        """Gets the custentity_sales_rep_title of this Customer.  # noqa: E501


        :return: The custentity_sales_rep_title of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_sales_rep_title

    @custentity_sales_rep_title.setter
    def custentity_sales_rep_title(self, custentity_sales_rep_title):
        """Sets the custentity_sales_rep_title of this Customer.


        :param custentity_sales_rep_title: The custentity_sales_rep_title of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_sales_rep_title = custentity_sales_rep_title

    @property
    def custentity_signature_image(self):
        """Gets the custentity_signature_image of this Customer.  # noqa: E501


        :return: The custentity_signature_image of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_signature_image

    @custentity_signature_image.setter
    def custentity_signature_image(self, custentity_signature_image):
        """Sets the custentity_signature_image of this Customer.


        :param custentity_signature_image: The custentity_signature_image of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_signature_image = custentity_signature_image

    @property
    def custentity_2663_customer_refund(self):
        """Gets the custentity_2663_customer_refund of this Customer.  # noqa: E501


        :return: The custentity_2663_customer_refund of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_2663_customer_refund

    @custentity_2663_customer_refund.setter
    def custentity_2663_customer_refund(self, custentity_2663_customer_refund):
        """Sets the custentity_2663_customer_refund of this Customer.


        :param custentity_2663_customer_refund: The custentity_2663_customer_refund of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_2663_customer_refund = custentity_2663_customer_refund

    @property
    def custentity_neceic_qualifications(self):
        """Gets the custentity_neceic_qualifications of this Customer.  # noqa: E501


        :return: The custentity_neceic_qualifications of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_neceic_qualifications

    @custentity_neceic_qualifications.setter
    def custentity_neceic_qualifications(self, custentity_neceic_qualifications):
        """Sets the custentity_neceic_qualifications of this Customer.


        :param custentity_neceic_qualifications: The custentity_neceic_qualifications of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_neceic_qualifications = custentity_neceic_qualifications

    @property
    def custentity_conf_2yrs_indexp(self):
        """Gets the custentity_conf_2yrs_indexp of this Customer.  # noqa: E501


        :return: The custentity_conf_2yrs_indexp of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_conf_2yrs_indexp

    @custentity_conf_2yrs_indexp.setter
    def custentity_conf_2yrs_indexp(self, custentity_conf_2yrs_indexp):
        """Sets the custentity_conf_2yrs_indexp of this Customer.


        :param custentity_conf_2yrs_indexp: The custentity_conf_2yrs_indexp of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_conf_2yrs_indexp = custentity_conf_2yrs_indexp

    @property
    def is_person(self):
        """Gets the is_person of this Customer.  # noqa: E501

        Choose the type of customer record you are creating by selecting Company or Individual in the Type field. This selection determines which fields and subtabs are used on this record.  # noqa: E501

        :return: The is_person of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._is_person

    @is_person.setter
    def is_person(self, is_person):
        """Sets the is_person of this Customer.

        Choose the type of customer record you are creating by selecting Company or Individual in the Type field. This selection determines which fields and subtabs are used on this record.  # noqa: E501

        :param is_person: The is_person of this Customer.  # noqa: E501
        :type: bool
        """

        self._is_person = is_person

    @property
    def opening_balance_date(self):
        """Gets the opening_balance_date of this Customer.  # noqa: E501

        Enter the date of the balance entered in the Opening Balance field.  # noqa: E501

        :return: The opening_balance_date of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._opening_balance_date

    @opening_balance_date.setter
    def opening_balance_date(self, opening_balance_date):
        """Sets the opening_balance_date of this Customer.

        Enter the date of the balance entered in the Opening Balance field.  # noqa: E501

        :param opening_balance_date: The opening_balance_date of this Customer.  # noqa: E501
        :type: date
        """

        self._opening_balance_date = opening_balance_date

    @property
    def custentity_account_opened(self):
        """Gets the custentity_account_opened of this Customer.  # noqa: E501


        :return: The custentity_account_opened of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentity_account_opened

    @custentity_account_opened.setter
    def custentity_account_opened(self, custentity_account_opened):
        """Sets the custentity_account_opened of this Customer.


        :param custentity_account_opened: The custentity_account_opened of this Customer.  # noqa: E501
        :type: date
        """

        self._custentity_account_opened = custentity_account_opened

    @property
    def custentity_tax_contact_middle(self):
        """Gets the custentity_tax_contact_middle of this Customer.  # noqa: E501


        :return: The custentity_tax_contact_middle of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_tax_contact_middle

    @custentity_tax_contact_middle.setter
    def custentity_tax_contact_middle(self, custentity_tax_contact_middle):
        """Sets the custentity_tax_contact_middle of this Customer.


        :param custentity_tax_contact_middle: The custentity_tax_contact_middle of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_tax_contact_middle = custentity_tax_contact_middle

    @property
    def custentity_ufh_discount(self):
        """Gets the custentity_ufh_discount of this Customer.  # noqa: E501


        :return: The custentity_ufh_discount of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_ufh_discount

    @custentity_ufh_discount.setter
    def custentity_ufh_discount(self, custentity_ufh_discount):
        """Sets the custentity_ufh_discount of this Customer.


        :param custentity_ufh_discount: The custentity_ufh_discount of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_ufh_discount = custentity_ufh_discount

    @property
    def custentity_bdm_exclude(self):
        """Gets the custentity_bdm_exclude of this Customer.  # noqa: E501


        :return: The custentity_bdm_exclude of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_bdm_exclude

    @custentity_bdm_exclude.setter
    def custentity_bdm_exclude(self, custentity_bdm_exclude):
        """Sets the custentity_bdm_exclude of this Customer.


        :param custentity_bdm_exclude: The custentity_bdm_exclude of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_bdm_exclude = custentity_bdm_exclude

    @property
    def number_format(self):
        """Gets the number_format of this Customer.  # noqa: E501


        :return: The number_format of this Customer.  # noqa: E501
        :rtype: CustomerNumberFormat
        """
        return self._number_format

    @number_format.setter
    def number_format(self, number_format):
        """Sets the number_format of this Customer.


        :param number_format: The number_format of this Customer.  # noqa: E501
        :type: CustomerNumberFormat
        """

        self._number_format = number_format

    @property
    def custentity_ufh_approv_training(self):
        """Gets the custentity_ufh_approv_training of this Customer.  # noqa: E501


        :return: The custentity_ufh_approv_training of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_ufh_approv_training

    @custentity_ufh_approv_training.setter
    def custentity_ufh_approv_training(self, custentity_ufh_approv_training):
        """Sets the custentity_ufh_approv_training of this Customer.


        :param custentity_ufh_approv_training: The custentity_ufh_approv_training of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_ufh_approv_training = custentity_ufh_approv_training

    @property
    def custentity_ufh_installer(self):
        """Gets the custentity_ufh_installer of this Customer.  # noqa: E501


        :return: The custentity_ufh_installer of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_ufh_installer

    @custentity_ufh_installer.setter
    def custentity_ufh_installer(self, custentity_ufh_installer):
        """Sets the custentity_ufh_installer of this Customer.


        :param custentity_ufh_installer: The custentity_ufh_installer of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_ufh_installer = custentity_ufh_installer

    @property
    def custentity_open_opps_count(self):
        """Gets the custentity_open_opps_count of this Customer.  # noqa: E501


        :return: The custentity_open_opps_count of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._custentity_open_opps_count

    @custentity_open_opps_count.setter
    def custentity_open_opps_count(self, custentity_open_opps_count):
        """Sets the custentity_open_opps_count of this Customer.


        :param custentity_open_opps_count: The custentity_open_opps_count of this Customer.  # noqa: E501
        :type: int
        """

        self._custentity_open_opps_count = custentity_open_opps_count

    @property
    def is_budget_approved(self):
        """Gets the is_budget_approved of this Customer.  # noqa: E501

        Check this box if the customer&apos;s budget has been approved.  # noqa: E501

        :return: The is_budget_approved of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._is_budget_approved

    @is_budget_approved.setter
    def is_budget_approved(self, is_budget_approved):
        """Sets the is_budget_approved of this Customer.

        Check this box if the customer&apos;s budget has been approved.  # noqa: E501

        :param is_budget_approved: The is_budget_approved of this Customer.  # noqa: E501
        :type: bool
        """

        self._is_budget_approved = is_budget_approved

    @property
    def custentity_in_enq_local(self):
        """Gets the custentity_in_enq_local of this Customer.  # noqa: E501


        :return: The custentity_in_enq_local of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_in_enq_local

    @custentity_in_enq_local.setter
    def custentity_in_enq_local(self, custentity_in_enq_local):
        """Sets the custentity_in_enq_local of this Customer.


        :param custentity_in_enq_local: The custentity_in_enq_local of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_in_enq_local = custentity_in_enq_local

    @property
    def custentity_ri_score(self):
        """Gets the custentity_ri_score of this Customer.  # noqa: E501


        :return: The custentity_ri_score of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_ri_score

    @custentity_ri_score.setter
    def custentity_ri_score(self, custentity_ri_score):
        """Sets the custentity_ri_score of this Customer.


        :param custentity_ri_score: The custentity_ri_score of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_ri_score = custentity_ri_score

    @property
    def custentity_test_entity(self):
        """Gets the custentity_test_entity of this Customer.  # noqa: E501


        :return: The custentity_test_entity of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_test_entity

    @custentity_test_entity.setter
    def custentity_test_entity(self, custentity_test_entity):
        """Sets the custentity_test_entity of this Customer.


        :param custentity_test_entity: The custentity_test_entity of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_test_entity = custentity_test_entity

    @property
    def custentity_credit_insturance(self):
        """Gets the custentity_credit_insturance of this Customer.  # noqa: E501


        :return: The custentity_credit_insturance of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_credit_insturance

    @custentity_credit_insturance.setter
    def custentity_credit_insturance(self, custentity_credit_insturance):
        """Sets the custentity_credit_insturance of this Customer.


        :param custentity_credit_insturance: The custentity_credit_insturance of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_credit_insturance = custentity_credit_insturance

    @property
    def custentity_pre_requisites_certs(self):
        """Gets the custentity_pre_requisites_certs of this Customer.  # noqa: E501


        :return: The custentity_pre_requisites_certs of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_pre_requisites_certs

    @custentity_pre_requisites_certs.setter
    def custentity_pre_requisites_certs(self, custentity_pre_requisites_certs):
        """Sets the custentity_pre_requisites_certs of this Customer.


        :param custentity_pre_requisites_certs: The custentity_pre_requisites_certs of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_pre_requisites_certs = custentity_pre_requisites_certs

    @property
    def custentity_sales_rep_dd(self):
        """Gets the custentity_sales_rep_dd of this Customer.  # noqa: E501


        :return: The custentity_sales_rep_dd of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_sales_rep_dd

    @custentity_sales_rep_dd.setter
    def custentity_sales_rep_dd(self, custentity_sales_rep_dd):
        """Sets the custentity_sales_rep_dd of this Customer.


        :param custentity_sales_rep_dd: The custentity_sales_rep_dd of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_sales_rep_dd = custentity_sales_rep_dd

    @property
    def custentity_sales_camp_target(self):
        """Gets the custentity_sales_camp_target of this Customer.  # noqa: E501


        :return: The custentity_sales_camp_target of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_sales_camp_target

    @custentity_sales_camp_target.setter
    def custentity_sales_camp_target(self, custentity_sales_camp_target):
        """Sets the custentity_sales_camp_target of this Customer.


        :param custentity_sales_camp_target: The custentity_sales_camp_target of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_sales_camp_target = custentity_sales_camp_target

    @property
    def custentity_ri_finance_rating(self):
        """Gets the custentity_ri_finance_rating of this Customer.  # noqa: E501


        :return: The custentity_ri_finance_rating of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._custentity_ri_finance_rating

    @custentity_ri_finance_rating.setter
    def custentity_ri_finance_rating(self, custentity_ri_finance_rating):
        """Sets the custentity_ri_finance_rating of this Customer.


        :param custentity_ri_finance_rating: The custentity_ri_finance_rating of this Customer.  # noqa: E501
        :type: int
        """

        self._custentity_ri_finance_rating = custentity_ri_finance_rating

    @property
    def custentity_mcs_number(self):
        """Gets the custentity_mcs_number of this Customer.  # noqa: E501


        :return: The custentity_mcs_number of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_mcs_number

    @custentity_mcs_number.setter
    def custentity_mcs_number(self, custentity_mcs_number):
        """Sets the custentity_mcs_number of this Customer.


        :param custentity_mcs_number: The custentity_mcs_number of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_mcs_number = custentity_mcs_number

    @property
    def custentity_gdpr_mc_reconsent_2(self):
        """Gets the custentity_gdpr_mc_reconsent_2 of this Customer.  # noqa: E501


        :return: The custentity_gdpr_mc_reconsent_2 of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_gdpr_mc_reconsent_2

    @custentity_gdpr_mc_reconsent_2.setter
    def custentity_gdpr_mc_reconsent_2(self, custentity_gdpr_mc_reconsent_2):
        """Sets the custentity_gdpr_mc_reconsent_2 of this Customer.


        :param custentity_gdpr_mc_reconsent_2: The custentity_gdpr_mc_reconsent_2 of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_gdpr_mc_reconsent_2 = custentity_gdpr_mc_reconsent_2

    @property
    def global_subscription_status(self):
        """Gets the global_subscription_status of this Customer.  # noqa: E501


        :return: The global_subscription_status of this Customer.  # noqa: E501
        :rtype: CustomerGlobalSubscriptionStatus
        """
        return self._global_subscription_status

    @global_subscription_status.setter
    def global_subscription_status(self, global_subscription_status):
        """Sets the global_subscription_status of this Customer.


        :param global_subscription_status: The global_subscription_status of this Customer.  # noqa: E501
        :type: CustomerGlobalSubscriptionStatus
        """

        self._global_subscription_status = global_subscription_status

    @property
    def default_order_priority(self):
        """Gets the default_order_priority of this Customer.  # noqa: E501

        Enter a number to designate the priority for this customer.  # noqa: E501

        :return: The default_order_priority of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._default_order_priority

    @default_order_priority.setter
    def default_order_priority(self, default_order_priority):
        """Sets the default_order_priority of this Customer.

        Enter a number to designate the priority for this customer.  # noqa: E501

        :param default_order_priority: The default_order_priority of this Customer.  # noqa: E501
        :type: float
        """

        self._default_order_priority = default_order_priority

    @property
    def custentity_hp_qual_details(self):
        """Gets the custentity_hp_qual_details of this Customer.  # noqa: E501


        :return: The custentity_hp_qual_details of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_hp_qual_details

    @custentity_hp_qual_details.setter
    def custentity_hp_qual_details(self, custentity_hp_qual_details):
        """Sets the custentity_hp_qual_details of this Customer.


        :param custentity_hp_qual_details: The custentity_hp_qual_details of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_hp_qual_details = custentity_hp_qual_details

    @property
    def custentity_website_qr_number(self):
        """Gets the custentity_website_qr_number of this Customer.  # noqa: E501


        :return: The custentity_website_qr_number of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_website_qr_number

    @custentity_website_qr_number.setter
    def custentity_website_qr_number(self, custentity_website_qr_number):
        """Sets the custentity_website_qr_number of this Customer.


        :param custentity_website_qr_number: The custentity_website_qr_number of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_website_qr_number = custentity_website_qr_number

    @property
    def custentity_voucher_registered(self):
        """Gets the custentity_voucher_registered of this Customer.  # noqa: E501


        :return: The custentity_voucher_registered of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_voucher_registered

    @custentity_voucher_registered.setter
    def custentity_voucher_registered(self, custentity_voucher_registered):
        """Sets the custentity_voucher_registered of this Customer.


        :param custentity_voucher_registered: The custentity_voucher_registered of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_voucher_registered = custentity_voucher_registered

    @property
    def custentity_in_enq_future(self):
        """Gets the custentity_in_enq_future of this Customer.  # noqa: E501


        :return: The custentity_in_enq_future of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_in_enq_future

    @custentity_in_enq_future.setter
    def custentity_in_enq_future(self, custentity_in_enq_future):
        """Sets the custentity_in_enq_future of this Customer.


        :param custentity_in_enq_future: The custentity_in_enq_future of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_in_enq_future = custentity_in_enq_future

    @property
    def third_party_acct(self):
        """Gets the third_party_acct of this Customer.  # noqa: E501

        Enter this customer’s FedEx® or UPS® account number in the 3rd Party Billing Account Number field. This account number is used if you select Consignee Billing on item fulfillments using UPS or select Bill Recipient on item fulfillments using FedEx.  # noqa: E501

        :return: The third_party_acct of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._third_party_acct

    @third_party_acct.setter
    def third_party_acct(self, third_party_acct):
        """Sets the third_party_acct of this Customer.

        Enter this customer’s FedEx® or UPS® account number in the 3rd Party Billing Account Number field. This account number is used if you select Consignee Billing on item fulfillments using UPS or select Bill Recipient on item fulfillments using FedEx.  # noqa: E501

        :param third_party_acct: The third_party_acct of this Customer.  # noqa: E501
        :type: str
        """

        self._third_party_acct = third_party_acct

    @property
    def custentity_co_mailing_name(self):
        """Gets the custentity_co_mailing_name of this Customer.  # noqa: E501


        :return: The custentity_co_mailing_name of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_co_mailing_name

    @custentity_co_mailing_name.setter
    def custentity_co_mailing_name(self, custentity_co_mailing_name):
        """Sets the custentity_co_mailing_name of this Customer.


        :param custentity_co_mailing_name: The custentity_co_mailing_name of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_co_mailing_name = custentity_co_mailing_name

    @property
    def custentity_fsm(self):
        """Gets the custentity_fsm of this Customer.  # noqa: E501


        :return: The custentity_fsm of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_fsm

    @custentity_fsm.setter
    def custentity_fsm(self, custentity_fsm):
        """Sets the custentity_fsm of this Customer.


        :param custentity_fsm: The custentity_fsm of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_fsm = custentity_fsm

    @property
    def custentity_training_needs_detail(self):
        """Gets the custentity_training_needs_detail of this Customer.  # noqa: E501


        :return: The custentity_training_needs_detail of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_training_needs_detail

    @custentity_training_needs_detail.setter
    def custentity_training_needs_detail(self, custentity_training_needs_detail):
        """Sets the custentity_training_needs_detail of this Customer.


        :param custentity_training_needs_detail: The custentity_training_needs_detail of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_training_needs_detail = custentity_training_needs_detail

    @property
    def custentity_project_score(self):
        """Gets the custentity_project_score of this Customer.  # noqa: E501


        :return: The custentity_project_score of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._custentity_project_score

    @custentity_project_score.setter
    def custentity_project_score(self, custentity_project_score):
        """Sets the custentity_project_score of this Customer.


        :param custentity_project_score: The custentity_project_score of this Customer.  # noqa: E501
        :type: float
        """

        self._custentity_project_score = custentity_project_score

    @property
    def estimated_budget(self):
        """Gets the estimated_budget of this Customer.  # noqa: E501

        Enter the estimated budget the prospect or customer has for this opportunity.  # noqa: E501

        :return: The estimated_budget of this Customer.  # noqa: E501
        :rtype: float
        """
        return self._estimated_budget

    @estimated_budget.setter
    def estimated_budget(self, estimated_budget):
        """Sets the estimated_budget of this Customer.

        Enter the estimated budget the prospect or customer has for this opportunity.  # noqa: E501

        :param estimated_budget: The estimated_budget of this Customer.  # noqa: E501
        :type: float
        """

        self._estimated_budget = estimated_budget

    @property
    def custentityent_mobile_phone(self):
        """Gets the custentityent_mobile_phone of this Customer.  # noqa: E501


        :return: The custentityent_mobile_phone of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentityent_mobile_phone

    @custentityent_mobile_phone.setter
    def custentityent_mobile_phone(self, custentityent_mobile_phone):
        """Sets the custentityent_mobile_phone of this Customer.


        :param custentityent_mobile_phone: The custentityent_mobile_phone of this Customer.  # noqa: E501
        :type: str
        """

        self._custentityent_mobile_phone = custentityent_mobile_phone

    @property
    def custentity_discretionary_limit(self):
        """Gets the custentity_discretionary_limit of this Customer.  # noqa: E501


        :return: The custentity_discretionary_limit of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_discretionary_limit

    @custentity_discretionary_limit.setter
    def custentity_discretionary_limit(self, custentity_discretionary_limit):
        """Sets the custentity_discretionary_limit of this Customer.


        :param custentity_discretionary_limit: The custentity_discretionary_limit of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_discretionary_limit = custentity_discretionary_limit

    @property
    def custentity_in_enq_tech_installed(self):
        """Gets the custentity_in_enq_tech_installed of this Customer.  # noqa: E501


        :return: The custentity_in_enq_tech_installed of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_in_enq_tech_installed

    @custentity_in_enq_tech_installed.setter
    def custentity_in_enq_tech_installed(self, custentity_in_enq_tech_installed):
        """Sets the custentity_in_enq_tech_installed of this Customer.


        :param custentity_in_enq_tech_installed: The custentity_in_enq_tech_installed of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_in_enq_tech_installed = custentity_in_enq_tech_installed

    @property
    def custentity_3805_exclude_comp_email(self):
        """Gets the custentity_3805_exclude_comp_email of this Customer.  # noqa: E501


        :return: The custentity_3805_exclude_comp_email of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_3805_exclude_comp_email

    @custentity_3805_exclude_comp_email.setter
    def custentity_3805_exclude_comp_email(self, custentity_3805_exclude_comp_email):
        """Sets the custentity_3805_exclude_comp_email of this Customer.


        :param custentity_3805_exclude_comp_email: The custentity_3805_exclude_comp_email of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_3805_exclude_comp_email = custentity_3805_exclude_comp_email

    @property
    def custentity_2663_email_address_notif(self):
        """Gets the custentity_2663_email_address_notif of this Customer.  # noqa: E501


        :return: The custentity_2663_email_address_notif of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_2663_email_address_notif

    @custentity_2663_email_address_notif.setter
    def custentity_2663_email_address_notif(self, custentity_2663_email_address_notif):
        """Sets the custentity_2663_email_address_notif of this Customer.


        :param custentity_2663_email_address_notif: The custentity_2663_email_address_notif of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_2663_email_address_notif = custentity_2663_email_address_notif

    @property
    def custentity_build_start_date(self):
        """Gets the custentity_build_start_date of this Customer.  # noqa: E501


        :return: The custentity_build_start_date of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentity_build_start_date

    @custentity_build_start_date.setter
    def custentity_build_start_date(self, custentity_build_start_date):
        """Sets the custentity_build_start_date of this Customer.


        :param custentity_build_start_date: The custentity_build_start_date of this Customer.  # noqa: E501
        :type: date
        """

        self._custentity_build_start_date = custentity_build_start_date

    @property
    def custentity_keyaccount(self):
        """Gets the custentity_keyaccount of this Customer.  # noqa: E501


        :return: The custentity_keyaccount of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_keyaccount

    @custentity_keyaccount.setter
    def custentity_keyaccount(self, custentity_keyaccount):
        """Sets the custentity_keyaccount of this Customer.


        :param custentity_keyaccount: The custentity_keyaccount of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_keyaccount = custentity_keyaccount

    @property
    def custentity_alt_phone(self):
        """Gets the custentity_alt_phone of this Customer.  # noqa: E501


        :return: The custentity_alt_phone of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_alt_phone

    @custentity_alt_phone.setter
    def custentity_alt_phone(self, custentity_alt_phone):
        """Sets the custentity_alt_phone of this Customer.


        :param custentity_alt_phone: The custentity_alt_phone of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_alt_phone = custentity_alt_phone

    @property
    def custentity_dob(self):
        """Gets the custentity_dob of this Customer.  # noqa: E501


        :return: The custentity_dob of this Customer.  # noqa: E501
        :rtype: date
        """
        return self._custentity_dob

    @custentity_dob.setter
    def custentity_dob(self, custentity_dob):
        """Sets the custentity_dob of this Customer.


        :param custentity_dob: The custentity_dob of this Customer.  # noqa: E501
        :type: date
        """

        self._custentity_dob = custentity_dob

    @property
    def custentity_additonal_notes_backup(self):
        """Gets the custentity_additonal_notes_backup of this Customer.  # noqa: E501


        :return: The custentity_additonal_notes_backup of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_additonal_notes_backup

    @custentity_additonal_notes_backup.setter
    def custentity_additonal_notes_backup(self, custentity_additonal_notes_backup):
        """Sets the custentity_additonal_notes_backup of this Customer.


        :param custentity_additonal_notes_backup: The custentity_additonal_notes_backup of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_additonal_notes_backup = custentity_additonal_notes_backup

    @property
    def display_symbol(self):
        """Gets the display_symbol of this Customer.  # noqa: E501

        Enter a currency symbol and text to use for this currency. Include spaces if you want to separate the symbol from the currency value. For example, $ USD or $CAD. Use the Symbol Placement field to select where the symbol appears.  # noqa: E501

        :return: The display_symbol of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._display_symbol

    @display_symbol.setter
    def display_symbol(self, display_symbol):
        """Sets the display_symbol of this Customer.

        Enter a currency symbol and text to use for this currency. Include spaces if you want to separate the symbol from the currency value. For example, $ USD or $CAD. Use the Symbol Placement field to select where the symbol appears.  # noqa: E501

        :param display_symbol: The display_symbol of this Customer.  # noqa: E501
        :type: str
        """

        self._display_symbol = display_symbol

    @property
    def custentity_sales_rep_email(self):
        """Gets the custentity_sales_rep_email of this Customer.  # noqa: E501


        :return: The custentity_sales_rep_email of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_sales_rep_email

    @custentity_sales_rep_email.setter
    def custentity_sales_rep_email(self, custentity_sales_rep_email):
        """Sets the custentity_sales_rep_email of this Customer.


        :param custentity_sales_rep_email: The custentity_sales_rep_email of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_sales_rep_email = custentity_sales_rep_email

    @property
    def custentityinterested_hp(self):
        """Gets the custentityinterested_hp of this Customer.  # noqa: E501


        :return: The custentityinterested_hp of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentityinterested_hp

    @custentityinterested_hp.setter
    def custentityinterested_hp(self, custentityinterested_hp):
        """Sets the custentityinterested_hp of this Customer.


        :param custentityinterested_hp: The custentityinterested_hp of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentityinterested_hp = custentityinterested_hp

    @property
    def custentity_no_engineers(self):
        """Gets the custentity_no_engineers of this Customer.  # noqa: E501


        :return: The custentity_no_engineers of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._custentity_no_engineers

    @custentity_no_engineers.setter
    def custentity_no_engineers(self, custentity_no_engineers):
        """Sets the custentity_no_engineers of this Customer.


        :param custentity_no_engineers: The custentity_no_engineers of this Customer.  # noqa: E501
        :type: int
        """

        self._custentity_no_engineers = custentity_no_engineers

    @property
    def custentity_erpff_p2p_basw_tax_scheme_id(self):
        """Gets the custentity_erpff_p2p_basw_tax_scheme_id of this Customer.  # noqa: E501


        :return: The custentity_erpff_p2p_basw_tax_scheme_id of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._custentity_erpff_p2p_basw_tax_scheme_id

    @custentity_erpff_p2p_basw_tax_scheme_id.setter
    def custentity_erpff_p2p_basw_tax_scheme_id(self, custentity_erpff_p2p_basw_tax_scheme_id):
        """Sets the custentity_erpff_p2p_basw_tax_scheme_id of this Customer.


        :param custentity_erpff_p2p_basw_tax_scheme_id: The custentity_erpff_p2p_basw_tax_scheme_id of this Customer.  # noqa: E501
        :type: str
        """

        self._custentity_erpff_p2p_basw_tax_scheme_id = custentity_erpff_p2p_basw_tax_scheme_id

    @property
    def custentity_ri_partp_reg(self):
        """Gets the custentity_ri_partp_reg of this Customer.  # noqa: E501


        :return: The custentity_ri_partp_reg of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._custentity_ri_partp_reg

    @custentity_ri_partp_reg.setter
    def custentity_ri_partp_reg(self, custentity_ri_partp_reg):
        """Sets the custentity_ri_partp_reg of this Customer.


        :param custentity_ri_partp_reg: The custentity_ri_partp_reg of this Customer.  # noqa: E501
        :type: bool
        """

        self._custentity_ri_partp_reg = custentity_ri_partp_reg

    @property
    def ref_name(self):
        """Gets the ref_name of this Customer.  # noqa: E501


        :return: The ref_name of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._ref_name

    @ref_name.setter
    def ref_name(self, ref_name):
        """Sets the ref_name of this Customer.


        :param ref_name: The ref_name of this Customer.  # noqa: E501
        :type: str
        """

        self._ref_name = ref_name

    @property
    def links(self):
        """Gets the links of this Customer.  # noqa: E501


        :return: The links of this Customer.  # noqa: E501
        :rtype: list[NsLink]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this Customer.


        :param links: The links of this Customer.  # noqa: E501
        :type: list[NsLink]
        """

        self._links = links

    @property
    def custentityent_bestcontact(self):
        """Gets the custentityent_bestcontact of this Customer.  # noqa: E501


        :return: The custentityent_bestcontact of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentityent_bestcontact

    @custentityent_bestcontact.setter
    def custentityent_bestcontact(self, custentityent_bestcontact):
        """Sets the custentityent_bestcontact of this Customer.


        :param custentityent_bestcontact: The custentityent_bestcontact of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentityent_bestcontact = custentityent_bestcontact

    @property
    def custentity_field_sales_rep(self):
        """Gets the custentity_field_sales_rep of this Customer.  # noqa: E501


        :return: The custentity_field_sales_rep of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_field_sales_rep

    @custentity_field_sales_rep.setter
    def custentity_field_sales_rep(self, custentity_field_sales_rep):
        """Sets the custentity_field_sales_rep of this Customer.


        :param custentity_field_sales_rep: The custentity_field_sales_rep of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_field_sales_rep = custentity_field_sales_rep

    @property
    def contact_roles(self):
        """Gets the contact_roles of this Customer.  # noqa: E501


        :return: The contact_roles of this Customer.  # noqa: E501
        :rtype: CustomerContactRolesCollection
        """
        return self._contact_roles

    @contact_roles.setter
    def contact_roles(self, contact_roles):
        """Sets the contact_roles of this Customer.


        :param contact_roles: The contact_roles of this Customer.  # noqa: E501
        :type: CustomerContactRolesCollection
        """

        self._contact_roles = contact_roles

    @property
    def custentity_water_regulations_1999(self):
        """Gets the custentity_water_regulations_1999 of this Customer.  # noqa: E501


        :return: The custentity_water_regulations_1999 of this Customer.  # noqa: E501
        :rtype: OneOfcustomerCustentityWaterRegulations1999
        """
        return self._custentity_water_regulations_1999

    @custentity_water_regulations_1999.setter
    def custentity_water_regulations_1999(self, custentity_water_regulations_1999):
        """Sets the custentity_water_regulations_1999 of this Customer.


        :param custentity_water_regulations_1999: The custentity_water_regulations_1999 of this Customer.  # noqa: E501
        :type: OneOfcustomerCustentityWaterRegulations1999
        """

        self._custentity_water_regulations_1999 = custentity_water_regulations_1999

    @property
    def contact(self):
        """Gets the contact of this Customer.  # noqa: E501


        :return: The contact of this Customer.  # noqa: E501
        :rtype: Contact
        """
        return self._contact

    @contact.setter
    def contact(self, contact):
        """Sets the contact of this Customer.


        :param contact: The contact of this Customer.  # noqa: E501
        :type: Contact
        """

        self._contact = contact

    @property
    def custentity_3805_dunning_status(self):
        """Gets the custentity_3805_dunning_status of this Customer.  # noqa: E501


        :return: The custentity_3805_dunning_status of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_3805_dunning_status

    @custentity_3805_dunning_status.setter
    def custentity_3805_dunning_status(self, custentity_3805_dunning_status):
        """Sets the custentity_3805_dunning_status of this Customer.


        :param custentity_3805_dunning_status: The custentity_3805_dunning_status of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_3805_dunning_status = custentity_3805_dunning_status

    @property
    def custentity_tax_contact(self):
        """Gets the custentity_tax_contact of this Customer.  # noqa: E501


        :return: The custentity_tax_contact of this Customer.  # noqa: E501
        :rtype: Contact
        """
        return self._custentity_tax_contact

    @custentity_tax_contact.setter
    def custentity_tax_contact(self, custentity_tax_contact):
        """Sets the custentity_tax_contact of this Customer.


        :param custentity_tax_contact: The custentity_tax_contact of this Customer.  # noqa: E501
        :type: Contact
        """

        self._custentity_tax_contact = custentity_tax_contact

    @property
    def custentity_ethnic_group(self):
        """Gets the custentity_ethnic_group of this Customer.  # noqa: E501


        :return: The custentity_ethnic_group of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_ethnic_group

    @custentity_ethnic_group.setter
    def custentity_ethnic_group(self, custentity_ethnic_group):
        """Sets the custentity_ethnic_group of this Customer.


        :param custentity_ethnic_group: The custentity_ethnic_group of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_ethnic_group = custentity_ethnic_group

    @property
    def custentity_gdpr_contact_post(self):
        """Gets the custentity_gdpr_contact_post of this Customer.  # noqa: E501


        :return: The custentity_gdpr_contact_post of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_gdpr_contact_post

    @custentity_gdpr_contact_post.setter
    def custentity_gdpr_contact_post(self, custentity_gdpr_contact_post):
        """Sets the custentity_gdpr_contact_post of this Customer.


        :param custentity_gdpr_contact_post: The custentity_gdpr_contact_post of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_gdpr_contact_post = custentity_gdpr_contact_post

    @property
    def custentity_sol_course_attended(self):
        """Gets the custentity_sol_course_attended of this Customer.  # noqa: E501


        :return: The custentity_sol_course_attended of this Customer.  # noqa: E501
        :rtype: OneOfcustomerCustentitySolCourseAttended
        """
        return self._custentity_sol_course_attended

    @custentity_sol_course_attended.setter
    def custentity_sol_course_attended(self, custentity_sol_course_attended):
        """Sets the custentity_sol_course_attended of this Customer.


        :param custentity_sol_course_attended: The custentity_sol_course_attended of this Customer.  # noqa: E501
        :type: OneOfcustomerCustentitySolCourseAttended
        """

        self._custentity_sol_course_attended = custentity_sol_course_attended

    @property
    def custentity_hp_course_attended(self):
        """Gets the custentity_hp_course_attended of this Customer.  # noqa: E501


        :return: The custentity_hp_course_attended of this Customer.  # noqa: E501
        :rtype: OneOfcustomerCustentityHpCourseAttended
        """
        return self._custentity_hp_course_attended

    @custentity_hp_course_attended.setter
    def custentity_hp_course_attended(self, custentity_hp_course_attended):
        """Sets the custentity_hp_course_attended of this Customer.


        :param custentity_hp_course_attended: The custentity_hp_course_attended of this Customer.  # noqa: E501
        :type: OneOfcustomerCustentityHpCourseAttended
        """

        self._custentity_hp_course_attended = custentity_hp_course_attended

    @property
    def custentity_mktg_web_review(self):
        """Gets the custentity_mktg_web_review of this Customer.  # noqa: E501


        :return: The custentity_mktg_web_review of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_mktg_web_review

    @custentity_mktg_web_review.setter
    def custentity_mktg_web_review(self, custentity_mktg_web_review):
        """Sets the custentity_mktg_web_review of this Customer.


        :param custentity_mktg_web_review: The custentity_mktg_web_review of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_mktg_web_review = custentity_mktg_web_review

    @property
    def custentity_sub_region(self):
        """Gets the custentity_sub_region of this Customer.  # noqa: E501


        :return: The custentity_sub_region of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_sub_region

    @custentity_sub_region.setter
    def custentity_sub_region(self, custentity_sub_region):
        """Sets the custentity_sub_region of this Customer.


        :param custentity_sub_region: The custentity_sub_region of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_sub_region = custentity_sub_region

    @property
    def custentity_cust_sol_competitor(self):
        """Gets the custentity_cust_sol_competitor of this Customer.  # noqa: E501


        :return: The custentity_cust_sol_competitor of this Customer.  # noqa: E501
        :rtype: NsResourceCollection
        """
        return self._custentity_cust_sol_competitor

    @custentity_cust_sol_competitor.setter
    def custentity_cust_sol_competitor(self, custentity_cust_sol_competitor):
        """Sets the custentity_cust_sol_competitor of this Customer.


        :param custentity_cust_sol_competitor: The custentity_cust_sol_competitor of this Customer.  # noqa: E501
        :type: NsResourceCollection
        """

        self._custentity_cust_sol_competitor = custentity_cust_sol_competitor

    @property
    def custentity_gdpr_contact_phone(self):
        """Gets the custentity_gdpr_contact_phone of this Customer.  # noqa: E501


        :return: The custentity_gdpr_contact_phone of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_gdpr_contact_phone

    @custentity_gdpr_contact_phone.setter
    def custentity_gdpr_contact_phone(self, custentity_gdpr_contact_phone):
        """Sets the custentity_gdpr_contact_phone of this Customer.


        :param custentity_gdpr_contact_phone: The custentity_gdpr_contact_phone of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_gdpr_contact_phone = custentity_gdpr_contact_phone

    @property
    def default_bank_account(self):
        """Gets the default_bank_account of this Customer.  # noqa: E501


        :return: The default_bank_account of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._default_bank_account

    @default_bank_account.setter
    def default_bank_account(self, default_bank_account):
        """Sets the default_bank_account of this Customer.


        :param default_bank_account: The default_bank_account of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._default_bank_account = default_bank_account

    @property
    def custentity_9572_ddcust_entitybnkformat(self):
        """Gets the custentity_9572_ddcust_entitybnkformat of this Customer.  # noqa: E501


        :return: The custentity_9572_ddcust_entitybnkformat of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_9572_ddcust_entitybnkformat

    @custentity_9572_ddcust_entitybnkformat.setter
    def custentity_9572_ddcust_entitybnkformat(self, custentity_9572_ddcust_entitybnkformat):
        """Sets the custentity_9572_ddcust_entitybnkformat of this Customer.


        :param custentity_9572_ddcust_entitybnkformat: The custentity_9572_ddcust_entitybnkformat of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_9572_ddcust_entitybnkformat = custentity_9572_ddcust_entitybnkformat

    @property
    def custentity_3805_dunning_substatus(self):
        """Gets the custentity_3805_dunning_substatus of this Customer.  # noqa: E501


        :return: The custentity_3805_dunning_substatus of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_3805_dunning_substatus

    @custentity_3805_dunning_substatus.setter
    def custentity_3805_dunning_substatus(self, custentity_3805_dunning_substatus):
        """Sets the custentity_3805_dunning_substatus of this Customer.


        :param custentity_3805_dunning_substatus: The custentity_3805_dunning_substatus of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_3805_dunning_substatus = custentity_3805_dunning_substatus

    @property
    def custentity_further_training_offer(self):
        """Gets the custentity_further_training_offer of this Customer.  # noqa: E501


        :return: The custentity_further_training_offer of this Customer.  # noqa: E501
        :rtype: NsResourceCollection
        """
        return self._custentity_further_training_offer

    @custentity_further_training_offer.setter
    def custentity_further_training_offer(self, custentity_further_training_offer):
        """Sets the custentity_further_training_offer of this Customer.


        :param custentity_further_training_offer: The custentity_further_training_offer of this Customer.  # noqa: E501
        :type: NsResourceCollection
        """

        self._custentity_further_training_offer = custentity_further_training_offer

    @property
    def receivables_account(self):
        """Gets the receivables_account of this Customer.  # noqa: E501


        :return: The receivables_account of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._receivables_account

    @receivables_account.setter
    def receivables_account(self, receivables_account):
        """Sets the receivables_account of this Customer.


        :param receivables_account: The receivables_account of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._receivables_account = receivables_account

    @property
    def sales_readiness(self):
        """Gets the sales_readiness of this Customer.  # noqa: E501


        :return: The sales_readiness of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._sales_readiness

    @sales_readiness.setter
    def sales_readiness(self, sales_readiness):
        """Sets the sales_readiness of this Customer.


        :param sales_readiness: The sales_readiness of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._sales_readiness = sales_readiness

    @property
    def custentity_9997_dd_file_format(self):
        """Gets the custentity_9997_dd_file_format of this Customer.  # noqa: E501


        :return: The custentity_9997_dd_file_format of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_9997_dd_file_format

    @custentity_9997_dd_file_format.setter
    def custentity_9997_dd_file_format(self, custentity_9997_dd_file_format):
        """Sets the custentity_9997_dd_file_format of this Customer.


        :param custentity_9997_dd_file_format: The custentity_9997_dd_file_format of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_9997_dd_file_format = custentity_9997_dd_file_format

    @property
    def custentity_sol_volume_per_annum(self):
        """Gets the custentity_sol_volume_per_annum of this Customer.  # noqa: E501


        :return: The custentity_sol_volume_per_annum of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_sol_volume_per_annum

    @custentity_sol_volume_per_annum.setter
    def custentity_sol_volume_per_annum(self, custentity_sol_volume_per_annum):
        """Sets the custentity_sol_volume_per_annum of this Customer.


        :param custentity_sol_volume_per_annum: The custentity_sol_volume_per_annum of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_sol_volume_per_annum = custentity_sol_volume_per_annum

    @property
    def custentity_mkt_category(self):
        """Gets the custentity_mkt_category of this Customer.  # noqa: E501


        :return: The custentity_mkt_category of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_mkt_category

    @custentity_mkt_category.setter
    def custentity_mkt_category(self, custentity_mkt_category):
        """Sets the custentity_mkt_category of this Customer.


        :param custentity_mkt_category: The custentity_mkt_category of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_mkt_category = custentity_mkt_category

    @property
    def group_pricing(self):
        """Gets the group_pricing of this Customer.  # noqa: E501


        :return: The group_pricing of this Customer.  # noqa: E501
        :rtype: CustomerGroupPricingCollection
        """
        return self._group_pricing

    @group_pricing.setter
    def group_pricing(self, group_pricing):
        """Sets the group_pricing of this Customer.


        :param group_pricing: The group_pricing of this Customer.  # noqa: E501
        :type: CustomerGroupPricingCollection
        """

        self._group_pricing = group_pricing

    @property
    def pref_cc_processor(self):
        """Gets the pref_cc_processor of this Customer.  # noqa: E501


        :return: The pref_cc_processor of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._pref_cc_processor

    @pref_cc_processor.setter
    def pref_cc_processor(self, pref_cc_processor):
        """Sets the pref_cc_processor of this Customer.


        :param pref_cc_processor: The pref_cc_processor of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._pref_cc_processor = pref_cc_processor

    @property
    def custentityent_building_type(self):
        """Gets the custentityent_building_type of this Customer.  # noqa: E501


        :return: The custentityent_building_type of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentityent_building_type

    @custentityent_building_type.setter
    def custentityent_building_type(self, custentityent_building_type):
        """Sets the custentityent_building_type of this Customer.


        :param custentityent_building_type: The custentityent_building_type of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentityent_building_type = custentityent_building_type

    @property
    def sales_rep(self):
        """Gets the sales_rep of this Customer.  # noqa: E501


        :return: The sales_rep of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._sales_rep

    @sales_rep.setter
    def sales_rep(self, sales_rep):
        """Sets the sales_rep of this Customer.


        :param sales_rep: The sales_rep of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._sales_rep = sales_rep

    @property
    def custentity_would_recommend(self):
        """Gets the custentity_would_recommend of this Customer.  # noqa: E501


        :return: The custentity_would_recommend of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_would_recommend

    @custentity_would_recommend.setter
    def custentity_would_recommend(self, custentity_would_recommend):
        """Sets the custentity_would_recommend of this Customer.


        :param custentity_would_recommend: The custentity_would_recommend of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_would_recommend = custentity_would_recommend

    @property
    def custentity_building_stage(self):
        """Gets the custentity_building_stage of this Customer.  # noqa: E501


        :return: The custentity_building_stage of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_building_stage

    @custentity_building_stage.setter
    def custentity_building_stage(self, custentity_building_stage):
        """Sets the custentity_building_stage of this Customer.


        :param custentity_building_stage: The custentity_building_stage of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_building_stage = custentity_building_stage

    @property
    def shipping_item(self):
        """Gets the shipping_item of this Customer.  # noqa: E501


        :return: The shipping_item of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._shipping_item

    @shipping_item.setter
    def shipping_item(self, shipping_item):
        """Sets the shipping_item of this Customer.


        :param shipping_item: The shipping_item of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._shipping_item = shipping_item

    @property
    def opening_balance_account(self):
        """Gets the opening_balance_account of this Customer.  # noqa: E501


        :return: The opening_balance_account of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._opening_balance_account

    @opening_balance_account.setter
    def opening_balance_account(self, opening_balance_account):
        """Sets the opening_balance_account of this Customer.


        :param opening_balance_account: The opening_balance_account of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._opening_balance_account = opening_balance_account

    @property
    def subsidiary(self):
        """Gets the subsidiary of this Customer.  # noqa: E501


        :return: The subsidiary of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._subsidiary

    @subsidiary.setter
    def subsidiary(self, subsidiary):
        """Sets the subsidiary of this Customer.


        :param subsidiary: The subsidiary of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._subsidiary = subsidiary

    @property
    def custentity_cust_cat(self):
        """Gets the custentity_cust_cat of this Customer.  # noqa: E501


        :return: The custentity_cust_cat of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_cust_cat

    @custentity_cust_cat.setter
    def custentity_cust_cat(self, custentity_cust_cat):
        """Sets the custentity_cust_cat of this Customer.


        :param custentity_cust_cat: The custentity_cust_cat of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_cust_cat = custentity_cust_cat

    @property
    def custentity_energy_eff_attended(self):
        """Gets the custentity_energy_eff_attended of this Customer.  # noqa: E501


        :return: The custentity_energy_eff_attended of this Customer.  # noqa: E501
        :rtype: OneOfcustomerCustentityEnergyEffAttended
        """
        return self._custentity_energy_eff_attended

    @custentity_energy_eff_attended.setter
    def custentity_energy_eff_attended(self, custentity_energy_eff_attended):
        """Sets the custentity_energy_eff_attended of this Customer.


        :param custentity_energy_eff_attended: The custentity_energy_eff_attended of this Customer.  # noqa: E501
        :type: OneOfcustomerCustentityEnergyEffAttended
        """

        self._custentity_energy_eff_attended = custentity_energy_eff_attended

    @property
    def territory(self):
        """Gets the territory of this Customer.  # noqa: E501


        :return: The territory of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._territory

    @territory.setter
    def territory(self, territory):
        """Sets the territory of this Customer.


        :param territory: The territory of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._territory = territory

    @property
    def custentity_ff_sc_entity_ita_pay_term(self):
        """Gets the custentity_ff_sc_entity_ita_pay_term of this Customer.  # noqa: E501


        :return: The custentity_ff_sc_entity_ita_pay_term of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_ff_sc_entity_ita_pay_term

    @custentity_ff_sc_entity_ita_pay_term.setter
    def custentity_ff_sc_entity_ita_pay_term(self, custentity_ff_sc_entity_ita_pay_term):
        """Sets the custentity_ff_sc_entity_ita_pay_term of this Customer.


        :param custentity_ff_sc_entity_ita_pay_term: The custentity_ff_sc_entity_ita_pay_term of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_ff_sc_entity_ita_pay_term = custentity_ff_sc_entity_ita_pay_term

    @property
    def custentity_design_resp(self):
        """Gets the custentity_design_resp of this Customer.  # noqa: E501


        :return: The custentity_design_resp of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_design_resp

    @custentity_design_resp.setter
    def custentity_design_resp(self, custentity_design_resp):
        """Sets the custentity_design_resp of this Customer.


        :param custentity_design_resp: The custentity_design_resp of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_design_resp = custentity_design_resp

    @property
    def custentity_ff_sc_bank_details(self):
        """Gets the custentity_ff_sc_bank_details of this Customer.  # noqa: E501


        :return: The custentity_ff_sc_bank_details of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_ff_sc_bank_details

    @custentity_ff_sc_bank_details.setter
    def custentity_ff_sc_bank_details(self, custentity_ff_sc_bank_details):
        """Sets the custentity_ff_sc_bank_details of this Customer.


        :param custentity_ff_sc_bank_details: The custentity_ff_sc_bank_details of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_ff_sc_bank_details = custentity_ff_sc_bank_details

    @property
    def custentity_heat_source(self):
        """Gets the custentity_heat_source of this Customer.  # noqa: E501


        :return: The custentity_heat_source of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_heat_source

    @custentity_heat_source.setter
    def custentity_heat_source(self, custentity_heat_source):
        """Sets the custentity_heat_source of this Customer.


        :param custentity_heat_source: The custentity_heat_source of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_heat_source = custentity_heat_source

    @property
    def entity_status(self):
        """Gets the entity_status of this Customer.  # noqa: E501


        :return: The entity_status of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._entity_status

    @entity_status.setter
    def entity_status(self, entity_status):
        """Sets the entity_status of this Customer.


        :param entity_status: The entity_status of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._entity_status = entity_status

    @property
    def custentity_enquiry_no_of_floors(self):
        """Gets the custentity_enquiry_no_of_floors of this Customer.  # noqa: E501


        :return: The custentity_enquiry_no_of_floors of this Customer.  # noqa: E501
        :rtype: NsResourceCollection
        """
        return self._custentity_enquiry_no_of_floors

    @custentity_enquiry_no_of_floors.setter
    def custentity_enquiry_no_of_floors(self, custentity_enquiry_no_of_floors):
        """Sets the custentity_enquiry_no_of_floors of this Customer.


        :param custentity_enquiry_no_of_floors: The custentity_enquiry_no_of_floors of this Customer.  # noqa: E501
        :type: NsResourceCollection
        """

        self._custentity_enquiry_no_of_floors = custentity_enquiry_no_of_floors

    @property
    def custentity_initial_enq_glazing(self):
        """Gets the custentity_initial_enq_glazing of this Customer.  # noqa: E501


        :return: The custentity_initial_enq_glazing of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_initial_enq_glazing

    @custentity_initial_enq_glazing.setter
    def custentity_initial_enq_glazing(self, custentity_initial_enq_glazing):
        """Sets the custentity_initial_enq_glazing of this Customer.


        :param custentity_initial_enq_glazing: The custentity_initial_enq_glazing of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_initial_enq_glazing = custentity_initial_enq_glazing

    @property
    def billing_rate_card(self):
        """Gets the billing_rate_card of this Customer.  # noqa: E501


        :return: The billing_rate_card of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._billing_rate_card

    @billing_rate_card.setter
    def billing_rate_card(self, billing_rate_card):
        """Sets the billing_rate_card of this Customer.


        :param billing_rate_card: The billing_rate_card of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._billing_rate_card = billing_rate_card

    @property
    def custentity_mcs_status(self):
        """Gets the custentity_mcs_status of this Customer.  # noqa: E501


        :return: The custentity_mcs_status of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_mcs_status

    @custentity_mcs_status.setter
    def custentity_mcs_status(self, custentity_mcs_status):
        """Sets the custentity_mcs_status of this Customer.


        :param custentity_mcs_status: The custentity_mcs_status of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_mcs_status = custentity_mcs_status

    @property
    def custentity_hitachi_course_attended(self):
        """Gets the custentity_hitachi_course_attended of this Customer.  # noqa: E501


        :return: The custentity_hitachi_course_attended of this Customer.  # noqa: E501
        :rtype: OneOfcustomerCustentityHitachiCourseAttended
        """
        return self._custentity_hitachi_course_attended

    @custentity_hitachi_course_attended.setter
    def custentity_hitachi_course_attended(self, custentity_hitachi_course_attended):
        """Sets the custentity_hitachi_course_attended of this Customer.


        :param custentity_hitachi_course_attended: The custentity_hitachi_course_attended of this Customer.  # noqa: E501
        :type: OneOfcustomerCustentityHitachiCourseAttended
        """

        self._custentity_hitachi_course_attended = custentity_hitachi_course_attended

    @property
    def custentity_enquiry_loft_insulation(self):
        """Gets the custentity_enquiry_loft_insulation of this Customer.  # noqa: E501


        :return: The custentity_enquiry_loft_insulation of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_enquiry_loft_insulation

    @custentity_enquiry_loft_insulation.setter
    def custentity_enquiry_loft_insulation(self, custentity_enquiry_loft_insulation):
        """Sets the custentity_enquiry_loft_insulation of this Customer.


        :param custentity_enquiry_loft_insulation: The custentity_enquiry_loft_insulation of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_enquiry_loft_insulation = custentity_enquiry_loft_insulation

    @property
    def custentity_3805_dunning_procedure(self):
        """Gets the custentity_3805_dunning_procedure of this Customer.  # noqa: E501


        :return: The custentity_3805_dunning_procedure of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_3805_dunning_procedure

    @custentity_3805_dunning_procedure.setter
    def custentity_3805_dunning_procedure(self, custentity_3805_dunning_procedure):
        """Sets the custentity_3805_dunning_procedure of this Customer.


        :param custentity_3805_dunning_procedure: The custentity_3805_dunning_procedure of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_3805_dunning_procedure = custentity_3805_dunning_procedure

    @property
    def custentity_cust_ashp_competitor(self):
        """Gets the custentity_cust_ashp_competitor of this Customer.  # noqa: E501


        :return: The custentity_cust_ashp_competitor of this Customer.  # noqa: E501
        :rtype: NsResourceCollection
        """
        return self._custentity_cust_ashp_competitor

    @custentity_cust_ashp_competitor.setter
    def custentity_cust_ashp_competitor(self, custentity_cust_ashp_competitor):
        """Sets the custentity_cust_ashp_competitor of this Customer.


        :param custentity_cust_ashp_competitor: The custentity_cust_ashp_competitor of this Customer.  # noqa: E501
        :type: NsResourceCollection
        """

        self._custentity_cust_ashp_competitor = custentity_cust_ashp_competitor

    @property
    def custentity_type_of_discount(self):
        """Gets the custentity_type_of_discount of this Customer.  # noqa: E501


        :return: The custentity_type_of_discount of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_type_of_discount

    @custentity_type_of_discount.setter
    def custentity_type_of_discount(self, custentity_type_of_discount):
        """Sets the custentity_type_of_discount of this Customer.


        :param custentity_type_of_discount: The custentity_type_of_discount of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_type_of_discount = custentity_type_of_discount

    @property
    def custentity_9572_refcust_entitybnkformat(self):
        """Gets the custentity_9572_refcust_entitybnkformat of this Customer.  # noqa: E501


        :return: The custentity_9572_refcust_entitybnkformat of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_9572_refcust_entitybnkformat

    @custentity_9572_refcust_entitybnkformat.setter
    def custentity_9572_refcust_entitybnkformat(self, custentity_9572_refcust_entitybnkformat):
        """Sets the custentity_9572_refcust_entitybnkformat of this Customer.


        :param custentity_9572_refcust_entitybnkformat: The custentity_9572_refcust_entitybnkformat of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_9572_refcust_entitybnkformat = custentity_9572_refcust_entitybnkformat

    @property
    def custentity_not_using_nh(self):
        """Gets the custentity_not_using_nh of this Customer.  # noqa: E501


        :return: The custentity_not_using_nh of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_not_using_nh

    @custentity_not_using_nh.setter
    def custentity_not_using_nh(self, custentity_not_using_nh):
        """Sets the custentity_not_using_nh of this Customer.


        :param custentity_not_using_nh: The custentity_not_using_nh of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_not_using_nh = custentity_not_using_nh

    @property
    def custentity_recently_seen_an_ad(self):
        """Gets the custentity_recently_seen_an_ad of this Customer.  # noqa: E501


        :return: The custentity_recently_seen_an_ad of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_recently_seen_an_ad

    @custentity_recently_seen_an_ad.setter
    def custentity_recently_seen_an_ad(self, custentity_recently_seen_an_ad):
        """Sets the custentity_recently_seen_an_ad of this Customer.


        :param custentity_recently_seen_an_ad: The custentity_recently_seen_an_ad of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_recently_seen_an_ad = custentity_recently_seen_an_ad

    @property
    def custentity_ashp_volume_per_annum(self):
        """Gets the custentity_ashp_volume_per_annum of this Customer.  # noqa: E501


        :return: The custentity_ashp_volume_per_annum of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_ashp_volume_per_annum

    @custentity_ashp_volume_per_annum.setter
    def custentity_ashp_volume_per_annum(self, custentity_ashp_volume_per_annum):
        """Sets the custentity_ashp_volume_per_annum of this Customer.


        :param custentity_ashp_volume_per_annum: The custentity_ashp_volume_per_annum of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_ashp_volume_per_annum = custentity_ashp_volume_per_annum

    @property
    def custentity_heat_pump_training(self):
        """Gets the custentity_heat_pump_training of this Customer.  # noqa: E501


        :return: The custentity_heat_pump_training of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_heat_pump_training

    @custentity_heat_pump_training.setter
    def custentity_heat_pump_training(self, custentity_heat_pump_training):
        """Sets the custentity_heat_pump_training of this Customer.


        :param custentity_heat_pump_training: The custentity_heat_pump_training of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_heat_pump_training = custentity_heat_pump_training

    @property
    def custentity_dietry_requirements(self):
        """Gets the custentity_dietry_requirements of this Customer.  # noqa: E501


        :return: The custentity_dietry_requirements of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_dietry_requirements

    @custentity_dietry_requirements.setter
    def custentity_dietry_requirements(self, custentity_dietry_requirements):
        """Sets the custentity_dietry_requirements of this Customer.


        :param custentity_dietry_requirements: The custentity_dietry_requirements of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_dietry_requirements = custentity_dietry_requirements

    @property
    def custentity_9572_dd_file_format(self):
        """Gets the custentity_9572_dd_file_format of this Customer.  # noqa: E501


        :return: The custentity_9572_dd_file_format of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_9572_dd_file_format

    @custentity_9572_dd_file_format.setter
    def custentity_9572_dd_file_format(self, custentity_9572_dd_file_format):
        """Sets the custentity_9572_dd_file_format of this Customer.


        :param custentity_9572_dd_file_format: The custentity_9572_dd_file_format of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_9572_dd_file_format = custentity_9572_dd_file_format

    @property
    def address_book(self):
        """Gets the address_book of this Customer.  # noqa: E501


        :return: The address_book of this Customer.  # noqa: E501
        :rtype: CustomerAddressBookCollection
        """
        return self._address_book

    @address_book.setter
    def address_book(self, address_book):
        """Sets the address_book of this Customer.


        :param address_book: The address_book of this Customer.  # noqa: E501
        :type: CustomerAddressBookCollection
        """

        self._address_book = address_book

    @property
    def custentity_emp_letter_sig(self):
        """Gets the custentity_emp_letter_sig of this Customer.  # noqa: E501


        :return: The custentity_emp_letter_sig of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_emp_letter_sig

    @custentity_emp_letter_sig.setter
    def custentity_emp_letter_sig(self, custentity_emp_letter_sig):
        """Sets the custentity_emp_letter_sig of this Customer.


        :param custentity_emp_letter_sig: The custentity_emp_letter_sig of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_emp_letter_sig = custentity_emp_letter_sig

    @property
    def custentity_lead_mining_category(self):
        """Gets the custentity_lead_mining_category of this Customer.  # noqa: E501


        :return: The custentity_lead_mining_category of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_lead_mining_category

    @custentity_lead_mining_category.setter
    def custentity_lead_mining_category(self, custentity_lead_mining_category):
        """Sets the custentity_lead_mining_category of this Customer.


        :param custentity_lead_mining_category: The custentity_lead_mining_category of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_lead_mining_category = custentity_lead_mining_category

    @property
    def campaigns(self):
        """Gets the campaigns of this Customer.  # noqa: E501


        :return: The campaigns of this Customer.  # noqa: E501
        :rtype: CustomerCampaignsCollection
        """
        return self._campaigns

    @campaigns.setter
    def campaigns(self, campaigns):
        """Sets the campaigns of this Customer.


        :param campaigns: The campaigns of this Customer.  # noqa: E501
        :type: CustomerCampaignsCollection
        """

        self._campaigns = campaigns

    @property
    def custentity_best_contact_time(self):
        """Gets the custentity_best_contact_time of this Customer.  # noqa: E501


        :return: The custentity_best_contact_time of this Customer.  # noqa: E501
        :rtype: NsResourceCollection
        """
        return self._custentity_best_contact_time

    @custentity_best_contact_time.setter
    def custentity_best_contact_time(self, custentity_best_contact_time):
        """Sets the custentity_best_contact_time of this Customer.


        :param custentity_best_contact_time: The custentity_best_contact_time of this Customer.  # noqa: E501
        :type: NsResourceCollection
        """

        self._custentity_best_contact_time = custentity_best_contact_time

    @property
    def buying_reason(self):
        """Gets the buying_reason of this Customer.  # noqa: E501


        :return: The buying_reason of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._buying_reason

    @buying_reason.setter
    def buying_reason(self, buying_reason):
        """Sets the buying_reason of this Customer.


        :param buying_reason: The buying_reason of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._buying_reason = buying_reason

    @property
    def custentity_enquiry_wall_insulation(self):
        """Gets the custentity_enquiry_wall_insulation of this Customer.  # noqa: E501


        :return: The custentity_enquiry_wall_insulation of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_enquiry_wall_insulation

    @custentity_enquiry_wall_insulation.setter
    def custentity_enquiry_wall_insulation(self, custentity_enquiry_wall_insulation):
        """Sets the custentity_enquiry_wall_insulation of this Customer.


        :param custentity_enquiry_wall_insulation: The custentity_enquiry_wall_insulation of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_enquiry_wall_insulation = custentity_enquiry_wall_insulation

    @property
    def custentity_marketing_source(self):
        """Gets the custentity_marketing_source of this Customer.  # noqa: E501


        :return: The custentity_marketing_source of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_marketing_source

    @custentity_marketing_source.setter
    def custentity_marketing_source(self, custentity_marketing_source):
        """Sets the custentity_marketing_source of this Customer.


        :param custentity_marketing_source: The custentity_marketing_source of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_marketing_source = custentity_marketing_source

    @property
    def custentity_cust_department(self):
        """Gets the custentity_cust_department of this Customer.  # noqa: E501


        :return: The custentity_cust_department of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_cust_department

    @custentity_cust_department.setter
    def custentity_cust_department(self, custentity_cust_department):
        """Sets the custentity_cust_department of this Customer.


        :param custentity_cust_department: The custentity_cust_department of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_cust_department = custentity_cust_department

    @property
    def custentity_3805_dunning_level(self):
        """Gets the custentity_3805_dunning_level of this Customer.  # noqa: E501


        :return: The custentity_3805_dunning_level of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_3805_dunning_level

    @custentity_3805_dunning_level.setter
    def custentity_3805_dunning_level(self, custentity_3805_dunning_level):
        """Sets the custentity_3805_dunning_level of this Customer.


        :param custentity_3805_dunning_level: The custentity_3805_dunning_level of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_3805_dunning_level = custentity_3805_dunning_level

    @property
    def terms(self):
        """Gets the terms of this Customer.  # noqa: E501


        :return: The terms of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._terms

    @terms.setter
    def terms(self, terms):
        """Sets the terms of this Customer.


        :param terms: The terms of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._terms = terms

    @property
    def custentity_cust_instll_training(self):
        """Gets the custentity_cust_instll_training of this Customer.  # noqa: E501


        :return: The custentity_cust_instll_training of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_cust_instll_training

    @custentity_cust_instll_training.setter
    def custentity_cust_instll_training(self, custentity_cust_instll_training):
        """Sets the custentity_cust_instll_training of this Customer.


        :param custentity_cust_instll_training: The custentity_cust_instll_training of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_cust_instll_training = custentity_cust_instll_training

    @property
    def custentity_cust_gshp_competitor(self):
        """Gets the custentity_cust_gshp_competitor of this Customer.  # noqa: E501


        :return: The custentity_cust_gshp_competitor of this Customer.  # noqa: E501
        :rtype: NsResourceCollection
        """
        return self._custentity_cust_gshp_competitor

    @custentity_cust_gshp_competitor.setter
    def custentity_cust_gshp_competitor(self, custentity_cust_gshp_competitor):
        """Sets the custentity_cust_gshp_competitor of this Customer.


        :param custentity_cust_gshp_competitor: The custentity_cust_gshp_competitor of this Customer.  # noqa: E501
        :type: NsResourceCollection
        """

        self._custentity_cust_gshp_competitor = custentity_cust_gshp_competitor

    @property
    def custentitymcs_rating(self):
        """Gets the custentitymcs_rating of this Customer.  # noqa: E501


        :return: The custentitymcs_rating of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentitymcs_rating

    @custentitymcs_rating.setter
    def custentitymcs_rating(self, custentitymcs_rating):
        """Sets the custentitymcs_rating of this Customer.


        :param custentitymcs_rating: The custentitymcs_rating of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentitymcs_rating = custentitymcs_rating

    @property
    def custentity_enquiry_product_interest(self):
        """Gets the custentity_enquiry_product_interest of this Customer.  # noqa: E501


        :return: The custentity_enquiry_product_interest of this Customer.  # noqa: E501
        :rtype: NsResourceCollection
        """
        return self._custentity_enquiry_product_interest

    @custentity_enquiry_product_interest.setter
    def custentity_enquiry_product_interest(self, custentity_enquiry_product_interest):
        """Sets the custentity_enquiry_product_interest of this Customer.


        :param custentity_enquiry_product_interest: The custentity_enquiry_product_interest of this Customer.  # noqa: E501
        :type: NsResourceCollection
        """

        self._custentity_enquiry_product_interest = custentity_enquiry_product_interest

    @property
    def custentity_lm_lead_miner(self):
        """Gets the custentity_lm_lead_miner of this Customer.  # noqa: E501


        :return: The custentity_lm_lead_miner of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_lm_lead_miner

    @custentity_lm_lead_miner.setter
    def custentity_lm_lead_miner(self, custentity_lm_lead_miner):
        """Sets the custentity_lm_lead_miner of this Customer.


        :param custentity_lm_lead_miner: The custentity_lm_lead_miner of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_lm_lead_miner = custentity_lm_lead_miner

    @property
    def custentityri_market_sector(self):
        """Gets the custentityri_market_sector of this Customer.  # noqa: E501


        :return: The custentityri_market_sector of this Customer.  # noqa: E501
        :rtype: NsResourceCollection
        """
        return self._custentityri_market_sector

    @custentityri_market_sector.setter
    def custentityri_market_sector(self, custentityri_market_sector):
        """Sets the custentityri_market_sector of this Customer.


        :param custentityri_market_sector: The custentityri_market_sector of this Customer.  # noqa: E501
        :type: NsResourceCollection
        """

        self._custentityri_market_sector = custentityri_market_sector

    @property
    def custentity_mm_lastsmssentby(self):
        """Gets the custentity_mm_lastsmssentby of this Customer.  # noqa: E501


        :return: The custentity_mm_lastsmssentby of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_mm_lastsmssentby

    @custentity_mm_lastsmssentby.setter
    def custentity_mm_lastsmssentby(self, custentity_mm_lastsmssentby):
        """Sets the custentity_mm_lastsmssentby of this Customer.


        :param custentity_mm_lastsmssentby: The custentity_mm_lastsmssentby of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_mm_lastsmssentby = custentity_mm_lastsmssentby

    @property
    def custentity_3805_last_dunning_result(self):
        """Gets the custentity_3805_last_dunning_result of this Customer.  # noqa: E501


        :return: The custentity_3805_last_dunning_result of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_3805_last_dunning_result

    @custentity_3805_last_dunning_result.setter
    def custentity_3805_last_dunning_result(self, custentity_3805_last_dunning_result):
        """Sets the custentity_3805_last_dunning_result of this Customer.


        :param custentity_3805_last_dunning_result: The custentity_3805_last_dunning_result of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_3805_last_dunning_result = custentity_3805_last_dunning_result

    @property
    def custentity_web_category(self):
        """Gets the custentity_web_category of this Customer.  # noqa: E501


        :return: The custentity_web_category of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_web_category

    @custentity_web_category.setter
    def custentity_web_category(self, custentity_web_category):
        """Sets the custentity_web_category of this Customer.


        :param custentity_web_category: The custentity_web_category of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_web_category = custentity_web_category

    @property
    def custentity_rwh_volume_per_annum(self):
        """Gets the custentity_rwh_volume_per_annum of this Customer.  # noqa: E501


        :return: The custentity_rwh_volume_per_annum of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_rwh_volume_per_annum

    @custentity_rwh_volume_per_annum.setter
    def custentity_rwh_volume_per_annum(self, custentity_rwh_volume_per_annum):
        """Sets the custentity_rwh_volume_per_annum of this Customer.


        :param custentity_rwh_volume_per_annum: The custentity_rwh_volume_per_annum of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_rwh_volume_per_annum = custentity_rwh_volume_per_annum

    @property
    def custentity_in_enq_linked_customers(self):
        """Gets the custentity_in_enq_linked_customers of this Customer.  # noqa: E501


        :return: The custentity_in_enq_linked_customers of this Customer.  # noqa: E501
        :rtype: CustomerCollection
        """
        return self._custentity_in_enq_linked_customers

    @custentity_in_enq_linked_customers.setter
    def custentity_in_enq_linked_customers(self, custentity_in_enq_linked_customers):
        """Sets the custentity_in_enq_linked_customers of this Customer.


        :param custentity_in_enq_linked_customers: The custentity_in_enq_linked_customers of this Customer.  # noqa: E501
        :type: CustomerCollection
        """

        self._custentity_in_enq_linked_customers = custentity_in_enq_linked_customers

    @property
    def partner(self):
        """Gets the partner of this Customer.  # noqa: E501


        :return: The partner of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._partner

    @partner.setter
    def partner(self, partner):
        """Sets the partner of this Customer.


        :param partner: The partner of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._partner = partner

    @property
    def custentity_contact_details(self):
        """Gets the custentity_contact_details of this Customer.  # noqa: E501


        :return: The custentity_contact_details of this Customer.  # noqa: E501
        :rtype: Contact
        """
        return self._custentity_contact_details

    @custentity_contact_details.setter
    def custentity_contact_details(self, custentity_contact_details):
        """Sets the custentity_contact_details of this Customer.


        :param custentity_contact_details: The custentity_contact_details of this Customer.  # noqa: E501
        :type: Contact
        """

        self._custentity_contact_details = custentity_contact_details

    @property
    def custentity_cust_rwh_competitor(self):
        """Gets the custentity_cust_rwh_competitor of this Customer.  # noqa: E501


        :return: The custentity_cust_rwh_competitor of this Customer.  # noqa: E501
        :rtype: NsResourceCollection
        """
        return self._custentity_cust_rwh_competitor

    @custentity_cust_rwh_competitor.setter
    def custentity_cust_rwh_competitor(self, custentity_cust_rwh_competitor):
        """Sets the custentity_cust_rwh_competitor of this Customer.


        :param custentity_cust_rwh_competitor: The custentity_cust_rwh_competitor of this Customer.  # noqa: E501
        :type: NsResourceCollection
        """

        self._custentity_cust_rwh_competitor = custentity_cust_rwh_competitor

    @property
    def custentity_cus_follow_up(self):
        """Gets the custentity_cus_follow_up of this Customer.  # noqa: E501


        :return: The custentity_cus_follow_up of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_cus_follow_up

    @custentity_cus_follow_up.setter
    def custentity_cus_follow_up(self, custentity_cus_follow_up):
        """Sets the custentity_cus_follow_up of this Customer.


        :param custentity_cus_follow_up: The custentity_cus_follow_up of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_cus_follow_up = custentity_cus_follow_up

    @property
    def custentity_9572_refundcust_entitybnk_sub(self):
        """Gets the custentity_9572_refundcust_entitybnk_sub of this Customer.  # noqa: E501


        :return: The custentity_9572_refundcust_entitybnk_sub of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_9572_refundcust_entitybnk_sub

    @custentity_9572_refundcust_entitybnk_sub.setter
    def custentity_9572_refundcust_entitybnk_sub(self, custentity_9572_refundcust_entitybnk_sub):
        """Sets the custentity_9572_refundcust_entitybnk_sub of this Customer.


        :param custentity_9572_refundcust_entitybnk_sub: The custentity_9572_refundcust_entitybnk_sub of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_9572_refundcust_entitybnk_sub = custentity_9572_refundcust_entitybnk_sub

    @property
    def category(self):
        """Gets the category of this Customer.  # noqa: E501


        :return: The category of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this Customer.


        :param category: The category of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._category = category

    @property
    def custentity_gdpr_contact_text(self):
        """Gets the custentity_gdpr_contact_text of this Customer.  # noqa: E501


        :return: The custentity_gdpr_contact_text of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_gdpr_contact_text

    @custentity_gdpr_contact_text.setter
    def custentity_gdpr_contact_text(self, custentity_gdpr_contact_text):
        """Sets the custentity_gdpr_contact_text of this Customer.


        :param custentity_gdpr_contact_text: The custentity_gdpr_contact_text of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_gdpr_contact_text = custentity_gdpr_contact_text

    @property
    def source_web_site(self):
        """Gets the source_web_site of this Customer.  # noqa: E501


        :return: The source_web_site of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._source_web_site

    @source_web_site.setter
    def source_web_site(self, source_web_site):
        """Sets the source_web_site of this Customer.


        :param source_web_site: The source_web_site of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._source_web_site = source_web_site

    @property
    def custentity_gdpr_newsletter_req(self):
        """Gets the custentity_gdpr_newsletter_req of this Customer.  # noqa: E501


        :return: The custentity_gdpr_newsletter_req of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_gdpr_newsletter_req

    @custentity_gdpr_newsletter_req.setter
    def custentity_gdpr_newsletter_req(self, custentity_gdpr_newsletter_req):
        """Sets the custentity_gdpr_newsletter_req of this Customer.


        :param custentity_gdpr_newsletter_req: The custentity_gdpr_newsletter_req of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_gdpr_newsletter_req = custentity_gdpr_newsletter_req

    @property
    def custentity_type_of_scheme(self):
        """Gets the custentity_type_of_scheme of this Customer.  # noqa: E501


        :return: The custentity_type_of_scheme of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_type_of_scheme

    @custentity_type_of_scheme.setter
    def custentity_type_of_scheme(self, custentity_type_of_scheme):
        """Sets the custentity_type_of_scheme of this Customer.


        :param custentity_type_of_scheme: The custentity_type_of_scheme of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_type_of_scheme = custentity_type_of_scheme

    @property
    def custentity_ufh_volume_per_annum(self):
        """Gets the custentity_ufh_volume_per_annum of this Customer.  # noqa: E501


        :return: The custentity_ufh_volume_per_annum of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_ufh_volume_per_annum

    @custentity_ufh_volume_per_annum.setter
    def custentity_ufh_volume_per_annum(self, custentity_ufh_volume_per_annum):
        """Sets the custentity_ufh_volume_per_annum of this Customer.


        :param custentity_ufh_volume_per_annum: The custentity_ufh_volume_per_annum of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_ufh_volume_per_annum = custentity_ufh_volume_per_annum

    @property
    def custentity_sub_category(self):
        """Gets the custentity_sub_category of this Customer.  # noqa: E501


        :return: The custentity_sub_category of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_sub_category

    @custentity_sub_category.setter
    def custentity_sub_category(self, custentity_sub_category):
        """Sets the custentity_sub_category of this Customer.


        :param custentity_sub_category: The custentity_sub_category of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_sub_category = custentity_sub_category

    @property
    def custentity_show_ticket(self):
        """Gets the custentity_show_ticket of this Customer.  # noqa: E501


        :return: The custentity_show_ticket of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_show_ticket

    @custentity_show_ticket.setter
    def custentity_show_ticket(self, custentity_show_ticket):
        """Sets the custentity_show_ticket of this Customer.


        :param custentity_show_ticket: The custentity_show_ticket of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_show_ticket = custentity_show_ticket

    @property
    def assigned_web_site(self):
        """Gets the assigned_web_site of this Customer.  # noqa: E501


        :return: The assigned_web_site of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._assigned_web_site

    @assigned_web_site.setter
    def assigned_web_site(self, assigned_web_site):
        """Sets the assigned_web_site of this Customer.


        :param assigned_web_site: The assigned_web_site of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._assigned_web_site = assigned_web_site

    @property
    def custentity_course_attended(self):
        """Gets the custentity_course_attended of this Customer.  # noqa: E501


        :return: The custentity_course_attended of this Customer.  # noqa: E501
        :rtype: OneOfcustomerCustentityCourseAttended
        """
        return self._custentity_course_attended

    @custentity_course_attended.setter
    def custentity_course_attended(self, custentity_course_attended):
        """Sets the custentity_course_attended of this Customer.


        :param custentity_course_attended: The custentity_course_attended of this Customer.  # noqa: E501
        :type: OneOfcustomerCustentityCourseAttended
        """

        self._custentity_course_attended = custentity_course_attended

    @property
    def custentity_mcs_technology(self):
        """Gets the custentity_mcs_technology of this Customer.  # noqa: E501


        :return: The custentity_mcs_technology of this Customer.  # noqa: E501
        :rtype: NsResourceCollection
        """
        return self._custentity_mcs_technology

    @custentity_mcs_technology.setter
    def custentity_mcs_technology(self, custentity_mcs_technology):
        """Sets the custentity_mcs_technology of this Customer.


        :param custentity_mcs_technology: The custentity_mcs_technology of this Customer.  # noqa: E501
        :type: NsResourceCollection
        """

        self._custentity_mcs_technology = custentity_mcs_technology

    @property
    def campaign_category(self):
        """Gets the campaign_category of this Customer.  # noqa: E501


        :return: The campaign_category of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._campaign_category

    @campaign_category.setter
    def campaign_category(self, campaign_category):
        """Sets the campaign_category of this Customer.


        :param campaign_category: The campaign_category of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._campaign_category = campaign_category

    @property
    def custentity12(self):
        """Gets the custentity12 of this Customer.  # noqa: E501


        :return: The custentity12 of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity12

    @custentity12.setter
    def custentity12(self, custentity12):
        """Sets the custentity12 of this Customer.


        :param custentity12: The custentity12 of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity12 = custentity12

    @property
    def lead_source(self):
        """Gets the lead_source of this Customer.  # noqa: E501


        :return: The lead_source of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._lead_source

    @lead_source.setter
    def lead_source(self, lead_source):
        """Sets the lead_source of this Customer.


        :param lead_source: The lead_source of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._lead_source = lead_source

    @property
    def custentity10(self):
        """Gets the custentity10 of this Customer.  # noqa: E501


        :return: The custentity10 of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity10

    @custentity10.setter
    def custentity10(self, custentity10):
        """Sets the custentity10 of this Customer.


        :param custentity10: The custentity10 of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity10 = custentity10

    @property
    def custentity_travel_distance(self):
        """Gets the custentity_travel_distance of this Customer.  # noqa: E501


        :return: The custentity_travel_distance of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_travel_distance

    @custentity_travel_distance.setter
    def custentity_travel_distance(self, custentity_travel_distance):
        """Sets the custentity_travel_distance of this Customer.


        :param custentity_travel_distance: The custentity_travel_distance of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_travel_distance = custentity_travel_distance

    @property
    def custentity_gshp_volume_per_annum(self):
        """Gets the custentity_gshp_volume_per_annum of this Customer.  # noqa: E501


        :return: The custentity_gshp_volume_per_annum of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_gshp_volume_per_annum

    @custentity_gshp_volume_per_annum.setter
    def custentity_gshp_volume_per_annum(self, custentity_gshp_volume_per_annum):
        """Sets the custentity_gshp_volume_per_annum of this Customer.


        :param custentity_gshp_volume_per_annum: The custentity_gshp_volume_per_annum of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_gshp_volume_per_annum = custentity_gshp_volume_per_annum

    @property
    def custentity_cust_ufh_competitor(self):
        """Gets the custentity_cust_ufh_competitor of this Customer.  # noqa: E501


        :return: The custentity_cust_ufh_competitor of this Customer.  # noqa: E501
        :rtype: NsResourceCollection
        """
        return self._custentity_cust_ufh_competitor

    @custentity_cust_ufh_competitor.setter
    def custentity_cust_ufh_competitor(self, custentity_cust_ufh_competitor):
        """Sets the custentity_cust_ufh_competitor of this Customer.


        :param custentity_cust_ufh_competitor: The custentity_cust_ufh_competitor of this Customer.  # noqa: E501
        :type: NsResourceCollection
        """

        self._custentity_cust_ufh_competitor = custentity_cust_ufh_competitor

    @property
    def custentityent_fo_rep(self):
        """Gets the custentityent_fo_rep of this Customer.  # noqa: E501


        :return: The custentityent_fo_rep of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentityent_fo_rep

    @custentityent_fo_rep.setter
    def custentityent_fo_rep(self, custentityent_fo_rep):
        """Sets the custentityent_fo_rep of this Customer.


        :param custentityent_fo_rep: The custentityent_fo_rep of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentityent_fo_rep = custentityent_fo_rep

    @property
    def item_pricing(self):
        """Gets the item_pricing of this Customer.  # noqa: E501


        :return: The item_pricing of this Customer.  # noqa: E501
        :rtype: CustomerItemPricingCollection
        """
        return self._item_pricing

    @item_pricing.setter
    def item_pricing(self, item_pricing):
        """Sets the item_pricing of this Customer.


        :param item_pricing: The item_pricing of this Customer.  # noqa: E501
        :type: CustomerItemPricingCollection
        """

        self._item_pricing = item_pricing

    @property
    def custentity_lead_qualifier(self):
        """Gets the custentity_lead_qualifier of this Customer.  # noqa: E501


        :return: The custentity_lead_qualifier of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_lead_qualifier

    @custentity_lead_qualifier.setter
    def custentity_lead_qualifier(self, custentity_lead_qualifier):
        """Sets the custentity_lead_qualifier of this Customer.


        :param custentity_lead_qualifier: The custentity_lead_qualifier of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_lead_qualifier = custentity_lead_qualifier

    @property
    def custentity_cust_com_acc_man(self):
        """Gets the custentity_cust_com_acc_man of this Customer.  # noqa: E501


        :return: The custentity_cust_com_acc_man of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_cust_com_acc_man

    @custentity_cust_com_acc_man.setter
    def custentity_cust_com_acc_man(self, custentity_cust_com_acc_man):
        """Sets the custentity_cust_com_acc_man of this Customer.


        :param custentity_cust_com_acc_man: The custentity_cust_com_acc_man of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_cust_com_acc_man = custentity_cust_com_acc_man

    @property
    def buying_time_frame(self):
        """Gets the buying_time_frame of this Customer.  # noqa: E501


        :return: The buying_time_frame of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._buying_time_frame

    @buying_time_frame.setter
    def buying_time_frame(self, buying_time_frame):
        """Sets the buying_time_frame of this Customer.


        :param buying_time_frame: The buying_time_frame of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._buying_time_frame = buying_time_frame

    @property
    def custentity_erpff_p2p_party_endp_scheme(self):
        """Gets the custentity_erpff_p2p_party_endp_scheme of this Customer.  # noqa: E501


        :return: The custentity_erpff_p2p_party_endp_scheme of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_erpff_p2p_party_endp_scheme

    @custentity_erpff_p2p_party_endp_scheme.setter
    def custentity_erpff_p2p_party_endp_scheme(self, custentity_erpff_p2p_party_endp_scheme):
        """Sets the custentity_erpff_p2p_party_endp_scheme of this Customer.


        :param custentity_erpff_p2p_party_endp_scheme: The custentity_erpff_p2p_party_endp_scheme of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_erpff_p2p_party_endp_scheme = custentity_erpff_p2p_party_endp_scheme

    @property
    def custentity_unvent_hot_water_g3(self):
        """Gets the custentity_unvent_hot_water_g3 of this Customer.  # noqa: E501


        :return: The custentity_unvent_hot_water_g3 of this Customer.  # noqa: E501
        :rtype: OneOfcustomerCustentityUnventHotWaterG3
        """
        return self._custentity_unvent_hot_water_g3

    @custentity_unvent_hot_water_g3.setter
    def custentity_unvent_hot_water_g3(self, custentity_unvent_hot_water_g3):
        """Sets the custentity_unvent_hot_water_g3 of this Customer.


        :param custentity_unvent_hot_water_g3: The custentity_unvent_hot_water_g3 of this Customer.  # noqa: E501
        :type: OneOfcustomerCustentityUnventHotWaterG3
        """

        self._custentity_unvent_hot_water_g3 = custentity_unvent_hot_water_g3

    @property
    def custentity_3805_dunning_manager(self):
        """Gets the custentity_3805_dunning_manager of this Customer.  # noqa: E501


        :return: The custentity_3805_dunning_manager of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_3805_dunning_manager

    @custentity_3805_dunning_manager.setter
    def custentity_3805_dunning_manager(self, custentity_3805_dunning_manager):
        """Sets the custentity_3805_dunning_manager of this Customer.


        :param custentity_3805_dunning_manager: The custentity_3805_dunning_manager of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_3805_dunning_manager = custentity_3805_dunning_manager

    @property
    def campaign_event(self):
        """Gets the campaign_event of this Customer.  # noqa: E501


        :return: The campaign_event of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._campaign_event

    @campaign_event.setter
    def campaign_event(self, campaign_event):
        """Sets the campaign_event of this Customer.


        :param campaign_event: The campaign_event of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._campaign_event = campaign_event

    @property
    def custentity_sfa_assigned(self):
        """Gets the custentity_sfa_assigned of this Customer.  # noqa: E501


        :return: The custentity_sfa_assigned of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_sfa_assigned

    @custentity_sfa_assigned.setter
    def custentity_sfa_assigned(self, custentity_sfa_assigned):
        """Sets the custentity_sfa_assigned of this Customer.


        :param custentity_sfa_assigned: The custentity_sfa_assigned of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_sfa_assigned = custentity_sfa_assigned

    @property
    def custentity_pv_course_atteneded(self):
        """Gets the custentity_pv_course_atteneded of this Customer.  # noqa: E501


        :return: The custentity_pv_course_atteneded of this Customer.  # noqa: E501
        :rtype: OneOfcustomerCustentityPvCourseAtteneded
        """
        return self._custentity_pv_course_atteneded

    @custentity_pv_course_atteneded.setter
    def custentity_pv_course_atteneded(self, custentity_pv_course_atteneded):
        """Sets the custentity_pv_course_atteneded of this Customer.


        :param custentity_pv_course_atteneded: The custentity_pv_course_atteneded of this Customer.  # noqa: E501
        :type: OneOfcustomerCustentityPvCourseAtteneded
        """

        self._custentity_pv_course_atteneded = custentity_pv_course_atteneded

    @property
    def custentity_number_emp(self):
        """Gets the custentity_number_emp of this Customer.  # noqa: E501


        :return: The custentity_number_emp of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_number_emp

    @custentity_number_emp.setter
    def custentity_number_emp(self, custentity_number_emp):
        """Sets the custentity_number_emp of this Customer.


        :param custentity_number_emp: The custentity_number_emp of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_number_emp = custentity_number_emp

    @property
    def custentity_9572_custref_file_format(self):
        """Gets the custentity_9572_custref_file_format of this Customer.  # noqa: E501


        :return: The custentity_9572_custref_file_format of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_9572_custref_file_format

    @custentity_9572_custref_file_format.setter
    def custentity_9572_custref_file_format(self, custentity_9572_custref_file_format):
        """Sets the custentity_9572_custref_file_format of this Customer.


        :param custentity_9572_custref_file_format: The custentity_9572_custref_file_format of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_9572_custref_file_format = custentity_9572_custref_file_format

    @property
    def contact_list(self):
        """Gets the contact_list of this Customer.  # noqa: E501


        :return: The contact_list of this Customer.  # noqa: E501
        :rtype: ContactCollection
        """
        return self._contact_list

    @contact_list.setter
    def contact_list(self, contact_list):
        """Sets the contact_list of this Customer.


        :param contact_list: The contact_list of this Customer.  # noqa: E501
        :type: ContactCollection
        """

        self._contact_list = contact_list

    @property
    def custentity_enquiry_floor_insulation(self):
        """Gets the custentity_enquiry_floor_insulation of this Customer.  # noqa: E501


        :return: The custentity_enquiry_floor_insulation of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_enquiry_floor_insulation

    @custentity_enquiry_floor_insulation.setter
    def custentity_enquiry_floor_insulation(self, custentity_enquiry_floor_insulation):
        """Sets the custentity_enquiry_floor_insulation of this Customer.


        :param custentity_enquiry_floor_insulation: The custentity_enquiry_floor_insulation of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_enquiry_floor_insulation = custentity_enquiry_floor_insulation

    @property
    def custentity_mcs_scheme_provider(self):
        """Gets the custentity_mcs_scheme_provider of this Customer.  # noqa: E501


        :return: The custentity_mcs_scheme_provider of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_mcs_scheme_provider

    @custentity_mcs_scheme_provider.setter
    def custentity_mcs_scheme_provider(self, custentity_mcs_scheme_provider):
        """Sets the custentity_mcs_scheme_provider of this Customer.


        :param custentity_mcs_scheme_provider: The custentity_mcs_scheme_provider of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_mcs_scheme_provider = custentity_mcs_scheme_provider

    @property
    def currency(self):
        """Gets the currency of this Customer.  # noqa: E501


        :return: The currency of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this Customer.


        :param currency: The currency of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._currency = currency

    @property
    def parent(self):
        """Gets the parent of this Customer.  # noqa: E501


        :return: The parent of this Customer.  # noqa: E501
        :rtype: Customer
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this Customer.


        :param parent: The parent of this Customer.  # noqa: E501
        :type: Customer
        """

        self._parent = parent

    @property
    def custentity_cust_project_engineer(self):
        """Gets the custentity_cust_project_engineer of this Customer.  # noqa: E501


        :return: The custentity_cust_project_engineer of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_cust_project_engineer

    @custentity_cust_project_engineer.setter
    def custentity_cust_project_engineer(self, custentity_cust_project_engineer):
        """Sets the custentity_cust_project_engineer of this Customer.


        :param custentity_cust_project_engineer: The custentity_cust_project_engineer of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_cust_project_engineer = custentity_cust_project_engineer

    @property
    def custentity_erpff_p2p_basw_tax_scheme(self):
        """Gets the custentity_erpff_p2p_basw_tax_scheme of this Customer.  # noqa: E501


        :return: The custentity_erpff_p2p_basw_tax_scheme of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_erpff_p2p_basw_tax_scheme

    @custentity_erpff_p2p_basw_tax_scheme.setter
    def custentity_erpff_p2p_basw_tax_scheme(self, custentity_erpff_p2p_basw_tax_scheme):
        """Sets the custentity_erpff_p2p_basw_tax_scheme of this Customer.


        :param custentity_erpff_p2p_basw_tax_scheme: The custentity_erpff_p2p_basw_tax_scheme of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_erpff_p2p_basw_tax_scheme = custentity_erpff_p2p_basw_tax_scheme

    @property
    def price_level(self):
        """Gets the price_level of this Customer.  # noqa: E501


        :return: The price_level of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._price_level

    @price_level.setter
    def price_level(self, price_level):
        """Sets the price_level of this Customer.


        :param price_level: The price_level of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._price_level = price_level

    @property
    def image(self):
        """Gets the image of this Customer.  # noqa: E501


        :return: The image of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this Customer.


        :param image: The image of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._image = image

    @property
    def custentity_scope_of_business(self):
        """Gets the custentity_scope_of_business of this Customer.  # noqa: E501


        :return: The custentity_scope_of_business of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_scope_of_business

    @custentity_scope_of_business.setter
    def custentity_scope_of_business(self, custentity_scope_of_business):
        """Sets the custentity_scope_of_business of this Customer.


        :param custentity_scope_of_business: The custentity_scope_of_business of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_scope_of_business = custentity_scope_of_business

    @property
    def custentity_9572_ddcust_entitybank_sub(self):
        """Gets the custentity_9572_ddcust_entitybank_sub of this Customer.  # noqa: E501


        :return: The custentity_9572_ddcust_entitybank_sub of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_9572_ddcust_entitybank_sub

    @custentity_9572_ddcust_entitybank_sub.setter
    def custentity_9572_ddcust_entitybank_sub(self, custentity_9572_ddcust_entitybank_sub):
        """Sets the custentity_9572_ddcust_entitybank_sub of this Customer.


        :param custentity_9572_ddcust_entitybank_sub: The custentity_9572_ddcust_entitybank_sub of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_9572_ddcust_entitybank_sub = custentity_9572_ddcust_entitybank_sub

    @property
    def custentity_website_existing(self):
        """Gets the custentity_website_existing of this Customer.  # noqa: E501


        :return: The custentity_website_existing of this Customer.  # noqa: E501
        :rtype: NsResource
        """
        return self._custentity_website_existing

    @custentity_website_existing.setter
    def custentity_website_existing(self, custentity_website_existing):
        """Sets the custentity_website_existing of this Customer.


        :param custentity_website_existing: The custentity_website_existing of this Customer.  # noqa: E501
        :type: NsResource
        """

        self._custentity_website_existing = custentity_website_existing

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Customer, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Customer):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
