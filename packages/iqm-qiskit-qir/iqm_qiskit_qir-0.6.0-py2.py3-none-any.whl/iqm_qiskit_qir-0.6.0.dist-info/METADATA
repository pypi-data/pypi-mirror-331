Metadata-Version: 2.2
Name: iqm-qiskit-qir
Version: 0.6.0
Summary: Qiskit to QIR translator
Home-page: https://github.com/microsoft/qiskit-qir
Author: Microsoft
Author-email: que-contacts@microsoft.com
Project-URL: Bug Tracker, https://github.com/microsoft/qiskit-qir
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Operating System :: Microsoft
Classifier: Operating System :: MacOS
Classifier: Operating System :: Unix
Requires-Python: <3.13,>=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
License-File: NOTICE.txt
Requires-Dist: qiskit<2.0,>=1.0.0
Requires-Dist: iqm-pyqir==0.11.0
Provides-Extra: test
Requires-Dist: pytest; extra == "test"

# qiskit-qir

Qiskit to QIR translator.

## Example

```python
from qiskit import QuantumCircuit
from qiskit_qir import to_qir_module

circuit = QuantumCircuit(3, 3, name="my-circuit")
circuit.h(0)
circuit.cx(0, 1)
circuit.cx(1, 2)
circuit.measure([0,1,2], [0, 1, 2])

module, entry_points = to_qir_module(circuit)
bitcode = module.bitcode
ir = str(module)
```

## Installation

Install `qiskit-qir` with `pip`:

```bash
pip install qiskit-qir
```
> Note: this will automatically install PyQIR if needed.

## Development

### Install from source

To install the package from source, clone the repo onto your machine, browse to the root directory and run

```bash
pip install -e .
```

### Tests

First, install the development dependencies using

```bash
pip install -r requirements_dev.txt
```

To run the tests in your local environment, run

```bash
make test
```

To run the tests in virtual environments on supported Python versions, run

```bash
make test-all
```

### Docs

To build the docs using Sphinx, run

```bash
make docs
```
