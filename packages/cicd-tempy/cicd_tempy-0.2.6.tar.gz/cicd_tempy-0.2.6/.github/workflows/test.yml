name: test
description: Run unit tests.

on:
  workflow_call:

env:
  COLUMNS: 150
  UV_FROZEN: true
  FORCE_COLOR: 1

jobs:
  test:
    name: test ${{ matrix.os }} / ${{ matrix.python-version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-latest, windows-latest]
        python-version: ['3.11', '3.12']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: astral-sh/setup-uv@v5
      with:
        python-version: ${{ matrix.python-version }}
    - run: uv sync --group test
    - run: mkdir coverage
    - run: uv run coverage run -m pytest --durations=10
      env:
        COVERAGE_FILE: coverage/.coverage.${{ runner.os }}-py${{ matrix.python-version }}-with-deps
        CONTEXT: ${{ runner.os }}-py${{ matrix.python-version }}-with-deps
    - uses: actions/upload-artifact@v4
      with:
        name: coverage-${{ matrix.os }}-${{ matrix.python-version }}
        path: coverage
        include-hidden-files: true

  coverage-combine:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          pattern: coverage-*
          path: coverage
      - run: pip install coverage[toml]
      - run: ls -la coverage
      - run: coverage combine coverage
      - run: coverage report
      - run: coverage html --show-contexts --title "pydantic coverage for ${{ github.sha }}"
      - name: Store coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data
          path: .coverage
          include-hidden-files: true
      - name: Store coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov

  coverage-pr-comment:
    needs: coverage-combine
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      pull-requests: write
      contents: write

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: actions/download-artifact@v4
        with:
          name: coverage-data
      - id: coverage-comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v4
        if: steps.coverage-comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt
