[
  {
    "framework": "Pytest",
    "testruns": [
      {
        "name": "test_junit[junit.xml--True]",
        "classname": "tests.test_parsers.TestParsers",
        "duration": 0.001,
        "outcome": "failure",
        "testsuite": "pytest",
        "failure_message": "self = <test_parsers.TestParsers object at 0x102182d10>, filename = 'junit.xml', expected = '', check = True\n\n    @pytest.mark.parametrize(\n        \"filename,expected,check\",\n        [(\"junit.xml\", \"\", True), (\"jest-junit.xml\", \"\", False)],\n    )\n    def test_junit(self, filename, expected, check):\n        with open(filename) as f:\n            junit_string = f.read()\n            res = parse_junit_xml(junit_string)\n            print(res)\n            if check:\n>               assert res == expected\nE               AssertionError: assert [{'duration': '0.010', 'name': 'tests.test_parsers.TestParsers.test_junit[junit.xml-]', 'outcome': 'failure'}, {'duration': '0.063', 'name': 'tests.test_parsers.TestParsers.test_junit[jest-junit.xml-]', 'outcome': 'pass'}] == ''\n\ntests/test_parsers.py:16: AssertionError",
        "filename": null,
        "build_url": null,
        "computed_name": "tests.test_parsers.TestParsers::test_junit[junit.xml--True]"
      },
      {
        "name": "test_junit[jest-junit.xml--False]",
        "classname": "tests.test_parsers.TestParsers",
        "duration": 0.064,
        "outcome": "pass",
        "testsuite": "pytest",
        "failure_message": null,
        "filename": null,
        "build_url": null,
        "computed_name": "tests.test_parsers.TestParsers::test_junit[jest-junit.xml--False]"
      }
    ]
  }
]
