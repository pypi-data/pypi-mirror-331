import{e as l}from"./index.Bp1rvAr8.js";import{g as A}from"./index.qC1OzwzB.js";const P=async(e="",a=null,o=!1)=>{let n=null;const t=await fetch(`${l}/api/models${o?"/base":""}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(n=s,console.log(s),null));if(n)throw n;let i=(t==null?void 0:t.data)??[];if(a&&!o){let s=[];if(a){const r=a.OPENAI_API_BASE_URLS,u=a.OPENAI_API_KEYS,w=a.OPENAI_API_CONFIGS,p=[];for(const h in r){const d=r[h];if(h.toString()in w){const y=w[h.toString()]??{},g=(y==null?void 0:y.enable)??!0,m=(y==null?void 0:y.model_ids)??[];if(g)if(m.length>0){const f={object:"list",data:m.map($=>({id:$,name:$,owned_by:"openai",openai:{id:$},urlIdx:h}))};p.push((async()=>f)())}else p.push((async()=>await A(d,u[h]).then(f=>f).catch(f=>({object:"list",data:[],urlIdx:h})))());else p.push((async()=>({object:"list",data:[],urlIdx:h}))())}}const j=await Promise.all(p);for(const h in j){const d=j[h],y=w[h.toString()]??{};let g=Array.isArray(d)?d:(d==null?void 0:d.data)??[];g=g.map(f=>({...f,openai:{id:f.id},urlIdx:h}));const m=y.prefix_id;if(m)for(const f of g)f.id=`${m}.${f.id}`;s=s.concat(g)}}i=i.concat(s.map(r=>({...r,name:(r==null?void 0:r.name)??(r==null?void 0:r.id),direct:!0})));const c={};for(const r of i)c[r.id]=r;i=Object.values(c)}return i},O=async(e,a)=>{let o=null;const n=await fetch(`${l}/api/chat/completed`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify(a)}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?o=t.detail:o=t,null));if(o)throw o;return n},C=async(e,a,o)=>{let n=null;const t=await fetch(`${l}/api/chat/actions/${a}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify(o)}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>(console.log(i),"detail"in i?n=i.detail:n=i,null));if(n)throw n;return t},v=async(e,a)=>{let o=null;const n=await fetch(`${l}/api/tasks/stop/${a}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?o=t.detail:o=t,null));if(o)throw o;return n},E=async(e="")=>{let a=null;const o=await fetch(`${l}/api/v1/tasks/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),a=n,null));if(a)throw a;return o},b=async(e,a)=>{let o=null;const n=await fetch(`${l}/api/v1/tasks/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify(a)}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?o=t.detail:o=t,null));if(o)throw o;return n},I=async(e="",a,o,n)=>{var s,c;let t=null;const i=await fetch(`${l}/api/v1/tasks/tags/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:a,messages:o,...n&&{chat_id:n}})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),"detail"in r&&(t=r.detail),null));if(t)throw t;try{const u=(((c=(s=i==null?void 0:i.choices[0])==null?void 0:s.message)==null?void 0:c.content)??"").replace(/['‘’`]/g,'"'),w=u.indexOf("{"),p=u.lastIndexOf("}");if(w!==-1&&p!==-1){const j=u.substring(w,p+1),h=JSON.parse(j);return h&&h.tags?Array.isArray(h.tags)?h.tags:[]:[]}return[]}catch(r){return console.error("Failed to parse response: ",r),[]}},B=async(e="",a,o,n)=>{var c,r;let t=null;const i=await fetch(`${l}/api/v1/tasks/emoji/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:a,prompt:o,...n&&{chat_id:n}})}).then(async u=>{if(!u.ok)throw await u.json();return u.json()}).catch(u=>(console.log(u),"detail"in u&&(t=u.detail),null));if(t)throw t;const s=((r=(c=i==null?void 0:i.choices[0])==null?void 0:c.message)==null?void 0:r.content.replace(/["']/g,""))??null;return s&&new RegExp("\\p{Extended_Pictographic}","u").test(s)?s.match(new RegExp("\\p{Extended_Pictographic}","gu"))[0]:null},k=async(e="",a,o,n,t="search query")=>{var u,w;const i=new AbortController;let s=null;const c=await fetch(`${l}/api/v1/tasks/auto/completions`,{signal:i.signal,method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:a,prompt:o,...n&&{messages:n},type:t,stream:!1})}).then(async p=>{if(!p.ok)throw await p.json();return p.json()}).catch(p=>(console.log(p),"detail"in p&&(s=p.detail),null));if(s)throw s;const r=((w=(u=c==null?void 0:c.choices[0])==null?void 0:u.message)==null?void 0:w.content)??"";try{const p=r.indexOf("{"),j=r.lastIndexOf("}");if(p!==-1&&j!==-1){const h=r.substring(p,j+1),d=JSON.parse(h);return d&&d.text?d.text:""}return r}catch(p){return console.error("Failed to parse response: ",p),r}},x=async(e="",a,o,n)=>{const t=new AbortController;let i=null;const s=await fetch(`${l}/api/v1/tasks/moa/completions`,{signal:t.signal,method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:a,prompt:o,responses:n,stream:!0})}).catch(c=>(console.log(c),i=c,null));if(i)throw i;return[s,t]},z=async(e="")=>{let a=null;const o=await fetch(`${l}/api/v1/pipelines/list`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),a=t,null));if(a)throw a;return(o==null?void 0:o.data)??[]},N=async(e,a,o)=>{let n=null;const t=new FormData;t.append("file",a),t.append("urlIdx",o);const i=await fetch(`${l}/api/v1/pipelines/upload`,{method:"POST",headers:{...e&&{authorization:`Bearer ${e}`}},body:t}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),"detail"in s?n=s.detail:n=s,null));if(n)throw n;return i},_=async(e,a,o)=>{let n=null;const t=await fetch(`${l}/api/v1/pipelines/add`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({url:a,urlIdx:o})}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>(console.log(i),"detail"in i?n=i.detail:n=i,null));if(n)throw n;return t},J=async(e,a,o)=>{let n=null;const t=await fetch(`${l}/api/v1/pipelines/delete`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({id:a,urlIdx:o})}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>(console.log(i),"detail"in i?n=i.detail:n=i,null));if(n)throw n;return t},G=async(e,a)=>{let o=null;const n=new URLSearchParams;a!==void 0&&n.append("urlIdx",a);const t=await fetch(`${l}/api/v1/pipelines/?${n.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),o=s,null));if(o)throw o;return(t==null?void 0:t.data)??[]},U=async(e,a,o)=>{let n=null;const t=new URLSearchParams;o!==void 0&&t.append("urlIdx",o);const i=await fetch(`${l}/api/v1/pipelines/${a}/valves?${t.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),n=s,null));if(n)throw n;return i},L=async(e,a,o)=>{let n=null;const t=new URLSearchParams;o!==void 0&&t.append("urlIdx",o);const i=await fetch(`${l}/api/v1/pipelines/${a}/valves/spec?${t.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),n=s,null));if(n)throw n;return i},R=async(e="",a,o,n)=>{let t=null;const i=new URLSearchParams;n!==void 0&&i.append("urlIdx",n);const s=await fetch(`${l}/api/v1/pipelines/${a}/valves/update?${i.toString()}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify(o)}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).catch(c=>(console.log(c),"detail"in c?t=c.detail:t=c,null));if(t)throw t;return s},F=async()=>{let e=null;const a=await fetch(`${l}/api/config`,{method:"GET",credentials:"include",headers:{"Content-Type":"application/json"}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),e=o,null));if(e)throw e;return a},M=async()=>{let e=null;const a=await fetch(`${l}/api/changelog`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),e=o,null));if(e)throw e;return a},D=async e=>{let a=null;const o=await fetch(`${l}/api/version/updates`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),a=n,null));if(a)throw a;return o},V=async e=>{let a=null;const o=await fetch(`${l}/api/webhook`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),a=n,null));if(a)throw a;return o.url},q=async(e,a)=>{let o=null;const n=await fetch(`${l}/api/webhook`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({url:a})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),o=t,null));if(o)throw o;return n.url};export{F as a,V as b,D as c,z as d,R as e,L as f,P as g,U as h,G as i,_ as j,J as k,N as l,E as m,b as n,I as o,M as p,k as q,B as r,C as s,v as t,q as u,x as v,O as w};
//# sourceMappingURL=index.DYE0sQB8.js.map
