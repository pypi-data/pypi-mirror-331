[tool.poetry]
name = "pymeepo"
version = "0.1.0"
description = "A lightweight Python SDK for building AI agents, enabling collaborative and supervisor-worker models for complex workflows"
authors = ["MeepoLabs <info@meepolabs.com>"]
license = "GPL-3.0-only"
readme = "README.md"
repository = "https://github.com/meepolabs/pymeepo"
documentation = "https://pymeepo.readthedocs.io"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{include = "pymeepo"}]

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.5.0"
httpx = "^0.25.0"
openai = "^1.3.0"
anthropic = "^0.8.0"
litellm = "^1.0.0"
tenacity = "^8.2.0"
typing-extensions = "^4.8.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.0"
ruff = "^0.1.0"
mypy = "^1.6.0"
pre-commit = "^3.5.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.0"
sphinx-rtd-theme = "^1.3.0"
sphinx-autodoc-typehints = "^1.24.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py310"
line-length = 100
select = ["E", "F", "B", "I", "N", "UP", "ANN", "S", "A", "C4", "T20", "PT", "RET", "SIM"]
ignore = ["ANN101", "ANN102", "ANN401"]

[tool.ruff.per-file-ignores]
"tests/**/*.py" = ["S101"]  # Allow assertions in test files

[tool.ruff.isort]
known-first-party = ["pymeepo"]

[tool.ruff.flake8-annotations]
allow-star-arg-any = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
asyncio_mode = "auto"
