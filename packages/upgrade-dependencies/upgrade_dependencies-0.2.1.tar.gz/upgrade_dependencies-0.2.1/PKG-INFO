Metadata-Version: 2.4
Name: upgrade-dependencies
Version: 0.2.1
Summary: Creates PRs for dependency updates in python projects
Author-email: Robbie van Leeuwen <robbie.vanleeuwen@gmail.com>
License: MIT License
        
        Copyright (c) 2024 Robbie van Leeuwen
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Requires-Python: >=3.13
Requires-Dist: httpx~=0.27.2
Requires-Dist: packaging~=24.2
Requires-Dist: ruamel-yaml~=0.18.6
Requires-Dist: tomlkit~=0.13.2
Requires-Dist: typer~=0.13.1
Description-Content-Type: text/markdown

# upgrade-dependencies

CLI tool to check for dependency updates in your python project. Automatically creates
GitHub pull requests for dependencies you wish to update!

## Usage

If you have `uv` installed, you can install `upgrade-dependencies` with

```
uv tool install upgrade-dependencies
```

You can then navigate to your project directory and execute:

```
uvx upgrade-dependencies [OPTIONS] COMMAND [ARGS]...
```

See the [CLI documentation](docs/usage.md) for information about how each command works.

### Requirements

All python requirements are installed by default. To successfully use the `update`
command the following executables must be installed into your shell:

- `git`
- `gh`, i.e. GitHub CLI - ensure you have already run `gh auth login` and added
  appropriate permissions

### GitHub API Rate Limit

The GitHub API is used to fetch data for GitHub actions and `pre-commit` repos.
Unauthenticated users have a rate limit of 60 requests per hour, whereas authenticated
users have a rate limit of 5,000 requests per hour. You can use a GitHub personal access
token to utilise this higher rate limit by setting the `GH_PAT` environment variable:

```
export GH_PAT=github_pat_xxx
```

## Limitations

- Currently only supports a single specifier, e.g. `numpy~=2.0.2`, not `numpy>=2,<2.1`
- The project file structure is fixed and assumed, see
  [Project File Structure](#project-file-structure).
- GH actions must only use major version, e.g. `actions/checkout@v4` not
  `actions/checkout@v4.2.2`
- It is recommended to have a clean git before running `update` (a warning will be
  printed to the terminal if this is not the case).

## Project File Structure

The following project file structure is assumed:

```
project
├── .github
│   └── workflows
│       └── *.yml
├── .pre-commit-config.yml
└── pyproject.toml
```
