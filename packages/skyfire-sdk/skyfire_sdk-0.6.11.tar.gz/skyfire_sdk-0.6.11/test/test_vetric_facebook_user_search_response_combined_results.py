# coding: utf-8

"""
    Skyfire SDK

    The Skyfire SDK is designed to allow agents to interact with the Skyfire platform to enable autonomous payments.

    The version of the OpenAPI document: 1.0.0
    Contact: support@skyfire.xyz
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from skyfire_sdk.models.vetric_facebook_user_search_response_combined_results import VetricFacebookUserSearchResponseCombinedResults

class TestVetricFacebookUserSearchResponseCombinedResults(unittest.TestCase):
    """VetricFacebookUserSearchResponseCombinedResults unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VetricFacebookUserSearchResponseCombinedResults:
        """Test VetricFacebookUserSearchResponseCombinedResults
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VetricFacebookUserSearchResponseCombinedResults`
        """
        model = VetricFacebookUserSearchResponseCombinedResults()
        if include_optional:
            return VetricFacebookUserSearchResponseCombinedResults(
                page_info = skyfire_sdk.models.vetric_facebook_user_search_response_combined_results_page_info.VetricFacebookUserSearchResponse_combined_results_page_info(
                    start_cursor = '', 
                    end_cursor = '', 
                    has_previous_page = True, 
                    has_next_page = True, ),
                has_hcm = True,
                degradation_level = '',
                has_iem_triggered = True,
                is_cache_hit = True,
                edges = [
                    skyfire_sdk.models.vetric_facebook_user_search_response_combined_results_edges_inner.VetricFacebookUserSearchResponse_combined_results_edges_inner(
                        result_display_styles = [
                            ''
                            ], 
                        logging_unit_id = '', 
                        module_role = '', 
                        result_role = '', 
                        node = '', 
                        native_template_view = skyfire_sdk.models.vetric_facebook_user_search_response_combined_results_edges_inner_native_template_view.VetricFacebookUserSearchResponse_combined_results_edges_inner_native_template_view(
                            unique_id = '', 
                            logging_id = '', 
                            native_template_bundles = [
                                skyfire_sdk.models.vetric_facebook_user_search_response_combined_results_edges_inner_native_template_view_native_template_bundles_inner.VetricFacebookUserSearchResponse_combined_results_edges_inner_native_template_view_native_template_bundles_inner(
                                    nt_bundle_tree = '', 
                                    nt_bundle_attributes = [
                                        skyfire_sdk.models.vetric_facebook_user_search_response_combined_results_edges_inner_native_template_view_native_template_bundles_inner_nt_bundle_attributes_inner.VetricFacebookUserSearchResponse_combined_results_edges_inner_native_template_view_native_template_bundles_inner_nt_bundle_attributes_inner(
                                            name = '', 
                                            recent_search_entity_value = skyfire_sdk.models.vetric_facebook_user_search_response_combined_results_edges_inner_native_template_view_native_template_bundles_inner_nt_bundle_attributes_inner_recent_search_entity_value.VetricFacebookUserSearchResponse_combined_results_edges_inner_native_template_view_native_template_bundles_inner_nt_bundle_attributes_inner_recent_search_entity_value(
                                                id = '', 
                                                name = '', 
                                                profile_picture = skyfire_sdk.models.vetric_facebook_user_search_response_combined_results_edges_inner_native_template_view_native_template_bundles_inner_nt_bundle_attributes_inner_recent_search_entity_value_profile_picture.VetricFacebookUserSearchResponse_combined_results_edges_inner_native_template_view_native_template_bundles_inner_nt_bundle_attributes_inner_recent_search_entity_value_profile_picture(
                                                    uri = '', ), ), )
                                        ], )
                                ], ), )
                    ]
            )
        else:
            return VetricFacebookUserSearchResponseCombinedResults(
                page_info = skyfire_sdk.models.vetric_facebook_user_search_response_combined_results_page_info.VetricFacebookUserSearchResponse_combined_results_page_info(
                    start_cursor = '', 
                    end_cursor = '', 
                    has_previous_page = True, 
                    has_next_page = True, ),
                has_hcm = True,
                degradation_level = '',
                has_iem_triggered = True,
                is_cache_hit = True,
                edges = [
                    skyfire_sdk.models.vetric_facebook_user_search_response_combined_results_edges_inner.VetricFacebookUserSearchResponse_combined_results_edges_inner(
                        result_display_styles = [
                            ''
                            ], 
                        logging_unit_id = '', 
                        module_role = '', 
                        result_role = '', 
                        node = '', 
                        native_template_view = skyfire_sdk.models.vetric_facebook_user_search_response_combined_results_edges_inner_native_template_view.VetricFacebookUserSearchResponse_combined_results_edges_inner_native_template_view(
                            unique_id = '', 
                            logging_id = '', 
                            native_template_bundles = [
                                skyfire_sdk.models.vetric_facebook_user_search_response_combined_results_edges_inner_native_template_view_native_template_bundles_inner.VetricFacebookUserSearchResponse_combined_results_edges_inner_native_template_view_native_template_bundles_inner(
                                    nt_bundle_tree = '', 
                                    nt_bundle_attributes = [
                                        skyfire_sdk.models.vetric_facebook_user_search_response_combined_results_edges_inner_native_template_view_native_template_bundles_inner_nt_bundle_attributes_inner.VetricFacebookUserSearchResponse_combined_results_edges_inner_native_template_view_native_template_bundles_inner_nt_bundle_attributes_inner(
                                            name = '', 
                                            recent_search_entity_value = skyfire_sdk.models.vetric_facebook_user_search_response_combined_results_edges_inner_native_template_view_native_template_bundles_inner_nt_bundle_attributes_inner_recent_search_entity_value.VetricFacebookUserSearchResponse_combined_results_edges_inner_native_template_view_native_template_bundles_inner_nt_bundle_attributes_inner_recent_search_entity_value(
                                                id = '', 
                                                name = '', 
                                                profile_picture = skyfire_sdk.models.vetric_facebook_user_search_response_combined_results_edges_inner_native_template_view_native_template_bundles_inner_nt_bundle_attributes_inner_recent_search_entity_value_profile_picture.VetricFacebookUserSearchResponse_combined_results_edges_inner_native_template_view_native_template_bundles_inner_nt_bundle_attributes_inner_recent_search_entity_value_profile_picture(
                                                    uri = '', ), ), )
                                        ], )
                                ], ), )
                    ],
        )
        """

    def testVetricFacebookUserSearchResponseCombinedResults(self):
        """Test VetricFacebookUserSearchResponseCombinedResults"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
