# coding: utf-8

"""
    Skyfire SDK

    The Skyfire SDK is designed to allow agents to interact with the Skyfire platform to enable autonomous payments.

    The version of the OpenAPI document: 1.0.0
    Contact: support@skyfire.xyz
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from skyfire_sdk.models.vetric_marketplace_search_response_data_marketplace_search_feed_units_edges_inner_node import VetricMarketplaceSearchResponseDataMarketplaceSearchFeedUnitsEdgesInnerNode

class TestVetricMarketplaceSearchResponseDataMarketplaceSearchFeedUnitsEdgesInnerNode(unittest.TestCase):
    """VetricMarketplaceSearchResponseDataMarketplaceSearchFeedUnitsEdgesInnerNode unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VetricMarketplaceSearchResponseDataMarketplaceSearchFeedUnitsEdgesInnerNode:
        """Test VetricMarketplaceSearchResponseDataMarketplaceSearchFeedUnitsEdgesInnerNode
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VetricMarketplaceSearchResponseDataMarketplaceSearchFeedUnitsEdgesInnerNode`
        """
        model = VetricMarketplaceSearchResponseDataMarketplaceSearchFeedUnitsEdgesInnerNode()
        if include_optional:
            return VetricMarketplaceSearchResponseDataMarketplaceSearchFeedUnitsEdgesInnerNode(
                typename = '',
                id = '',
                story_key = '',
                story_type = '',
                is_marketplace_feed_story = '',
                tracking = '',
                is_marketplace_feed_general_listing_data = '',
                entity_id = '',
                reportable_id = '',
                photo = skyfire_sdk.models.vetric_marketplace_search_response_data_marketplace_search_feed_units_edges_inner_node_photo.VetricMarketplaceSearchResponse_data_marketplace_search_feed_units_edges_inner_node_photo(
                    __typename = '', 
                    accessibility_caption = '', 
                    background_color = '', 
                    smart_resized_image = skyfire_sdk.models.vetric_marketplace_search_response_data_marketplace_search_feed_units_edges_inner_node_photo_smart_resized_image.VetricMarketplaceSearchResponse_data_marketplace_search_feed_units_edges_inner_node_photo_smart_resized_image(
                        height = 56, 
                        width = 56, 
                        uri = '', ), 
                    default_image = skyfire_sdk.models.vetric_marketplace_search_response_data_marketplace_search_feed_units_edges_inner_node_photo_default_image.VetricMarketplaceSearchResponse_data_marketplace_search_feed_units_edges_inner_node_photo_default_image(
                        height = 56, 
                        width = 56, 
                        uri = '', ), 
                    id = '', ),
                data = skyfire_sdk.models.vetric_marketplace_search_response_data_marketplace_search_feed_units_edges_inner_node_data.VetricMarketplaceSearchResponse_data_marketplace_search_feed_units_edges_inner_node_data(
                    price = skyfire_sdk.models.vetric_marketplace_search_response_data_marketplace_search_feed_units_edges_inner_node_data_price.VetricMarketplaceSearchResponse_data_marketplace_search_feed_units_edges_inner_node_data_price(
                        currency = '', 
                        amount_with_offset = '', ), 
                    title = '', 
                    product_type = '', ),
                row_0 = skyfire_sdk.models.row_0.row_0(),
                row_1 = skyfire_sdk.models.vetric_marketplace_search_response_data_marketplace_search_feed_units_edges_inner_node_row_1.VetricMarketplaceSearchResponse_data_marketplace_search_feed_units_edges_inner_node_row_1(
                    __typename = '', 
                    __is_marketplace_feed_content_entity_snippet = '', 
                    snippet_type = '', 
                    current_price_amount = skyfire_sdk.models.vetric_marketplace_search_response_data_marketplace_search_feed_units_edges_inner_node_row_1_current_price_amount.VetricMarketplaceSearchResponse_data_marketplace_search_feed_units_edges_inner_node_row_1_current_price_amount(
                        currency = '', 
                        amount_with_offset = '', ), 
                    id = '', ),
                row_2 = skyfire_sdk.models.vetric_marketplace_search_response_data_marketplace_search_feed_units_edges_inner_node_row_2.VetricMarketplaceSearchResponse_data_marketplace_search_feed_units_edges_inner_node_row_2(
                    __typename = '', 
                    __is_marketplace_feed_content_entity_snippet = '', 
                    snippet_type = '', 
                    lines_before_truncation = 56, 
                    text = '', 
                    id = '', ),
                row_3 = skyfire_sdk.models.vetric_marketplace_search_response_data_marketplace_search_feed_units_edges_inner_node_row_3.VetricMarketplaceSearchResponse_data_marketplace_search_feed_units_edges_inner_node_row_3(
                    __typename = '', 
                    snippet_type = '', 
                    __is_marketplace_feed_content_entity_snippet = '', 
                    lines_before_truncation = 56, 
                    text = '', 
                    id = '', ),
                row_4 = skyfire_sdk.models.row_4.row_4(),
                row_5 = skyfire_sdk.models.row_5.row_5(),
                badge_bottom_left = skyfire_sdk.models.badge_bottom_left.badge_bottom_left()
            )
        else:
            return VetricMarketplaceSearchResponseDataMarketplaceSearchFeedUnitsEdgesInnerNode(
        )
        """

    def testVetricMarketplaceSearchResponseDataMarketplaceSearchFeedUnitsEdgesInnerNode(self):
        """Test VetricMarketplaceSearchResponseDataMarketplaceSearchFeedUnitsEdgesInnerNode"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
