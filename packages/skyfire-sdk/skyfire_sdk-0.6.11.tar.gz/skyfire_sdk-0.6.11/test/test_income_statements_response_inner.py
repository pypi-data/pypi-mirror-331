# coding: utf-8

"""
    Skyfire API

    The Skyfire API is designed to allow agents to interact with the Skyfire platform to enable autonomous payments.

    The version of the OpenAPI document: 1.0.0
    Contact: support@skyfire.xyz
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from skyfire_sdk.models.income_statements_response_inner import IncomeStatementsResponseInner

class TestIncomeStatementsResponseInner(unittest.TestCase):
    """IncomeStatementsResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IncomeStatementsResponseInner:
        """Test IncomeStatementsResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IncomeStatementsResponseInner`
        """
        model = IncomeStatementsResponseInner()
        if include_optional:
            return IncomeStatementsResponseInner(
                ticker = '<string>',
                calendar_date = 'Sun Dec 24 19:00:00 EST 2023',
                report_period = 'Sun Dec 24 19:00:00 EST 2023',
                period = 'quarterly',
                revenue = 123,
                cost_of_revenue = 123,
                gross_profit = 123,
                operating_expense = 123,
                selling_general_and_administrative_expenses = 123,
                research_and_development = 123,
                operating_income = 123,
                interest_expense = 123,
                ebit = 123,
                income_tax_expense = 123,
                net_income_discontinued_operations = 123,
                net_income_non_controlling_interests = 123,
                net_income = 123,
                net_income_common_stock = 123,
                preferred_dividends_impact = 123,
                consolidated_income = 123,
                earnings_per_share = 123,
                earnings_per_share_diluted = 123,
                dividends_per_common_share = 123,
                weighted_average_shares = 123,
                weighted_average_shares_diluted = 123
            )
        else:
            return IncomeStatementsResponseInner(
        )
        """

    def testIncomeStatementsResponseInner(self):
        """Test IncomeStatementsResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
