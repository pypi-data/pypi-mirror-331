# coding: utf-8

"""
    Skyfire SDK

    The Skyfire SDK is designed to allow agents to interact with the Skyfire platform to enable autonomous payments.

    The version of the OpenAPI document: 1.0.0
    Contact: support@skyfire.xyz
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from skyfire_sdk.models.vetric_linked_in_job_search_response import VetricLinkedInJobSearchResponse

class TestVetricLinkedInJobSearchResponse(unittest.TestCase):
    """VetricLinkedInJobSearchResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VetricLinkedInJobSearchResponse:
        """Test VetricLinkedInJobSearchResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VetricLinkedInJobSearchResponse`
        """
        model = VetricLinkedInJobSearchResponse()
        if include_optional:
            return VetricLinkedInJobSearchResponse(
                jobs = [
                    skyfire_sdk.models.vetric_linked_in_job_search_response_jobs_inner.VetricLinkedInJobSearchResponse_jobs_inner(
                        title = '', 
                        subtitle = '', 
                        urn = '', 
                        company = '', 
                        location = '', 
                        url = '', 
                        listing_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                listings = 1.337,
                cursor = ''
            )
        else:
            return VetricLinkedInJobSearchResponse(
                jobs = [
                    skyfire_sdk.models.vetric_linked_in_job_search_response_jobs_inner.VetricLinkedInJobSearchResponse_jobs_inner(
                        title = '', 
                        subtitle = '', 
                        urn = '', 
                        company = '', 
                        location = '', 
                        url = '', 
                        listing_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                cursor = '',
        )
        """

    def testVetricLinkedInJobSearchResponse(self):
        """Test VetricLinkedInJobSearchResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
