# coding: utf-8

"""
    Skyfire API

    The Skyfire API is designed to allow agents to interact with the Skyfire platform to enable autonomous payments.

    The version of the OpenAPI document: 1.0.0
    Contact: support@skyfire.xyz
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from skyfire_sdk.models.pricing_culture_comp_response import PricingCultureCompResponse

class TestPricingCultureCompResponse(unittest.TestCase):
    """PricingCultureCompResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PricingCultureCompResponse:
        """Test PricingCultureCompResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PricingCultureCompResponse`
        """
        model = PricingCultureCompResponse()
        if include_optional:
            return PricingCultureCompResponse(
                status = 'OK',
                objects = [
                    skyfire_sdk.models.pricing_culture_object.PricingCultureObject(
                        id = 40, 
                        comp_type = 'market_comp', 
                        name = 'Blancpain Watches', 
                        description = 'Observed prices of Blancpain watches listed between $10,000 and $300,000 on select secondary markets for luxury watches - 95% Confidence.', 
                        params = skyfire_sdk.models.pricing_culture_comp_params.PricingCultureCompParams(
                            pc_tag = 'Blancpain Watches', 
                            min_price = 10000, 
                            max_price = 300000, 
                            platform_ids = [25,27,26,33,82,69,44], 
                            trim_percent = 0.05, 
                            img_url = 'https://iili.io/JjYERSV.png', ), 
                        attributes = skyfire_sdk.models.pricing_culture_comp_attributes.PricingCultureCompAttributes(
                            id = True, 
                            market_comp_id = True, 
                            event_time = True, 
                            value_min = True, 
                            value_max = True, 
                            value_average = True, 
                            number_of_constituents = True, 
                            value_min_asset = True, 
                            value_max_asset = True, 
                            prices = True, ), 
                        frequency_in_days = 1, 
                        func = '', 
                        is_template = False, 
                        available_for_buyer = True, 
                        last_run_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        publish = True, 
                        comparable_idx = 'c6d8429087554927a3905c4809ed98b4', 
                        tags = '', 
                        alias_id = '', )
                    ]
            )
        else:
            return PricingCultureCompResponse(
        )
        """

    def testPricingCultureCompResponse(self):
        """Test PricingCultureCompResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
