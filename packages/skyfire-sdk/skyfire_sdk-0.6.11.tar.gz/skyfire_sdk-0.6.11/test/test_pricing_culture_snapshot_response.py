# coding: utf-8

"""
    Skyfire API

    The Skyfire API is designed to allow agents to interact with the Skyfire platform to enable autonomous payments.

    The version of the OpenAPI document: 1.0.0
    Contact: support@skyfire.xyz
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from skyfire_sdk.models.pricing_culture_snapshot_response import PricingCultureSnapshotResponse

class TestPricingCultureSnapshotResponse(unittest.TestCase):
    """PricingCultureSnapshotResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PricingCultureSnapshotResponse:
        """Test PricingCultureSnapshotResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PricingCultureSnapshotResponse`
        """
        model = PricingCultureSnapshotResponse()
        if include_optional:
            return PricingCultureSnapshotResponse(
                status = 'OK',
                objects = [
                    skyfire_sdk.models.pricing_culture_snapshot_object.PricingCultureSnapshotObject(
                        id = 7835, 
                        market_comp_id = 36, 
                        event_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        value_min = '10000.000000000', 
                        value_max = '299999.000000000', 
                        value_average = '72690.647112612', 
                        number_of_constituents = 11963, 
                        value_min_asset = skyfire_sdk.models.pricing_culture_snapshot_asset_details.PricingCultureSnapshotAssetDetails(
                            id = 8875825, 
                            media = [
                                'https://img.chrono24.com/images/uhren/34633588-m3piam61qlz8puguhwj8ik47-Square420.jpg'
                                ], 
                            name = 'Patek Philippe', 
                            url = 'https://www.chrono24.com//patekphilippe/a-platinum-open-faced-watch-with-two-tone-sector-dial-made-in-1938--id34633588.htm', 
                            description = 'Patek Philippe Platinum 43mm United States of America, New York, New York
A Platinum Open Faced Watch With Two Tone Sector Dial Made In 1938', 
                            platform = 'Chrono24', ), 
                        value_max_asset = skyfire_sdk.models.pricing_culture_snapshot_asset_details.PricingCultureSnapshotAssetDetails(
                            id = 8875825, 
                            name = 'Patek Philippe', 
                            url = 'https://www.chrono24.com//patekphilippe/a-platinum-open-faced-watch-with-two-tone-sector-dial-made-in-1938--id34633588.htm', 
                            description = 'Patek Philippe Platinum 43mm United States of America, New York, New York
A Platinum Open Faced Watch With Two Tone Sector Dial Made In 1938', 
                            platform = 'Chrono24', ), 
                        prices = [
                            '10000.000000000'
                            ], 
                        comparable_idx = '', 
                        recent_avg = '', )
                    ],
                subscriber = True
            )
        else:
            return PricingCultureSnapshotResponse(
        )
        """

    def testPricingCultureSnapshotResponse(self):
        """Test PricingCultureSnapshotResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
