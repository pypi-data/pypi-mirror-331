# coding: utf-8

"""
    Skyfire SDK

    The Skyfire SDK is designed to allow agents to interact with the Skyfire platform to enable autonomous payments.

    The version of the OpenAPI document: 1.0.0
    Contact: support@skyfire.xyz
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from skyfire_sdk.models.vetric_instagram_user_search_response_users_inner import VetricInstagramUserSearchResponseUsersInner

class TestVetricInstagramUserSearchResponseUsersInner(unittest.TestCase):
    """VetricInstagramUserSearchResponseUsersInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VetricInstagramUserSearchResponseUsersInner:
        """Test VetricInstagramUserSearchResponseUsersInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VetricInstagramUserSearchResponseUsersInner`
        """
        model = VetricInstagramUserSearchResponseUsersInner()
        if include_optional:
            return VetricInstagramUserSearchResponseUsersInner(
                pk = 1.337,
                pk_id = '',
                full_name = '',
                is_private = True,
                fbid_v2 = '',
                third_party_downloads_enabled = 56,
                id = '',
                profile_pic_url = '',
                username = '',
                has_anonymous_profile_picture = True,
                account_badges = [
                    ''
                    ],
                is_verified = True,
                has_opt_eligible_shop = True,
                friendship_status = skyfire_sdk.models.vetric_instagram_user_search_response_users_inner_friendship_status.VetricInstagramUserSearchResponse_users_inner_friendship_status(
                    following = True, 
                    is_private = True, 
                    incoming_request = True, 
                    outgoing_request = True, 
                    is_bestie = True, 
                    is_restricted = True, 
                    is_feed_favorite = True, ),
                latest_reel_media = 1.337,
                is_verified_search_boosted = True,
                should_show_category = True
            )
        else:
            return VetricInstagramUserSearchResponseUsersInner(
                pk = 1.337,
                pk_id = '',
                full_name = '',
                is_private = True,
                id = '',
                profile_pic_url = '',
                username = '',
        )
        """

    def testVetricInstagramUserSearchResponseUsersInner(self):
        """Test VetricInstagramUserSearchResponseUsersInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
