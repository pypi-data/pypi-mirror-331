# coding: utf-8

"""
    Skyfire SDK

    The Skyfire SDK is designed to allow agents to interact with the Skyfire platform to enable autonomous payments.

    The version of the OpenAPI document: 1.0.0
    Contact: support@skyfire.xyz
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from skyfire_sdk.models.reloadly_controller_response import ReloadlyControllerResponse

class TestReloadlyControllerResponse(unittest.TestCase):
    """ReloadlyControllerResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReloadlyControllerResponse:
        """Test ReloadlyControllerResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReloadlyControllerResponse`
        """
        model = ReloadlyControllerResponse()
        if include_optional:
            return ReloadlyControllerResponse(
                order = skyfire_sdk.models.reloadly_controller_response_order.ReloadlyControllerResponse_order(
                    transaction_created_time = '', 
                    status = '', 
                    recipient_email = '', 
                    currency_code = '', 
                    amount = 1.337, 
                    transaction_id = '', ),
                redeem_instructions = skyfire_sdk.models.reloadly_redeem_instructions_response.ReloadlyRedeemInstructionsResponse(
                    brand_id = 1.337, 
                    brand_name = '', 
                    concise = '', 
                    verbose = '', ),
                redeem_code = skyfire_sdk.models.reloadly_redeem_code_respose.ReloadlyRedeemCodeRespose(
                    card_number = '', 
                    pin_code = '', )
            )
        else:
            return ReloadlyControllerResponse(
        )
        """

    def testReloadlyControllerResponse(self):
        """Test ReloadlyControllerResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
