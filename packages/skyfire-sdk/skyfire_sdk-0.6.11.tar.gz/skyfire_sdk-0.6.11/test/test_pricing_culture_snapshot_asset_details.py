# coding: utf-8

"""
    Skyfire API

    The Skyfire API is designed to allow agents to interact with the Skyfire platform to enable autonomous payments.

    The version of the OpenAPI document: 1.0.0
    Contact: support@skyfire.xyz
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from skyfire_sdk.models.pricing_culture_snapshot_asset_details import PricingCultureSnapshotAssetDetails

class TestPricingCultureSnapshotAssetDetails(unittest.TestCase):
    """PricingCultureSnapshotAssetDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PricingCultureSnapshotAssetDetails:
        """Test PricingCultureSnapshotAssetDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PricingCultureSnapshotAssetDetails`
        """
        model = PricingCultureSnapshotAssetDetails()
        if include_optional:
            return PricingCultureSnapshotAssetDetails(
                id = 8875825,
                media = [
                    'https://img.chrono24.com/images/uhren/34633588-m3piam61qlz8puguhwj8ik47-Square420.jpg'
                    ],
                name = 'Patek Philippe',
                url = 'https://www.chrono24.com//patekphilippe/a-platinum-open-faced-watch-with-two-tone-sector-dial-made-in-1938--id34633588.htm',
                description = 'Patek Philippe Platinum 43mm United States of America, New York, New York
A Platinum Open Faced Watch With Two Tone Sector Dial Made In 1938',
                platform = 'Chrono24'
            )
        else:
            return PricingCultureSnapshotAssetDetails(
        )
        """

    def testPricingCultureSnapshotAssetDetails(self):
        """Test PricingCultureSnapshotAssetDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
