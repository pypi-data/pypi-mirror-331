# coding: utf-8

"""
    Skyfire SDK

    The Skyfire SDK is designed to allow agents to interact with the Skyfire platform to enable autonomous payments.

    The version of the OpenAPI document: 1.0.0
    Contact: support@skyfire.xyz
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from skyfire_sdk.models.bridge_virtual_account import BridgeVirtualAccount

class TestBridgeVirtualAccount(unittest.TestCase):
    """BridgeVirtualAccount unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BridgeVirtualAccount:
        """Test BridgeVirtualAccount
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BridgeVirtualAccount`
        """
        model = BridgeVirtualAccount()
        if include_optional:
            return BridgeVirtualAccount(
                id = '',
                status = 'activated',
                customer_id = '',
                source_deposit_instructions = skyfire_sdk.models.bridge_source_deposit_address.BridgeSourceDepositAddress(
                    currency = '', 
                    bank_beneficiary_name = '', 
                    bank_name = '', 
                    bank_address = '', 
                    bank_routing_number = '', 
                    bank_account_number = '', 
                    payment_rails = [
                        ''
                        ], ),
                destination = skyfire_sdk.models.bridge_destination.BridgeDestination(
                    currency = 'usd', 
                    payment_rail = 'usdc', 
                    address = '0xC', )
            )
        else:
            return BridgeVirtualAccount(
                id = '',
                status = 'activated',
                customer_id = '',
                source_deposit_instructions = skyfire_sdk.models.bridge_source_deposit_address.BridgeSourceDepositAddress(
                    currency = '', 
                    bank_beneficiary_name = '', 
                    bank_name = '', 
                    bank_address = '', 
                    bank_routing_number = '', 
                    bank_account_number = '', 
                    payment_rails = [
                        ''
                        ], ),
                destination = skyfire_sdk.models.bridge_destination.BridgeDestination(
                    currency = 'usd', 
                    payment_rail = 'usdc', 
                    address = '0xC', ),
        )
        """

    def testBridgeVirtualAccount(self):
        """Test BridgeVirtualAccount"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
