# coding: utf-8

"""
    Skyfire API

    The Skyfire API is designed to allow agents to interact with the Skyfire platform to enable autonomous payments.

    The version of the OpenAPI document: 1.0.0
    Contact: support@skyfire.xyz
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from skyfire_sdk.models.wallet_with_balance import WalletWithBalance

class TestWalletWithBalance(unittest.TestCase):
    """WalletWithBalance unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WalletWithBalance:
        """Test WalletWithBalance
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WalletWithBalance`
        """
        model = WalletWithBalance()
        if include_optional:
            return WalletWithBalance(
                wallet = skyfire_sdk.models.wallet.Wallet(
                    id = '', 
                    user_id = '', 
                    skyfire_user = skyfire_sdk.models.skyfire_user.SkyfireUser(
                        id = '', 
                        username = '', 
                        email = '', 
                        is_admin = True, 
                        is_enterprise_admin = True, 
                        is_active = True, 
                        is_onboarded = True, 
                        user_type = 'Sender', 
                        created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        wallets = [
                            skyfire_sdk.models.wallet.Wallet(
                                id = '', 
                                user_id = '', 
                                skyfire_user = skyfire_sdk.models.skyfire_user.SkyfireUser(
                                    id = '', 
                                    username = '', 
                                    email = '', 
                                    is_admin = True, 
                                    is_enterprise_admin = True, 
                                    is_active = True, 
                                    is_onboarded = True, 
                                    created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    updated_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    wallets = [
                                        
                                        ], 
                                    parent_skyfire_user = , 
                                    created_users = [
                                        
                                        ], 
                                    stytch_user_id = '', ), 
                                wallet_name = '', 
                                is_default = True, 
                                wallet_type = 'Funding', 
                                network = 'polygon_testnet', 
                                wallet_address = '', 
                                created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                updated_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        parent_skyfire_user = , 
                        created_users = [
                            
                            ], 
                        stytch_user_id = '', ), 
                    wallet_name = '', 
                    is_default = True, 
                    wallet_type = 'Funding', 
                    network = 'polygon_testnet', 
                    wallet_address = '', 
                    created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                balance = skyfire_sdk.models.web7_balance.Web7Balance(
                    native = skyfire_sdk.models.web7_balance_native.Web7Balance_native(
                        balance = '', ), 
                    claims = skyfire_sdk.models.web7_balance_claims.Web7Balance_claims(
                        sent = '', 
                        received = '', ), 
                    escrow = skyfire_sdk.models.web7_balance_escrow.Web7Balance_escrow(
                        total = '', 
                        available = '', 
                        allowance = '', ), 
                    onchain = skyfire_sdk.models.web7_balance_onchain.Web7Balance_onchain(
                        total = '', ), 
                    network = 'eth_mainnet', 
                    address = '', )
            )
        else:
            return WalletWithBalance(
                wallet = skyfire_sdk.models.wallet.Wallet(
                    id = '', 
                    user_id = '', 
                    skyfire_user = skyfire_sdk.models.skyfire_user.SkyfireUser(
                        id = '', 
                        username = '', 
                        email = '', 
                        is_admin = True, 
                        is_enterprise_admin = True, 
                        is_active = True, 
                        is_onboarded = True, 
                        user_type = 'Sender', 
                        created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        wallets = [
                            skyfire_sdk.models.wallet.Wallet(
                                id = '', 
                                user_id = '', 
                                skyfire_user = skyfire_sdk.models.skyfire_user.SkyfireUser(
                                    id = '', 
                                    username = '', 
                                    email = '', 
                                    is_admin = True, 
                                    is_enterprise_admin = True, 
                                    is_active = True, 
                                    is_onboarded = True, 
                                    created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    updated_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    wallets = [
                                        
                                        ], 
                                    parent_skyfire_user = , 
                                    created_users = [
                                        
                                        ], 
                                    stytch_user_id = '', ), 
                                wallet_name = '', 
                                is_default = True, 
                                wallet_type = 'Funding', 
                                network = 'polygon_testnet', 
                                wallet_address = '', 
                                created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                updated_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        parent_skyfire_user = , 
                        created_users = [
                            
                            ], 
                        stytch_user_id = '', ), 
                    wallet_name = '', 
                    is_default = True, 
                    wallet_type = 'Funding', 
                    network = 'polygon_testnet', 
                    wallet_address = '', 
                    created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                balance = skyfire_sdk.models.web7_balance.Web7Balance(
                    native = skyfire_sdk.models.web7_balance_native.Web7Balance_native(
                        balance = '', ), 
                    claims = skyfire_sdk.models.web7_balance_claims.Web7Balance_claims(
                        sent = '', 
                        received = '', ), 
                    escrow = skyfire_sdk.models.web7_balance_escrow.Web7Balance_escrow(
                        total = '', 
                        available = '', 
                        allowance = '', ), 
                    onchain = skyfire_sdk.models.web7_balance_onchain.Web7Balance_onchain(
                        total = '', ), 
                    network = 'eth_mainnet', 
                    address = '', ),
        )
        """

    def testWalletWithBalance(self):
        """Test WalletWithBalance"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
