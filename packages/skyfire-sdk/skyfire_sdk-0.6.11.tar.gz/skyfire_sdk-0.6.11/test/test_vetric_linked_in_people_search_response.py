# coding: utf-8

"""
    Skyfire SDK

    The Skyfire SDK is designed to allow agents to interact with the Skyfire platform to enable autonomous payments.

    The version of the OpenAPI document: 1.0.0
    Contact: support@skyfire.xyz
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from skyfire_sdk.models.vetric_linked_in_people_search_response import VetricLinkedInPeopleSearchResponse

class TestVetricLinkedInPeopleSearchResponse(unittest.TestCase):
    """VetricLinkedInPeopleSearchResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VetricLinkedInPeopleSearchResponse:
        """Test VetricLinkedInPeopleSearchResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VetricLinkedInPeopleSearchResponse`
        """
        model = VetricLinkedInPeopleSearchResponse()
        if include_optional:
            return VetricLinkedInPeopleSearchResponse(
                cursor = '',
                total_count = '',
                total_matches = '',
                people = [
                    skyfire_sdk.models.vetric_linked_in_people_search_response_people_inner.VetricLinkedInPeopleSearchResponse_people_inner(
                        urn = '', 
                        public_identifier = '', 
                        name = '', 
                        position = '', 
                        location = '', 
                        image = '', 
                        url = '', )
                    ]
            )
        else:
            return VetricLinkedInPeopleSearchResponse(
                cursor = '',
                people = [
                    skyfire_sdk.models.vetric_linked_in_people_search_response_people_inner.VetricLinkedInPeopleSearchResponse_people_inner(
                        urn = '', 
                        public_identifier = '', 
                        name = '', 
                        position = '', 
                        location = '', 
                        image = '', 
                        url = '', )
                    ],
        )
        """

    def testVetricLinkedInPeopleSearchResponse(self):
        """Test VetricLinkedInPeopleSearchResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
