[project]
name = 'snowflake.demos'
authors = [
    {name = 'Snowflake, Inc.', email = 'snowflake-python-libraries-dl@snowflake.com' },
]
description = 'A library to scaffold a Snowflake Notebooks demo'
readme = 'README.md'
requires-python = '>=3.9'
license = {text = 'Apache-2.0'}
keywords = [
    'Snowflake',
    'analytics',
    'cloud',
    'database',
    'db',
    'warehouse',
]
classifiers = [
    'Development Status :: 4 - Beta',
    'Environment :: Console',
    'Environment :: Other Environment',
    'Intended Audience :: Developers',
    'Intended Audience :: Education',
    'Intended Audience :: Information Technology',
    'Intended Audience :: System Administrators',
    'License :: OSI Approved :: Apache Software License',
    'Operating System :: OS Independent',
    'Programming Language :: SQL',
    'Programming Language :: Python :: 3',
    'Topic :: Database',
    'Topic :: Software Development',
    'Topic :: Software Development :: Libraries',
    'Topic :: Software Development :: Libraries :: Application Frameworks',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: Scientific/Engineering :: Information Analysis',
]
dependencies = [
    'atpublic>=4',
    'snowflake.core>=1.0.0',
    'snowflake-snowpark-python>=1.27.0',
    'requests>=2.32.3',
    'cachetools>=5.3.3',
    'rich>=13.3.1',
    'ipython>=7.0.0,<9.0.0',
    'sqlparse>=0.4.4',
    'filetype>=1.2.0',
]
dynamic = ['version']

[tool.hatch.version]
path = 'src/snowflake/demos/version.py'

[tool.hatch.build]
directory = '../../dist/snowflake.demos'
dev-mode-dirs = ['src']

[tool.hatch.build.targets.wheel]
packages = [
    'src/snowflake',
]

[tool.hatch.build.targets.sdist]
include = [
    'src/snowflake',
    'README.md',
    'CHANGELOG.md',
    'pyproject.toml',
]

[tool.hatch.envs.test]
dependencies = [
    'coverage[toml]',
    'diff-cover',
    'pytest',
    'pytest-cov',
]
python = '3.9'

[tool.hatch.envs.test.scripts]
check = [
    'pytest {args:tests}',
    # The following is only useful in a git repository; thus errors are ignored.
    '- diff-cover coverage.xml',
]
report = [
    # 'coverage  xml -o coverage.xml',
    'coverage report --fail-under=75'
]

[tool.hatch.envs.e2e]
python = '3.9'

[tool.hatch.envs.e2e.scripts]
help = [
    'python -c "from snowflake.demos import help; help()"',
]
load_demo = [
    'python -c "from snowflake.demos import load_demo; d=load_demo(\"{args:demo}\"); d.teardown()"',
]


[[tool.hatch.envs.precommit.matrix]]
python = ['3.10']

[tool.hatch.envs.precommit]
dependencies = [
    'black',
    'mypy',
    'ruff',
    'snowflake-snowpark-python',
]

[tool.hatch.envs.precommit.env-vars]
MYPYPATH = '{root}/src'

[tool.hatch.envs.precommit.scripts]
check = [
    'ruff check src/snowflake tests',
    'mypy --install-types --non-interactive -p snowflake.demos',
]



[tool.pytest.ini_options]
addopts = '--cov=snowflake --cov-report='
testpaths = 'tests'
pythonpath = 'src'

[tool.coverage.run]
branch = true
parallel = true
source_pkgs = [
    'snowflake.demos',
]
omit = [
    '.hatch/*',
]

[build-system]
requires = ['hatchling']
build-backend = 'hatchling.build'
