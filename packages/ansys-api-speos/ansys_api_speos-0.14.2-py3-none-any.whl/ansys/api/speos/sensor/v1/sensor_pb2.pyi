"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.speos.sensor.v1.camera_sensor_pb2
import ansys.api.speos.sensor.v1.common_pb2
import ansys.api.speos.sensor.v1.irradiance_sensor_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class SensorTemplate(google.protobuf.message.Message):
    """Sensor template with its basic characteristics"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class Radiance(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        SENSOR_TYPE_PHOTOMETRIC_FIELD_NUMBER: builtins.int
        SENSOR_TYPE_COLORIMETRIC_FIELD_NUMBER: builtins.int
        SENSOR_TYPE_RADIOMETRIC_FIELD_NUMBER: builtins.int
        SENSOR_TYPE_SPECTRAL_FIELD_NUMBER: builtins.int
        FOCAL_FIELD_NUMBER: builtins.int
        INTEGRATION_ANGLE_FIELD_NUMBER: builtins.int
        DIMENSIONS_FIELD_NUMBER: builtins.int
        @property
        def sensor_type_photometric(self) -> ansys.api.speos.sensor.v1.common_pb2.SensorTypePhotometric:
            """Sensor type : Photometric"""
            pass
        @property
        def sensor_type_colorimetric(self) -> ansys.api.speos.sensor.v1.common_pb2.SensorTypeColorimetric:
            """ Sensor type : Colorimetric"""
            pass
        @property
        def sensor_type_radiometric(self) -> ansys.api.speos.sensor.v1.common_pb2.SensorTypeRadiometric:
            """ Sensor type : Radiometric"""
            pass
        @property
        def sensor_type_spectral(self) -> ansys.api.speos.sensor.v1.common_pb2.SensorTypeSpectral:
            """Sensor type : Spectral"""
            pass
        focal: builtins.float = ...
        """Observer type : focal (mm)"""

        integration_angle: builtins.float = ...
        """Integration angle, in degree"""

        @property
        def dimensions(self) -> ansys.api.speos.sensor.v1.common_pb2.SensorDimensions:
            """Dimensions of the sensor"""
            pass
        def __init__(self,
            *,
            sensor_type_photometric : typing.Optional[ansys.api.speos.sensor.v1.common_pb2.SensorTypePhotometric] = ...,
            sensor_type_colorimetric : typing.Optional[ansys.api.speos.sensor.v1.common_pb2.SensorTypeColorimetric] = ...,
            sensor_type_radiometric : typing.Optional[ansys.api.speos.sensor.v1.common_pb2.SensorTypeRadiometric] = ...,
            sensor_type_spectral : typing.Optional[ansys.api.speos.sensor.v1.common_pb2.SensorTypeSpectral] = ...,
            focal : builtins.float = ...,
            integration_angle : builtins.float = ...,
            dimensions : typing.Optional[ansys.api.speos.sensor.v1.common_pb2.SensorDimensions] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["dimensions",b"dimensions","sensor_type",b"sensor_type","sensor_type_colorimetric",b"sensor_type_colorimetric","sensor_type_photometric",b"sensor_type_photometric","sensor_type_radiometric",b"sensor_type_radiometric","sensor_type_spectral",b"sensor_type_spectral"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["dimensions",b"dimensions","focal",b"focal","integration_angle",b"integration_angle","sensor_type",b"sensor_type","sensor_type_colorimetric",b"sensor_type_colorimetric","sensor_type_photometric",b"sensor_type_photometric","sensor_type_radiometric",b"sensor_type_radiometric","sensor_type_spectral",b"sensor_type_spectral"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["sensor_type",b"sensor_type"]) -> typing.Optional[typing_extensions.Literal["sensor_type_photometric","sensor_type_colorimetric","sensor_type_radiometric","sensor_type_spectral"]]: ...

    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    CAMERA_SENSOR_TEMPLATE_FIELD_NUMBER: builtins.int
    IRRADIANCE_SENSOR_TEMPLATE_FIELD_NUMBER: builtins.int
    RADIANCE_SENSOR_TEMPLATE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """SensorTemplate name"""

    description: typing.Text = ...
    """SensorTemplate description"""

    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """User defined metadata"""
        pass
    @property
    def camera_sensor_template(self) -> ansys.api.speos.sensor.v1.camera_sensor_pb2.CameraSensorTemplate: ...
    @property
    def irradiance_sensor_template(self) -> ansys.api.speos.sensor.v1.irradiance_sensor_pb2.IrradianceSensorTemplate: ...
    @property
    def radiance_sensor_template(self) -> global___SensorTemplate.Radiance: ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        description : typing.Text = ...,
        metadata : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        camera_sensor_template : typing.Optional[ansys.api.speos.sensor.v1.camera_sensor_pb2.CameraSensorTemplate] = ...,
        irradiance_sensor_template : typing.Optional[ansys.api.speos.sensor.v1.irradiance_sensor_pb2.IrradianceSensorTemplate] = ...,
        radiance_sensor_template : typing.Optional[global___SensorTemplate.Radiance] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["camera_sensor_template",b"camera_sensor_template","irradiance_sensor_template",b"irradiance_sensor_template","radiance_sensor_template",b"radiance_sensor_template","sensor_template",b"sensor_template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["camera_sensor_template",b"camera_sensor_template","description",b"description","irradiance_sensor_template",b"irradiance_sensor_template","metadata",b"metadata","name",b"name","radiance_sensor_template",b"radiance_sensor_template","sensor_template",b"sensor_template"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["sensor_template",b"sensor_template"]) -> typing.Optional[typing_extensions.Literal["camera_sensor_template","irradiance_sensor_template","radiance_sensor_template"]]: ...
global___SensorTemplate = SensorTemplate

class Create_Request(google.protobuf.message.Message):
    """Request to create a SensorTemplate in SensorTemplatesManager"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SENSOR_TEMPLATE_FIELD_NUMBER: builtins.int
    @property
    def sensor_template(self) -> global___SensorTemplate:
        """SensorTemplate containing its basic characteristics"""
        pass
    def __init__(self,
        *,
        sensor_template : typing.Optional[global___SensorTemplate] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["sensor_template",b"sensor_template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["sensor_template",b"sensor_template"]) -> None: ...
global___Create_Request = Create_Request

class Create_Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUID_FIELD_NUMBER: builtins.int
    guid: typing.Text = ...
    """Guid of the SensorTemplate created in SensorTemplatesManager"""

    def __init__(self,
        *,
        guid : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["guid",b"guid"]) -> None: ...
global___Create_Response = Create_Response

class Read_Request(google.protobuf.message.Message):
    """Request to read a SensorTemplate in SensorTemplatesManager"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUID_FIELD_NUMBER: builtins.int
    guid: typing.Text = ...
    """Guid of the SensorTemplate to be read"""

    def __init__(self,
        *,
        guid : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["guid",b"guid"]) -> None: ...
global___Read_Request = Read_Request

class Read_Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SENSOR_TEMPLATE_FIELD_NUMBER: builtins.int
    @property
    def sensor_template(self) -> global___SensorTemplate:
        """SensorTemplate corresponding to the guid given in Read_Request"""
        pass
    def __init__(self,
        *,
        sensor_template : typing.Optional[global___SensorTemplate] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["sensor_template",b"sensor_template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["sensor_template",b"sensor_template"]) -> None: ...
global___Read_Response = Read_Response

class Update_Request(google.protobuf.message.Message):
    """Request to update a SensorTemplate in SensorTemplatesManager"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUID_FIELD_NUMBER: builtins.int
    SENSOR_TEMPLATE_FIELD_NUMBER: builtins.int
    guid: typing.Text = ...
    """Guid of the SensorTemplate to be updated"""

    @property
    def sensor_template(self) -> global___SensorTemplate:
        """SensorTemplate that will be used for the update"""
        pass
    def __init__(self,
        *,
        guid : typing.Text = ...,
        sensor_template : typing.Optional[global___SensorTemplate] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["sensor_template",b"sensor_template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["guid",b"guid","sensor_template",b"sensor_template"]) -> None: ...
global___Update_Request = Update_Request

class Update_Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___Update_Response = Update_Response

class Delete_Request(google.protobuf.message.Message):
    """Request to delete a SensorTemplate in SensorTemplatesManager"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUID_FIELD_NUMBER: builtins.int
    guid: typing.Text = ...
    """Guid of the SensorTemplate to be deleted"""

    def __init__(self,
        *,
        guid : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["guid",b"guid"]) -> None: ...
global___Delete_Request = Delete_Request

class Delete_Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___Delete_Response = Delete_Response

class List_Request(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___List_Request = List_Request

class List_Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUIDS_FIELD_NUMBER: builtins.int
    @property
    def guids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Guids of the SensorTemplates in SensorTemplatesManager"""
        pass
    def __init__(self,
        *,
        guids : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["guids",b"guids"]) -> None: ...
global___List_Response = List_Response
