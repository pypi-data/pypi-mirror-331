[tool.poetry]
name = "pyhearingai"
version = "0.1.0"
description = "Library for transcribing audio conversations with accurate speaker identification"
authors = ["MDGrey33 <roland@abouyounes.com>"]
readme = "README.md"
repository = "https://github.com/MDGrey33/PyHearingAI"
license = "Apache-2.0"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
]
packages = [{include = "pyhearingai", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
python-dotenv = "^1.0.0"
openai = "^1.0.0"
pyannote-audio = "^3.0.0"
pydub = "^0.25.1"
numpy = "^1.24.0"
ffmpeg-python = "^0.2.0"
requests = "^2.31.0"
torch = { version = ">=2.0.0", optional = true }
onnxruntime = "^1.20.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.9.1"
isort = "^5.12.0"
mypy = "^1.5.1"
pre-commit = "^3.4.0"
ruff = "^0.1.0"

[tool.poetry.extras]
gpu = ["torch"]

[tool.poetry.scripts]
transcribe = "pyhearingai.cli:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.ruff]
line-length = 100
target-version = "py38"
select = ["E", "F", "B", "I"]
ignore = []

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "--cov=src/pyhearingai --cov-report=term-missing --cov-report=xml:coverage.xml --cov-report=html:coverage_html --cov-fail-under=89.5"
markers = [
    "unit: mark a test as a unit test",
    "integration: mark a test as an integration test",
    "e2e: mark a test as an end-to-end test"
]
