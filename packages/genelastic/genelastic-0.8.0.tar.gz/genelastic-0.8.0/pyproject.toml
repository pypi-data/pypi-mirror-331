[build-system]
requires = ["setuptools >= 70.0"]
build-backend = "setuptools.build_meta"

[project]
name = "genelastic"
version = "0.8.0"
dependencies = [
    "elasticsearch",
    "PyVCF3",
    "schema",
    "PyYAML",
    "biophony >= 1.3.0, < 1.4",
    "colorlog",
]
requires-python = ">= 3.11"
authors = [
    { name = "CNRGH" },
    { name = "Pierrick ROGER", email = "pierrick.roger@cnrgh.fr" },
    { name = "Maxime BLANCHON", email = "maxime.blanchon@cnrgh.fr" }]
description = "Generate and store genetic data into an Elasticsearch database."
readme = "README.md"
license = { text = "CeCILL" }
keywords = ["CNRGH", "genelastic", "generation", "storage", "elasticsearch", "database"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: CEA CNRS Inria Logiciel Libre License, version 2.1 (CeCILL-2.1)",
    "Programming Language :: Python :: 3.11"
]

[project.optional-dependencies]
tests = [
    "pytest",
    "mypy",
    "coverage",
    "yamllint",
    "types-PyYAML",
    "ruff >= 0.8.1, < 0.9",
    "pre-commit >= 4.0.1, < 4.1",
    "types-requests",
    "ansible-core >= 2.17.0",
    "ansible-lint >= 24.12.2, < 25"
]
docs = [
    "sphinx",
    "sphinx-autoapi",
    "furo"
]

api = [
    "flask",
    "elasticsearch",
    "environs",
    "connexion[flask,swagger-ui,uvicorn]",
    "gunicorn"
]

ui = [
    "flask",
    "requests",
    "environs",
    "uvicorn",
    "asgiref",
    "gunicorn"
]

[project.scripts]
gnl-data = "genelastic.import_data.cli_gen_data:main"
gnl-import = "genelastic.import_data.cli_import:main"
gnl-info = "genelastic.import_data.cli_info:main"
gnl-integrity = "genelastic.import_data.cli_integrity:main"
gnl-start-api = "genelastic.api.cli_start_api:main"
gnl-start-ui = "genelastic.ui.cli_start_ui:main"
gnl-validate = "genelastic.import_data.cli_validate:main"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
line-length = 80
target-version = "py311"

[tool.ruff.lint]
ignore = [
    "E501",
    "D100",
    "D103",
    "D104",
    "D105",
    "D107",
    "D205",
    "D415",
    "TRY400",
    "S311", # Disable rule 'Standard pseudo-random generators are not suitable for cryptographic purposes'.
    # Bellow are rules disabled as they conflict with 'ruff format'.
    # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
    "ISC001",
    "ISC002",
]
select = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101", # Disable "Use of assert detected" rule.
    "PLR2004", # Disable "Magic value used in comparison" rule.
    "SLF001"  # Disable "Private member accessed" rule.
]

[tool.ruff.lint.pydocstyle]
convention = "google"
