name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        node-version: ['14', '16', '18']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Create package.json if not exists
      run: |
        if [ ! -f package.json ]; then
          echo '{"name":"zktls-py-sdk","private":true}' > package.json
        fi

    - name: Install Node.js dependencies
      run: |
        npm install @primuslabs/zktls-core-sdk
        npm list || true  # Show installed packages, don't fail if there are peer dependency warnings

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        # Install test dependencies first
        pip install pytest pytest-asyncio pytest-cov
        # Install package in editable mode with dev dependencies
        pip install -e ".[dev]"
        pip list  # Show installed packages for debugging

    - name: Show environment info
      run: |
        python --version
        node --version
        npm --version
        pwd
        ls -la
        ls -la node_modules/@primuslabs || true

    - name: Run tests with coverage
      run: |
        # Run with verbose flag and show output
        pytest -v --cov=zktls tests/ --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}  # Add Codecov token
        file: ./coverage.xml
        fail_ci_if_error: false  # Don't fail if upload fails
        verbose: true  # Show more debug info
