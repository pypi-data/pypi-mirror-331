"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.edb.v1.differential_pair_pb2
import ansys.api.edb.v1.edb_messages_pb2
import google.protobuf.empty_pb2
import grpc

class DifferentialPairServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    Create: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.differential_pair_pb2.DifferentialPairCreationMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """create a differential pair"""

    FindByName: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.StringPropertyMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """find a differential pair"""

    GetDifferentialPair: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.differential_pair_pb2.DifferentialPairNetRefsMessage] = ...
    """differential pair accessors"""

    SetDifferentialPair: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.differential_pair_pb2.DifferentialPairNetRefsMessage,
        google.protobuf.empty_pb2.Empty] = ...


class DifferentialPairServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Create(self,
        request: ansys.api.edb.v1.differential_pair_pb2.DifferentialPairCreationMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """create a differential pair"""
        pass

    @abc.abstractmethod
    def FindByName(self,
        request: ansys.api.edb.v1.edb_messages_pb2.StringPropertyMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """find a differential pair"""
        pass

    @abc.abstractmethod
    def GetDifferentialPair(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.differential_pair_pb2.DifferentialPairNetRefsMessage:
        """differential pair accessors"""
        pass

    @abc.abstractmethod
    def SetDifferentialPair(self,
        request: ansys.api.edb.v1.differential_pair_pb2.DifferentialPairNetRefsMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...


def add_DifferentialPairServiceServicer_to_server(servicer: DifferentialPairServiceServicer, server: grpc.Server) -> None: ...
