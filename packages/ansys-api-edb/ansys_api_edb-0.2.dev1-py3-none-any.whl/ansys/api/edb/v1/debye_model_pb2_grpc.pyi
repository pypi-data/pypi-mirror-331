"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.edb.v1.debye_model_pb2
import ansys.api.edb.v1.edb_messages_pb2
import google.protobuf.empty_pb2
import google.protobuf.wrappers_pb2
import grpc

class DebyeModelServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    Create: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...

    GetFrequencyRange: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.debye_model_pb2.FrequencyRangeMessage] = ...

    SetFrequencyRange: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.debye_model_pb2.SetFrequencyRangeMessage,
        google.protobuf.empty_pb2.Empty] = ...

    GetRelativePermitivityAtHighLowFrequency: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.debye_model_pb2.FrequencyRangeMessage] = ...

    SetRelativePermitivityAtHighLowFrequency: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.debye_model_pb2.SetFrequencyRangeMessage,
        google.protobuf.empty_pb2.Empty] = ...

    IsRelativePermitivityEnabledAtOpticalFrequency: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...

    SetRelativePermitivityEnabledAtOpticalFrequency: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.BoolPropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...

    GetRelativePermitivityAtOpticalFrequency: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.DoubleValue] = ...

    SetRelativePermitivityAtOpticalFrequency: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.DoublePropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...

    UseDCConductivity: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...

    SetUseDCConductivity: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.BoolPropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...

    GetDCConductivity: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.DoubleValue] = ...

    SetDCConductivity: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.DoublePropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...

    GetLossTangentAtHighLowFrequency: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.debye_model_pb2.FrequencyRangeMessage] = ...

    SetLossTangentAtHighLowFrequency: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.debye_model_pb2.SetFrequencyRangeMessage,
        google.protobuf.empty_pb2.Empty] = ...


class DebyeModelServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Create(self,
        request: google.protobuf.empty_pb2.Empty,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...

    @abc.abstractmethod
    def GetFrequencyRange(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.debye_model_pb2.FrequencyRangeMessage: ...

    @abc.abstractmethod
    def SetFrequencyRange(self,
        request: ansys.api.edb.v1.debye_model_pb2.SetFrequencyRangeMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def GetRelativePermitivityAtHighLowFrequency(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.debye_model_pb2.FrequencyRangeMessage: ...

    @abc.abstractmethod
    def SetRelativePermitivityAtHighLowFrequency(self,
        request: ansys.api.edb.v1.debye_model_pb2.SetFrequencyRangeMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def IsRelativePermitivityEnabledAtOpticalFrequency(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue: ...

    @abc.abstractmethod
    def SetRelativePermitivityEnabledAtOpticalFrequency(self,
        request: ansys.api.edb.v1.edb_messages_pb2.BoolPropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def GetRelativePermitivityAtOpticalFrequency(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.DoubleValue: ...

    @abc.abstractmethod
    def SetRelativePermitivityAtOpticalFrequency(self,
        request: ansys.api.edb.v1.edb_messages_pb2.DoublePropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def UseDCConductivity(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue: ...

    @abc.abstractmethod
    def SetUseDCConductivity(self,
        request: ansys.api.edb.v1.edb_messages_pb2.BoolPropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def GetDCConductivity(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.DoubleValue: ...

    @abc.abstractmethod
    def SetDCConductivity(self,
        request: ansys.api.edb.v1.edb_messages_pb2.DoublePropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def GetLossTangentAtHighLowFrequency(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.debye_model_pb2.FrequencyRangeMessage: ...

    @abc.abstractmethod
    def SetLossTangentAtHighLowFrequency(self,
        request: ansys.api.edb.v1.debye_model_pb2.SetFrequencyRangeMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...


def add_DebyeModelServiceServicer_to_server(servicer: DebyeModelServiceServicer, server: grpc.Server) -> None: ...
