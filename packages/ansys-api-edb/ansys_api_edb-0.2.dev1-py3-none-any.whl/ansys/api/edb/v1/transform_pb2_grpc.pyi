"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.edb.v1.edb_messages_pb2
import ansys.api.edb.v1.point_data_pb2
import ansys.api.edb.v1.polygon_data_pb2
import ansys.api.edb.v1.transform_pb2
import google.protobuf.empty_pb2
import google.protobuf.wrappers_pb2
import grpc

class TransformServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    Rotate: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.point_data_pb2.PointDataRotateMessage,
        ansys.api.edb.v1.point_data_pb2.PointMessage] = ...

    Create: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.transform_pb2.TransformMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...

    GetScale: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...

    SetScale: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.ValuePropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...

    GetMirror: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...

    SetMirror: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.BoolPropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...

    GetRotation: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...

    SetRotation: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.ValuePropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...

    GetOffsetX: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...

    SetOffsetX: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.ValuePropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...

    GetOffsetY: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...

    SetOffsetY: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.ValuePropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...

    TransformPlus: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.transform_pb2.TransformOperatorMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...

    IsIdentity: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...

    TransformPoint: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.point_data_pb2.PointPropertyMessage,
        ansys.api.edb.v1.point_data_pb2.PointMessage] = ...

    TransformPolygon: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataPropertyMessage,
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage] = ...


class TransformServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Rotate(self,
        request: ansys.api.edb.v1.point_data_pb2.PointDataRotateMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.point_data_pb2.PointMessage: ...

    @abc.abstractmethod
    def Create(self,
        request: ansys.api.edb.v1.transform_pb2.TransformMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...

    @abc.abstractmethod
    def GetScale(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...

    @abc.abstractmethod
    def SetScale(self,
        request: ansys.api.edb.v1.edb_messages_pb2.ValuePropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def GetMirror(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue: ...

    @abc.abstractmethod
    def SetMirror(self,
        request: ansys.api.edb.v1.edb_messages_pb2.BoolPropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def GetRotation(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...

    @abc.abstractmethod
    def SetRotation(self,
        request: ansys.api.edb.v1.edb_messages_pb2.ValuePropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def GetOffsetX(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...

    @abc.abstractmethod
    def SetOffsetX(self,
        request: ansys.api.edb.v1.edb_messages_pb2.ValuePropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def GetOffsetY(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...

    @abc.abstractmethod
    def SetOffsetY(self,
        request: ansys.api.edb.v1.edb_messages_pb2.ValuePropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def TransformPlus(self,
        request: ansys.api.edb.v1.transform_pb2.TransformOperatorMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...

    @abc.abstractmethod
    def IsIdentity(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue: ...

    @abc.abstractmethod
    def TransformPoint(self,
        request: ansys.api.edb.v1.point_data_pb2.PointPropertyMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.point_data_pb2.PointMessage: ...

    @abc.abstractmethod
    def TransformPolygon(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataPropertyMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage: ...


def add_TransformServiceServicer_to_server(servicer: TransformServiceServicer, server: grpc.Server) -> None: ...
