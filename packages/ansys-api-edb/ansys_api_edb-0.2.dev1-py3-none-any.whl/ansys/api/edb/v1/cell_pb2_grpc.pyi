"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.edb.v1.cell_pb2
import ansys.api.edb.v1.edb_messages_pb2
import ansys.api.edb.v1.polygon_data_pb2
import google.protobuf.empty_pb2
import google.protobuf.wrappers_pb2
import grpc
import typing

class CellServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    Create: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.cell_pb2.CellCreationMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """Creates a cell"""

    GetLayout: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """Gets the layout of the provided cell"""

    GetFlattenedLayout: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """Get the flattened layout"""

    Find: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.cell_pb2.CellFindMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """Find cell by name or id"""

    Delete: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """Delete a cell"""

    GetDatabase: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """Get the database"""

    IsFootprint: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """Get whether the cell is of type footprint"""

    IsBlackBox: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """Get whether the cell is a black box"""

    SetBlackBox: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.BoolPropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """Set whether the cell is a black box"""

    GetSuppressPads: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """Get whether the cell supresses pads"""

    SetSuppressPads: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.BoolPropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """Set whether the cell supresses pads"""

    GetAntiPadsAlwaysOn: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """Get whether the anti pads is always on"""

    SetAntiPadsAlwaysOn: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.BoolPropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """Set whether the anti pads is always on"""

    GetAntiPadsOption: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.Int64Value] = ...
    """Get the option for anti pads"""

    SetAntiPadsOption: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.IntPropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """Set the option for anti pads"""

    IsSymbolicFootprint: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """Get whether the cell is a symbolic footprint"""

    GetName: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.StringValue] = ...
    """Get the name of the cell"""

    SetName: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.StringPropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """Set the name of the cell"""

    GetDesignMode: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.DesignModeMessage] = ...
    """Get the cell's design mode"""

    SetDesignMode: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.DesignModePropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """Set the cell's design mode"""

    GetHfssExtentInfo: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.HfssExtentInfoMessage] = ...
    """Get HFSS extent info"""

    SetHfssExtentInfo: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.cell_pb2.CellSetHfssExtentsMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """Set HFSS extent info"""

    GetTemperatureSettings: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.TemperatureSettingsMessage] = ...
    """Get temperature settings"""

    SetTemperatureSettings: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.cell_pb2.CellSetTemperatureSettingsMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """Set temperature settings"""

    CutOut: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.cell_pb2.CellCutOutMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """Cut out a polygon"""

    GetProductPropertyIds: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.GetProductPropertyIdsMessage,
        ansys.api.edb.v1.edb_messages_pb2.ProductPropertyIdsMessage] = ...
    """Get a list of property ids."""

    GetProductProperty: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.GetProductPropertyMessage,
        google.protobuf.wrappers_pb2.StringValue] = ...
    """Get product properies"""

    SetProductProperty: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.SetProductPropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """Set a product property value"""

    DeleteSimulationSetup: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.StringPropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """Delete a simulation setup by name"""

    GetSimulationSetups: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage] = ...
    """Get simulation setups"""

    StreamSimulationSetups: grpc.UnaryStreamMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage] = ...

    GenerateAutoHFSSRegions: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """Generate auto HFSS regions"""

    GenerateViaSmartBox: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.StringPropertyMessage,
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage] = ...
    """Generate via smart box"""


class CellServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Create(self,
        request: ansys.api.edb.v1.cell_pb2.CellCreationMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """Creates a cell"""
        pass

    @abc.abstractmethod
    def GetLayout(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """Gets the layout of the provided cell"""
        pass

    @abc.abstractmethod
    def GetFlattenedLayout(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """Get the flattened layout"""
        pass

    @abc.abstractmethod
    def Find(self,
        request: ansys.api.edb.v1.cell_pb2.CellFindMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """Find cell by name or id"""
        pass

    @abc.abstractmethod
    def Delete(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """Delete a cell"""
        pass

    @abc.abstractmethod
    def GetDatabase(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """Get the database"""
        pass

    @abc.abstractmethod
    def IsFootprint(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """Get whether the cell is of type footprint"""
        pass

    @abc.abstractmethod
    def IsBlackBox(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """Get whether the cell is a black box"""
        pass

    @abc.abstractmethod
    def SetBlackBox(self,
        request: ansys.api.edb.v1.edb_messages_pb2.BoolPropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """Set whether the cell is a black box"""
        pass

    @abc.abstractmethod
    def GetSuppressPads(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """Get whether the cell supresses pads"""
        pass

    @abc.abstractmethod
    def SetSuppressPads(self,
        request: ansys.api.edb.v1.edb_messages_pb2.BoolPropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """Set whether the cell supresses pads"""
        pass

    @abc.abstractmethod
    def GetAntiPadsAlwaysOn(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """Get whether the anti pads is always on"""
        pass

    @abc.abstractmethod
    def SetAntiPadsAlwaysOn(self,
        request: ansys.api.edb.v1.edb_messages_pb2.BoolPropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """Set whether the anti pads is always on"""
        pass

    @abc.abstractmethod
    def GetAntiPadsOption(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.Int64Value:
        """Get the option for anti pads"""
        pass

    @abc.abstractmethod
    def SetAntiPadsOption(self,
        request: ansys.api.edb.v1.edb_messages_pb2.IntPropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """Set the option for anti pads"""
        pass

    @abc.abstractmethod
    def IsSymbolicFootprint(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """Get whether the cell is a symbolic footprint"""
        pass

    @abc.abstractmethod
    def GetName(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.StringValue:
        """Get the name of the cell"""
        pass

    @abc.abstractmethod
    def SetName(self,
        request: ansys.api.edb.v1.edb_messages_pb2.StringPropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """Set the name of the cell"""
        pass

    @abc.abstractmethod
    def GetDesignMode(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.DesignModeMessage:
        """Get the cell's design mode"""
        pass

    @abc.abstractmethod
    def SetDesignMode(self,
        request: ansys.api.edb.v1.edb_messages_pb2.DesignModePropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """Set the cell's design mode"""
        pass

    @abc.abstractmethod
    def GetHfssExtentInfo(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.HfssExtentInfoMessage:
        """Get HFSS extent info"""
        pass

    @abc.abstractmethod
    def SetHfssExtentInfo(self,
        request: ansys.api.edb.v1.cell_pb2.CellSetHfssExtentsMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """Set HFSS extent info"""
        pass

    @abc.abstractmethod
    def GetTemperatureSettings(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.TemperatureSettingsMessage:
        """Get temperature settings"""
        pass

    @abc.abstractmethod
    def SetTemperatureSettings(self,
        request: ansys.api.edb.v1.cell_pb2.CellSetTemperatureSettingsMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """Set temperature settings"""
        pass

    @abc.abstractmethod
    def CutOut(self,
        request: ansys.api.edb.v1.cell_pb2.CellCutOutMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """Cut out a polygon"""
        pass

    @abc.abstractmethod
    def GetProductPropertyIds(self,
        request: ansys.api.edb.v1.edb_messages_pb2.GetProductPropertyIdsMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.ProductPropertyIdsMessage:
        """Get a list of property ids."""
        pass

    @abc.abstractmethod
    def GetProductProperty(self,
        request: ansys.api.edb.v1.edb_messages_pb2.GetProductPropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.StringValue:
        """Get product properies"""
        pass

    @abc.abstractmethod
    def SetProductProperty(self,
        request: ansys.api.edb.v1.edb_messages_pb2.SetProductPropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """Set a product property value"""
        pass

    @abc.abstractmethod
    def DeleteSimulationSetup(self,
        request: ansys.api.edb.v1.edb_messages_pb2.StringPropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """Delete a simulation setup by name"""
        pass

    @abc.abstractmethod
    def GetSimulationSetups(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage:
        """Get simulation setups"""
        pass

    @abc.abstractmethod
    def StreamSimulationSetups(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage]: ...

    @abc.abstractmethod
    def GenerateAutoHFSSRegions(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """Generate auto HFSS regions"""
        pass

    @abc.abstractmethod
    def GenerateViaSmartBox(self,
        request: ansys.api.edb.v1.edb_messages_pb2.StringPropertyMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage:
        """Generate via smart box"""
        pass


def add_CellServiceServicer_to_server(servicer: CellServiceServicer, server: grpc.Server) -> None: ...
