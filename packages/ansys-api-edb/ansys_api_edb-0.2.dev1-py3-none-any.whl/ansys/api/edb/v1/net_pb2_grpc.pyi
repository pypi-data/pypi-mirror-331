"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.edb.v1.edb_messages_pb2
import ansys.api.edb.v1.layout_obj_pb2
import google.protobuf.empty_pb2
import google.protobuf.wrappers_pb2
import grpc
import typing

class NetServiceStub:
    """Net service definition"""
    def __init__(self, channel: grpc.Channel) -> None: ...
    Create: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.StringPropertyMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """Creates a net"""

    FindByName: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.StringPropertyMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """Finds a net on a layer by name"""

    GetName: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.StringValue] = ...
    """name accessors"""

    SetName: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.StringPropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...

    GetIsPowerGround: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """is_power_ground accessors"""

    SetIsPowerGround: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.BoolPropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...

    GetLayoutObjects: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.layout_obj_pb2.LayoutObjTargetMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage] = ...
    """layout objects getter"""

    StreamLayoutObjects: grpc.UnaryStreamMultiCallable[
        ansys.api.edb.v1.layout_obj_pb2.LayoutObjTargetMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage] = ...


class NetServiceServicer(metaclass=abc.ABCMeta):
    """Net service definition"""
    @abc.abstractmethod
    def Create(self,
        request: ansys.api.edb.v1.edb_messages_pb2.StringPropertyMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """Creates a net"""
        pass

    @abc.abstractmethod
    def FindByName(self,
        request: ansys.api.edb.v1.edb_messages_pb2.StringPropertyMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """Finds a net on a layer by name"""
        pass

    @abc.abstractmethod
    def GetName(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.StringValue:
        """name accessors"""
        pass

    @abc.abstractmethod
    def SetName(self,
        request: ansys.api.edb.v1.edb_messages_pb2.StringPropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def GetIsPowerGround(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """is_power_ground accessors"""
        pass

    @abc.abstractmethod
    def SetIsPowerGround(self,
        request: ansys.api.edb.v1.edb_messages_pb2.BoolPropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def GetLayoutObjects(self,
        request: ansys.api.edb.v1.layout_obj_pb2.LayoutObjTargetMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage:
        """layout objects getter"""
        pass

    @abc.abstractmethod
    def StreamLayoutObjects(self,
        request: ansys.api.edb.v1.layout_obj_pb2.LayoutObjTargetMessage,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage]: ...


def add_NetServiceServicer_to_server(servicer: NetServiceServicer, server: grpc.Server) -> None: ...
