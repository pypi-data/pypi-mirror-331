
# Obfuscated module
import base64
import zlib
import types

__obfuscated_code = "c$~#N%Z?jKa`*m<9O^)F&7ns<+OgemEufWpb{ih`j#rZBz-bWGtR$J+#VT$+)S?9eKG`s^uwf5;SYy@$?`aMOeD(Lt4|qPo5s{Cod{nWhm3In)x*nO4k&zLR@k*|Xe8;N8USu04cKf`j*k_`wX6zUHO5|Cb&e+QgZf5MMSi$SZ+2L%BeUiB1mDq9JOFz#T{-5x)ie<z3J};|$StfV7>F4<3`P08TQ_pF>*}(Yv@is2`Cy&m~@HH=3q`%KMy!wpZO-35TXnJ<GO5?I*&-0at(`P&p@v}IKv6XH#y*OiVjYcE-dzo$HY{e6U2fG*5mc>aT<doT($5mbMlCATCl?0gW5Hi~l=pE0hIl;Qhw!9Ek$>KC6#2cXNI$KG2qB^kqtw=eI0fb)V*(;t24p;!(YMUn|LF*W<DCgD$=)Z)o*>Wi|Q7xB~lBeq#t4m&F@s3}xvMOe54`jK|i-aB(4HTFw=mw*RzvXi7UqG|ZVZtR_6|i<0ek}EHc*(VxC;YbFOx8_*oQ+R;3A91yjlO*g>!m@On+NP=i*93}I<U>Mg$R=?EGcEWRmGv16JE$+k%2RJp-eOqk-lk26zQ9(1<{)I=y|<b0g2XinjVl&!0;^|5?NUxTa9`^tVh@q*<@K4DbNK_p6kcAPEYIM0s9%RShWQfs)4jse#bMGh=Q*wK!)TDKeiFE`eU!9>=h{io8Nx&2skiLIN;T+(8U`~i?^e>`aYe)1ms;eie<eAnVZfHQ#NBp&F#!gKWa~YFx`dW+yqvyfVFLwfY_vuiYO-YB}h(Or`59LRR#Q80!7}uMG`-+@`5w<nVHWpEtc^LNOJe5D^ML7Py4X-rNQ7FqdoxX-|bUgxtwAi`0EwlSL~AhV28M5{30|YFN(Z?)w{&MEUAkQakLRYzN?A}pSm1Z#G>T3e4>^CLM+w%HSJ2Janx(2a5Tj(Xs=k%JJ>I7rtHI?u<JbImJTxa&w;Z&qN6H|S-Iycu@);m5SzsNeJVgRS2?L%wH_tQ*B}6Kr5gs+%;oDC>3-qJRcmxLDu8_<?q1|~40o>5YOfUXJV=vKCGLR9M>F=u>O>PpSj&pPu0|JZ^xfCrvN!ULs8arxJy;+1qnY2U-lut-ENM4@jxUOu2U@M_YT1U5&8${$r$Ne#HOq2CGhmYr3Aq>`MGFPxhQ#S?VB^JD-HoxI{v75(wbm{V>em7`Ix<xjA_GGOxbNowl_gzOa5|$ku&z*NZ;E)w;?*jzv#OKnJR*#ChvjWuiVRfbQfN2>c(BcXUuJXt?|}x!9@Kj@>dJw9IfUUJu&Z@z!I%KUiOH>aEwV&zaI2~Y1L*2$n@vTjx3x*redZW8co~HdN!HsmG%J_4hb5T0Z4kBs6b3nm<y(*u?Z`A+d;}~klJSkz96oR#0I65@H*s3?OQpD<NH8RYYgl(+;Wy1Vu71YLywF0c=DBQ5RBNW-JW=MA)^_Lq4!QuZlk~xW4k)E<)PtJA(1PsX(BysX0D6JsUb{9p(2b=4w2`H$fZU>FRRL;qGk#F74ZXtr(=e9g78XTq%zRei;D2OIAL$e<jjlX%8looil_rR1vEhcmiXv!ox$1Dn@>gI?h{XFs1hZdR6nln4FhHx(lZlXiPXYUMn_S>upgxuM=X{m#4=r;NX?e#FGxiGQ1Iei|nv06>%E{EDXiFzhrx}erWicoc0EIBrkocz6TE1OCn;X?9v;wA$5iy6H78t@{Iz$UtfT^3inzBh?J(0~pPXZ@6YiiqJZJsy04$O}OBB%KJyt&Hi09%(WBDx#v>9?xE2;VhYqJdyDj|O&(uTT<cstsR(-Fyp{ESR`@^P5R@XSBc)1Jm3RR03q_q1Kl4a1NG#TvXC))uL~<YT&duI|TG+w~i!yjAhf^&Zs<_O*FbeuA`5$6YQ!EFXI6_pR>nFVl-IKgj-u5&TQEH9WDNYP{G|vI%)B-qy@24!*M<(q<Gl78NO;elg)l?f11$a6it$e!Vs*qx6{*SZGr8a(<8OMwp@gk*OA?m5pn=@V5GDg^*J+2?bo$f-I4dAblDDUPcV0tE)zSt59^~oWfjm>rzxk~JWs>k0R|kvB2b8GSM-qA1sbp76>qH2LTt8RROR;_<}j)`?CkV2Ekfq3Y-_CAiEZ0~4HvdS6!|}m(~@_w%;yEipo;DD@OZWLyd5o7RuHAjG72Mff(0wBCeK(88nQILwMkkdIQwUCOH*(oEv3Omjb4c?EW@pdRU^4wg~8b}6zQ9`x|os*(z8PQ!nXYM<+}~;a<#2<n<8DT@hraMWE-QX`ZgUAn55WtU8RiJQ?Bx8vDzw2Sh7l+OB@Q4j~S63us;}5xsx-krmpUh=*~+SQ9LtKG}e`?u}LE-HG|IP0IOw>A!nc|Pi!#)^JSN3L_P`8GEw9klp<@6BbXWZg)2%qfTJC7>MJl?Dqi46+rj_-n}2trO!#Ir3&)Gz2E6=ryyBn+??SNu=^xqS>+4^<ynb@|?DF~r!#7`MUuNwAajdwiKz}S#k=^x-)C4X9Lw)so77SJ(_&^}Sb~c^SMz?9cIgyap{GMSqTDuDemoKwl@;G5T3>|;}&A<G^@HzKU_p9G|!^me04j23C1k&PXpiUN^*W;oRs}xcH>UZw)4IZ_Z;QJy^>ecDY`}hCmk>E2PgAfy`zx$8>{NMli=PnL7otKdopG!>H<CGWG2O(x2I93lgUu6}Ig89t(oPGE8x5GxUNqpwtDGev}2yGh5H)>m$M%l>`bEV++X<UJd+LbzjO4<$cz+_V0xJH>b<6bN6e#^6=Mq01?`Cjceu-Z)c)y!YIfMN$c`>L(KVS`ChOi^2e#7hNxOE20h@U_(TFw_gl=fSY9UJD}(zyd$#X=-|X(4QHk=@8=5eQCL9ADSr!w|5r<Z#fo?*v#5&eG}k;(ND#OwYRGeMqQi|jrQBT%ICk@Zvw$(X)4(}U!axV{e7)M*wCC-c~;4dbM(`zpRw!9FP?v(b}C!w!Y~G9U#MkhN9}0p>rbzpE$yATn^s86aBwIl-mrJX7Utn5%u|g|Vtfy@UeNMW%!HX&4J72KEE>qzQ@2GEuTeBX1eYOq$BW+U*7G#K$BeTr9J=`&7J_Gq?LoMXi8pYEp!GUdDj9nZdlN9^WIejh+qA1e9NTm#(Sp$TUJ7=AllF5|Mz9*IEl+AoE2&p}NrgGu>j96h1e><~ZGt*ESc;)NK&oZ&lm?~iEw@VD!u(q9-}?!aSe^Zm1K|i8%*^f-oGu1P3jXU_fYA<)5Kohi$<AdmY~q;bj+P0!JFXhRjcG!9aOyOq7R2PBjhC_;>MrRUj!5RQpLG33s!S<a(#u9QxEsElDi+z06vsQq!MB7RbjnILyp30PAVG}32D!(aB`~ee67T8(>H!Bjd&sbn#ls!Wpv@@A(O5fV;cg0N0*<09^0vp=TZQpyEK=Yi*zJ{{p!(AHrH&Q>+-+RKCQzsZ!i<fr7UQX0-to)qF3ayTMqkIl(y1YCZAkp3*%vU(?EILn>9d{OCs@5!RBT-cV2|`b1%J5h5N%=lx?7;sfQAfdJTH!69)JeGT^i;b9w*`DLfDvC8-c9kK(qT%a3qBHCry#!B#94Y^soWRQyW%>Av_0^dJA{~v^l8E6wIW_Hm{55{3EcIMOIfl`p6Gh!Pq~Ebay{))xgzveVDc;rJ4sdI<CLHMya?1_3`mXSSB!fxW)g^6a4?j+b#nG2_kI^vM*Df$vp(8b8b(h&IHZ?KQBIfc%!#zn}BZd9$qr_7h#^3fG;kfyC2H}#N-eW8}G(Gm=;;wwU!H0MuBV{UbOTE_VzT`xcUPjC#ONCbq^&NWuaJ8QQ$+xT0ZZkt3JZnW1}%TWAjpfggrvKdfmcsmzI@ex;2hye**KwbO3vQ8G+}DRxFktAMUC!k(R@E++oxpI4IWxkhV~@xv`vA&~dZZNO_Im_@xOtUyUN11)Zv1uhQT{NH|HP0m%6N;U(5QXB#FhDT$v{uKwy6Hi&E&RJ+K5DEl#ousZ;x5xeI1C3uIw`K{v}20}apu_t)-o8K}U#5?(TI;Nv7E6+!7JUgr$*B+B{{>#bKHLe1tm~_ayEG|;}z7-!zWO$j2F6#=Fi!7gBu0R%IvB_-p0^(>yzPsq)5788A+V9r2#9{%mqfXK_jL{CUyoJ@_JR>P7sVE8hoj>Xs?o_RIs$Qe1qjI|mYquw~SXcw4mP_h{9oU>g2f0eKUnEqyL)%wZ-~uhdj!-}=CHe~N>G(D^)mXOH(J!scsP57df$m5Mv{{VHwBD$=06b$%KzHqpkLVb})l+pygs0$9^hHLNBKczmM}k2S#6ibJLK!%3sIGzuJ05~ygQoU^;utsVM`SN*>Fz98=*~WC#7tv@X?Om40BQe#G_g(*Ysg(;%#Mt2Z?@O0;ed2+n7^AmuYNN$(JNg^hf_)84RgX8<=E$nX@K(YQE$ux8uH03m?!vT_N36CAqasw*TG18gh753W`9GD<XOGr1xA#NSU6%Ytp^#$^G1};h5*S5Y%0zaDPk0<9d99SOc+VlX$kh1B%bosw1dwa@$QfL;1x7B@M>Z|s5kuYogpB+$S5(S=`jL5N$8Op#q;xczemkzM^pNXnN-(+_Y}Y4GOVdfG@FBYp+gDI_I&JoLX5>i(k7P$1#OjC@Y+4cgIDlef-&A3eDOqqoqRcxxeZ&#ZjSZ8*^rdW(W5MQ9n0?yLg=gCvnx7q8iNJ)l6;a2Kj#|;b#e};<2(e(k0iZXz~#Qk*8)~So{H!QUL%K@xVg(<PLYbkSzf(LOuU-33RAjV5E?OrX8^ktY)XlqtfFZQ&0x_zLZL%kX!*JLlwAnPK^%-qcW2VXG6i#X(mQNgH~99^&)nl2r~uG9zU!6q9gPCGxwnuNhnuq&TWelN&yW5JG=@$phlfy7y*xIQ5&zEQq#<v}FnpKfUc0No-CE!QhZK($a9InwstY<`+Hn$0!5ye*<=MctvDqeU=UKwzfdQ}l*()%n7p5S*qatMUPABZ%Cp}L)P-lt}x=0#4Dc6)R49TjWcGL_{u<22Ms3T^QFW&g!CiCKbpBsAzR&=WJZHDxx&;*TA9v7X`9gZ>w&%!uNZ0Y=Nqw5I{?=kOi-7fp1cGpt~T4K&DdzHF{QkP!p0j|B+fI1&KTIfW4$7rpJ>4CDSnU&7>bexwvMP%`MC$Uunb&GBb@(}SIa*F8Wla}C#?S0`Q&bIyOpdfchFv2tv?80(&PzMa+1K?yM$>7BDiZ4MHOk!HgGk?8G>x5HGNg817lWToP(5#TKF*S$v1n#N8X$o{alKFW`Gm&Pi34qFgC<RILz5Y!Zk%E8))Wze%U22a6Xc%kg6mqO`-AMlS2hkJ82?m2&K$`d`K#&-*+XI{M`DV@*W2FVaL>Oy#$~|>q6N(U1Zyb>0EJqH=Dukwd>9MYLz?-Cq*VVW~;dGp#Z&4dvbxhhA{vmzTS7#YyI*%(_nI}V!P_{|U8d{l&+9DoSYKjf)aAnI}_9B$j+&uwY($6LMv1ZXMM;9FRS^nOFdhnUDy{jv_b<j*?l39VQkze)LV&$lHKMNrjxgrv<QaxPM2@Rckw6(@C*==fM9RUV5uC`nhC~`yO*2f|wxN-_7u)V{-&D<9c&p)2AM?d~##{TTj|KjGjt1x^eDR4gve#WJ2&$P8%jin~jd-81GkR%_h7B61KDLHAtnWKkEsCw9<_K`H)k;VUO#LfJWlb75Afi49mpFCTwhXL%V;o|Ezx+=_}sGjr-jPt4(u3|o^lT~#NP{UKhX7XQPtrC{AQ<PZsYo-1XMu(dHB{7FH3!)hXwaDZ#WQj}jt5;>~Cz(!C;3k!r!~%)0ffMei&Nbdax?)zs<B8GJ_`n_l$>Ta(ZS4wlJn{5*q2DjTKIa$gQ&~X?Dj=^?s<-;?>u<Z-e|*87P{<Xto4f?#=NbJx+4tZ4>wk@`J~u%D4oihMn4WE<Z+v_-=R_nYq0LEgN7OLFfX(TTdLGp&o5reX_w;O2JguoUq+Gf+o%fqjJmEy^@n7!H^yxanD%Ya(90$W+>Dj>k3W^4AoFB(CX#ao*VZFw_OXcS)Pd=Bbt5LN`peCf8m=)7eALn2+mZ;w+<7DjkhSW(_AL{n90+IcQoj<ZYr~tt2aDY7?l<su?NZPwH*g!?KqD$8rwQAI9KXWuWUKvbvYH@<9w?i4VG)*f>3$j8Rmp?N*Q5n&@jxwU|3|_FjU2bJ^+sZTir9hcXP`((J(>3;8aQ{-u1Ujh{U^#Vy3+nZZvKuN>O4a<P{r>@6Ov0N"

def __load():
    code = zlib.decompress(base64.b85decode(__obfuscated_code))
    module_code = compile(code, __file__, 'exec')
    module_globals = globals()
    exec(module_code, module_globals)

__load()
del __load
del __obfuscated_code
