[build-system]
requires = ["scikit-build-core", "cython>=3.0"]
build-backend = "scikit_build_core.build"

[project]
name = "pycomsa"
version = "0.1.0"
description = "Cython bindings and Python interface to CoMSA, a compressor for multiple-sequence alignments."
readme = "README.md"
requires-python = ">=3.7"
license = { file = "COPYING" }
authors = [
  { name = "Martin Larralde", email = "martin.larralde@embl.de" },
]
keywords = ["bioinformatics", "multiple", "sequence", "alignment", "compression"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: C",
    "Programming Language :: Cython",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Typing :: Typed",
]

[project.urls]
# "Documentation" = "https://pycomsa.readthedocs.io/en/stable/"
"Bug Tracker" = "https://github.com/althonos/pycomsa/issues"
"Changelog" = "https://github.com/althonos/pycomsa/blob/master/CHANGELOG.md"
# "Coverage" = "https://codecov.io/gh/althonos/pycomsa/"
"Builds" = "https://github.com/althonos/pycomsa/actions"
"PyPI" = "https://pypi.org/project/pycomsa"

[project.optional-dependencies]
test = ["importlib-resources ; python_version < '3.9'"]

[tool.scikit-build]
build-dir = "build/{build_type}"
build.targets = ["pycomsa._comsa"]

[tool.scikit-build.editable]
rebuild = true
verbose = true

[[tool.scikit-build.overrides]]
if.state = "editable"
cmake.build-type = "Debug"

[tool.cibuildwheel]
before-build = "pip install scikit-build-core cython"
build-frontend = { name = "pip", args = ["--no-build-isolation"] }
build-verbosity = 1
free-threaded-support = false
test-command = "python -m unittest pycomsa.tests -v"
test-extras = ["test"]
skip = "pp*"

[tool.cibuildwheel.macos]
environment = { MACOSX_DEPLOYMENT_TARGET = "10.12" }

[tool.coverage.run]
plugins = ["Cython.Coverage"]

[tool.coverage.report]
include = ["src/pyjess/*"]
omit = ["src/pyjess/tests/*"]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if typing.TYPE_CHECKING:",
    "@abc.abstractmethod",
    "@abc.abstractproperty",
    "raise NotImplementedError",
    "return NotImplemented",
    "raise UnexpectedError",
    "raise AllocationError",
]

[tool.mypy]
disallow_any_decorated = true
disallow_any_generics = true
disallow_any_unimported = false
disallow_subclassing_any = false
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_return_any = true

["tool.mypy-pycomsa.tests"]
ignore_errors = true
