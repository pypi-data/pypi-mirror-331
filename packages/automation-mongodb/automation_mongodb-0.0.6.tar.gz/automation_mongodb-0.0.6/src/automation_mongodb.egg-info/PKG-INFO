Metadata-Version: 2.1
Name: automation_mongodb
Version: 0.0.6
Summary: A python package for connecting with database.
Home-page: https://github.com/AgentAhmed/mongodb_connector
Author: AgentAhmed
Author-email: ahmed.mca18@gmail.com
License: MIT
Project-URL: Bug Tracker, https://github.com/AgentAhmed/mongodb_connector/issues
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
License-File: LICENSE
Requires-Dist: ensure==1.0.2
Requires-Dist: py-youtube==1.1.7
Provides-Extra: testing
Requires-Dist: pytest>=7.1.3; extra == "testing"
Requires-Dist: mypy>=0.971; extra == "testing"
Requires-Dist: flake8>=5.0.4; extra == "testing"
Requires-Dist: tox>=3.25.1; extra == "testing"
Requires-Dist: black>=22.8.0; extra == "testing"

# MongoDB-Connector

# requirements_dev.txt 

we use for the testing
It makes it easier to install and manage dependencies for development and testing, separate from the dependencies required for production.

# difference between requirements_dev.txt and requirements.txt

requirements.txt is used to specify the dependencies required to run the production code of a Python project, while requirements_dev.txt is used to specify the dependencies required for development and testing purposes.

# tox.ini

We use if for the testing in the python package testing against different version of the python

## how tox works tox enviornment creation

Install depedencies and packages

Run commands
Its a combination of the (virtualenvwrapper and makefile)
It creates a .tox

# pyproject.toml

it is being used for configuration the python project it is a alternative of the setup.cfg file. its containts configuration related to the build system such as the build tool used package name version author license and dependencies

# setup.cfg

In summary, setup.cfg is used by setuptools to configure the packaging and installation of a Python projec

# Testing python application

types of testing

Automated testing
Manual testing
Mode of testing

Unit testing
Integration tests
Testing frameworks

pytest
unittest
robotframework
selenium
behave
doctest
