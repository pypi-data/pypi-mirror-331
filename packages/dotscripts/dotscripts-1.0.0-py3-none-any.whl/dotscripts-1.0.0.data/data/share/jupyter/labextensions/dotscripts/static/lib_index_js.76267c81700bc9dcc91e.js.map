{"version":3,"file":"lib_index_js.76267c81700bc9dcc91e.js","mappings":";;;;;;;;;;;;;;;AAM8B;AAE9B,MAAM,SAAS,GAAgC;IAC7C,EAAE,EAAE,YAAY;IAChB,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,CAAC,kEAAgB,CAAC;IAC5B,QAAQ,EAAE,CAAC,GAAoB,EAAE,SAA2B,EAAE,EAAE;QAC9D,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;QAE5D,gDAAgD;QAChD,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,GAAG,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC;QAEhE,MAAM,OAAO,GAAG,iCAAiC,CAAC;QAClD,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,EAAE;YAC/B,KAAK,EAAE,+BAA+B;YACtC,OAAO,EAAE,CAAC,IAAS,EAAE,EAAE;gBACrB,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,IAAI,QAAQ,CAAC,CAAC,+BAA+B;gBACrE,OAAO,CAAC,GAAG,CAAC,6BAA6B,OAAO,EAAE,CAAC,CAAC;gBAEpD,MAAM,OAAO,GAAG,SAAS,CAAC,aAAa,CAAC;gBACxC,IAAI,CAAC,OAAO,EAAE,CAAC;oBACb,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBACpC,OAAO;gBACT,CAAC;gBAED,MAAM,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC;gBACjC,IAAI,eAAe,GAAG,KAAK,CAAC;gBAE5B,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,KAAa,EAAE,EAAE;oBACpD,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAe,CAAC;oBAC5C,MAAM,IAAI,GAAG,QAAQ,CAAC,IAA4B,CAAC;oBAEnD,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,QAAQ,EAAE,IAAI,CAAC,CAAC;oBAEzC,IAAI,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;wBAC5B,OAAO,CAAC,GAAG,CAAC,8BAA8B,KAAK,EAAE,CAAC,CAAC;wBACnD,eAAe,GAAG,IAAI,CAAC;oBACzB,CAAC;oBAED,8DAA8D;oBAC9D,IAAI,eAAe,EAAE,CAAC;wBACpB,QAAQ,CAAC,eAAe,GAAG,KAAK,CAAC;wBACjC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;oBACjD,CAAC;gBACH,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,eAAe,EAAE,CAAC;oBACrB,OAAO,CAAC,IAAI,CAAC,2BAA2B,OAAO,EAAE,CAAC,CAAC;gBACrD,CAAC;YACH,CAAC;SACF,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC;IAC9C,CAAC;CACF,CAAC;AAEF,iEAAe,SAAS,EAAC","sources":["webpack://dotscripts/./src/index.ts"],"sourcesContent":["import {\r\n  JupyterFrontEnd, JupyterFrontEndPlugin\r\n} from '@jupyterlab/application';\r\n\r\nimport {\r\n  INotebookTracker\r\n} from '@jupyterlab/notebook';\r\n\r\nconst extension: JupyterFrontEndPlugin<void> = {\r\n  id: 'dotscripts',\r\n  autoStart: true,\r\n  requires: [INotebookTracker],\r\n  activate: (app: JupyterFrontEnd, notebooks: INotebookTracker) => {\r\n    console.log('JupyterLab extension dotscripts is activated');\r\n\r\n    // Log available commands to verify registration\r\n    console.log('Available Commands:', app.commands.listCommands());\r\n\r\n    const command = 'dotscripts:run-tagged-and-below';\r\n    app.commands.addCommand(command, {\r\n      label: 'Run Tagged Cell and All Below',\r\n      execute: (args: any) => {\r\n        const tagName = args.tag || 'my-tag'; // Default tag if not specified\r\n        console.log(`Executing cells from tag: ${tagName}`);\r\n\r\n        const current = notebooks.currentWidget;\r\n        if (!current) {\r\n          console.warn('No active notebook.');\r\n          return;\r\n        }\r\n        \r\n        const notebook = current.content;\r\n        let foundTaggedCell = false;\r\n\r\n        notebook.widgets.forEach((cell: any, index: number) => {\r\n          const metadata = cell.model.metadata as any;\r\n          const tags = metadata.tags as string[] | undefined;\r\n\r\n          console.log(`Cell ${index} tags:`, tags);\r\n\r\n          if (tags?.includes(tagName)) {\r\n            console.log(`Found tagged cell at index ${index}`);\r\n            foundTaggedCell = true;\r\n          }\r\n\r\n          // If the tagged cell has been found, execute it and all below\r\n          if (foundTaggedCell) {\r\n            notebook.activeCellIndex = index;\r\n            app.commands.execute('notebook:run-all-below');\r\n          }\r\n        });\r\n\r\n        if (!foundTaggedCell) {\r\n          console.warn(`No cell found with tag: ${tagName}`);\r\n        }\r\n      }\r\n    });\r\n\r\n    console.log('Registered command:', command);\r\n  }\r\n};\r\n\r\nexport default extension;\r\n"],"names":[],"sourceRoot":""}