# coding: utf-8

"""
    Hitobito JSON:API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Contact: oss@basilbader.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from datetime import datetime
from pydantic import Field, StrictBool, StrictInt, StrictStr, field_validator
from typing import List, Optional
from typing_extensions import Annotated
from jubladb_api.models.additional_emails_readable_attribute import AdditionalEmailsReadableAttribute
from jubladb_api.models.groups_collection import GroupsCollection
from jubladb_api.models.groups_extra_attribute import GroupsExtraAttribute
from jubladb_api.models.groups_readable_attribute import GroupsReadableAttribute
from jubladb_api.models.groups_single import GroupsSingle
from jubladb_api.models.people_readable_attribute import PeopleReadableAttribute
from jubladb_api.models.phone_numbers_readable_attribute import PhoneNumbersReadableAttribute
from jubladb_api.models.social_accounts_readable_attribute import SocialAccountsReadableAttribute

from jubladb_api.api_client import ApiClient, RequestSerialized
from jubladb_api.api_response import ApiResponse
from jubladb_api.rest import RESTResponseType


class GroupsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def get_group(
        self,
        id: Annotated[StrictStr, Field(description="ID of the resource")],
        include: Annotated[Optional[List[StrictStr]], Field(description="[Include related resources](https://jsonapi.org/format/#fetching-includes)")] = None,
        sort: Annotated[Optional[List[StrictStr]], Field(description="[Sort groups according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)  You should not include both ascending `id` and descending `-id` fields the same time  ")] = None,
        fields_groups: Annotated[Optional[List[GroupsReadableAttribute]], Field(description="[Include only specified fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        extra_fields_groups: Annotated[Optional[List[GroupsExtraAttribute]], Field(description="[Include specified extra fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        filter_id_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by layer using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_require_person_add_requests_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by require_person_add_requests using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_with_deleted_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by with_deleted using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_with_archived_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by with_archived using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        fields_people: Annotated[Optional[List[PeopleReadableAttribute]], Field(description="[Include only specified fields of Person in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        fields_phone_numbers: Annotated[Optional[List[PhoneNumbersReadableAttribute]], Field(description="[Include only specified fields of Phone number in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        fields_social_accounts: Annotated[Optional[List[SocialAccountsReadableAttribute]], Field(description="[Include only specified fields of Social account in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        fields_additional_emails: Annotated[Optional[List[AdditionalEmailsReadableAttribute]], Field(description="[Include only specified fields of Additional email in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
        _additional_query_params: Optional[Dict[StrictStr, Any]] = None,
    ) -> GroupsSingle:
        """Fetch Group


        :param id: ID of the resource (required)
        :type id: str
        :param include: [Include related resources](https://jsonapi.org/format/#fetching-includes)
        :type include: List[str]
        :param sort: [Sort groups according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)  You should not include both ascending `id` and descending `-id` fields the same time  
        :type sort: List[str]
        :param fields_groups: [Include only specified fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_groups: List[GroupsReadableAttribute]
        :param extra_fields_groups: [Include specified extra fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type extra_fields_groups: List[GroupsExtraAttribute]
        :param filter_id_eq: [Filter Group by id using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_eq: List[int]
        :param filter_id_not_eq: [Filter Group by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_not_eq: List[int]
        :param filter_id_gt: [Filter Group by id using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_gt: List[int]
        :param filter_id_gte: [Filter Group by id using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_gte: List[int]
        :param filter_id_lt: [Filter Group by id using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_lt: List[int]
        :param filter_id_lte: [Filter Group by id using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_lte: List[int]
        :param filter_name_eq: [Filter Group by name using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_eq: List[str]
        :param filter_name_not_eq: [Filter Group by name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_eq: List[str]
        :param filter_name_eql: [Filter Group by name using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_eql: List[str]
        :param filter_name_not_eql: [Filter Group by name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_eql: List[str]
        :param filter_name_prefix: [Filter Group by name using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_prefix: List[str]
        :param filter_name_not_prefix: [Filter Group by name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_prefix: List[str]
        :param filter_name_suffix: [Filter Group by name using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_suffix: List[str]
        :param filter_name_not_suffix: [Filter Group by name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_suffix: List[str]
        :param filter_name_match: [Filter Group by name using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_match: List[str]
        :param filter_name_not_match: [Filter Group by name using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_match: List[str]
        :param filter_short_name_eq: [Filter Group by short_name using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_eq: List[str]
        :param filter_short_name_not_eq: [Filter Group by short_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_eq: List[str]
        :param filter_short_name_eql: [Filter Group by short_name using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_eql: List[str]
        :param filter_short_name_not_eql: [Filter Group by short_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_eql: List[str]
        :param filter_short_name_prefix: [Filter Group by short_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_prefix: List[str]
        :param filter_short_name_not_prefix: [Filter Group by short_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_prefix: List[str]
        :param filter_short_name_suffix: [Filter Group by short_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_suffix: List[str]
        :param filter_short_name_not_suffix: [Filter Group by short_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_suffix: List[str]
        :param filter_short_name_match: [Filter Group by short_name using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_match: List[str]
        :param filter_short_name_not_match: [Filter Group by short_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_match: List[str]
        :param filter_display_name_eq: [Filter Group by display_name using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_eq: List[str]
        :param filter_display_name_not_eq: [Filter Group by display_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_eq: List[str]
        :param filter_display_name_eql: [Filter Group by display_name using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_eql: List[str]
        :param filter_display_name_not_eql: [Filter Group by display_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_eql: List[str]
        :param filter_display_name_prefix: [Filter Group by display_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_prefix: List[str]
        :param filter_display_name_not_prefix: [Filter Group by display_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_prefix: List[str]
        :param filter_display_name_suffix: [Filter Group by display_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_suffix: List[str]
        :param filter_display_name_not_suffix: [Filter Group by display_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_suffix: List[str]
        :param filter_display_name_match: [Filter Group by display_name using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_match: List[str]
        :param filter_display_name_not_match: [Filter Group by display_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_match: List[str]
        :param filter_description_eq: [Filter Group by description using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_eq: List[str]
        :param filter_description_not_eq: [Filter Group by description using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_eq: List[str]
        :param filter_description_eql: [Filter Group by description using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_eql: List[str]
        :param filter_description_not_eql: [Filter Group by description using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_eql: List[str]
        :param filter_description_prefix: [Filter Group by description using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_prefix: List[str]
        :param filter_description_not_prefix: [Filter Group by description using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_prefix: List[str]
        :param filter_description_suffix: [Filter Group by description using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_suffix: List[str]
        :param filter_description_not_suffix: [Filter Group by description using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_suffix: List[str]
        :param filter_description_match: [Filter Group by description using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_match: List[str]
        :param filter_description_not_match: [Filter Group by description using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_match: List[str]
        :param filter_layer_eq: [Filter Group by layer using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_eq: bool
        :param filter_parent_id_eq: [Filter Group by parent_id using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_eq: List[int]
        :param filter_parent_id_not_eq: [Filter Group by parent_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_not_eq: List[int]
        :param filter_parent_id_gt: [Filter Group by parent_id using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_gt: List[int]
        :param filter_parent_id_gte: [Filter Group by parent_id using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_gte: List[int]
        :param filter_parent_id_lt: [Filter Group by parent_id using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_lt: List[int]
        :param filter_parent_id_lte: [Filter Group by parent_id using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_lte: List[int]
        :param filter_layer_group_id_eq: [Filter Group by layer_group_id using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_eq: List[int]
        :param filter_layer_group_id_not_eq: [Filter Group by layer_group_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_not_eq: List[int]
        :param filter_layer_group_id_gt: [Filter Group by layer_group_id using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_gt: List[int]
        :param filter_layer_group_id_gte: [Filter Group by layer_group_id using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_gte: List[int]
        :param filter_layer_group_id_lt: [Filter Group by layer_group_id using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_lt: List[int]
        :param filter_layer_group_id_lte: [Filter Group by layer_group_id using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_lte: List[int]
        :param filter_type_eq: [Filter Group by type using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_eq: List[str]
        :param filter_type_not_eq: [Filter Group by type using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_eq: List[str]
        :param filter_type_eql: [Filter Group by type using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_eql: List[str]
        :param filter_type_not_eql: [Filter Group by type using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_eql: List[str]
        :param filter_type_prefix: [Filter Group by type using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_prefix: List[str]
        :param filter_type_not_prefix: [Filter Group by type using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_prefix: List[str]
        :param filter_type_suffix: [Filter Group by type using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_suffix: List[str]
        :param filter_type_not_suffix: [Filter Group by type using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_suffix: List[str]
        :param filter_type_match: [Filter Group by type using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_match: List[str]
        :param filter_type_not_match: [Filter Group by type using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_match: List[str]
        :param filter_email_eq: [Filter Group by email using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_eq: List[str]
        :param filter_email_not_eq: [Filter Group by email using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_eq: List[str]
        :param filter_email_eql: [Filter Group by email using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_eql: List[str]
        :param filter_email_not_eql: [Filter Group by email using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_eql: List[str]
        :param filter_email_prefix: [Filter Group by email using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_prefix: List[str]
        :param filter_email_not_prefix: [Filter Group by email using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_prefix: List[str]
        :param filter_email_suffix: [Filter Group by email using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_suffix: List[str]
        :param filter_email_not_suffix: [Filter Group by email using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_suffix: List[str]
        :param filter_email_match: [Filter Group by email using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_match: List[str]
        :param filter_email_not_match: [Filter Group by email using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_match: List[str]
        :param filter_address_eq: [Filter Group by address using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_eq: List[str]
        :param filter_address_not_eq: [Filter Group by address using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_eq: List[str]
        :param filter_address_eql: [Filter Group by address using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_eql: List[str]
        :param filter_address_not_eql: [Filter Group by address using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_eql: List[str]
        :param filter_address_prefix: [Filter Group by address using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_prefix: List[str]
        :param filter_address_not_prefix: [Filter Group by address using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_prefix: List[str]
        :param filter_address_suffix: [Filter Group by address using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_suffix: List[str]
        :param filter_address_not_suffix: [Filter Group by address using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_suffix: List[str]
        :param filter_address_match: [Filter Group by address using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_match: List[str]
        :param filter_address_not_match: [Filter Group by address using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_match: List[str]
        :param filter_zip_code_eq: [Filter Group by zip_code using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_eq: List[int]
        :param filter_zip_code_not_eq: [Filter Group by zip_code using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_not_eq: List[int]
        :param filter_zip_code_gt: [Filter Group by zip_code using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_gt: List[int]
        :param filter_zip_code_gte: [Filter Group by zip_code using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_gte: List[int]
        :param filter_zip_code_lt: [Filter Group by zip_code using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_lt: List[int]
        :param filter_zip_code_lte: [Filter Group by zip_code using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_lte: List[int]
        :param filter_town_eq: [Filter Group by town using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_eq: List[str]
        :param filter_town_not_eq: [Filter Group by town using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_eq: List[str]
        :param filter_town_eql: [Filter Group by town using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_eql: List[str]
        :param filter_town_not_eql: [Filter Group by town using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_eql: List[str]
        :param filter_town_prefix: [Filter Group by town using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_prefix: List[str]
        :param filter_town_not_prefix: [Filter Group by town using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_prefix: List[str]
        :param filter_town_suffix: [Filter Group by town using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_suffix: List[str]
        :param filter_town_not_suffix: [Filter Group by town using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_suffix: List[str]
        :param filter_town_match: [Filter Group by town using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_match: List[str]
        :param filter_town_not_match: [Filter Group by town using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_match: List[str]
        :param filter_country_eq: [Filter Group by country using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_eq: List[str]
        :param filter_country_not_eq: [Filter Group by country using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_eq: List[str]
        :param filter_country_eql: [Filter Group by country using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_eql: List[str]
        :param filter_country_not_eql: [Filter Group by country using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_eql: List[str]
        :param filter_country_prefix: [Filter Group by country using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_prefix: List[str]
        :param filter_country_not_prefix: [Filter Group by country using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_prefix: List[str]
        :param filter_country_suffix: [Filter Group by country using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_suffix: List[str]
        :param filter_country_not_suffix: [Filter Group by country using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_suffix: List[str]
        :param filter_country_match: [Filter Group by country using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_match: List[str]
        :param filter_country_not_match: [Filter Group by country using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_match: List[str]
        :param filter_require_person_add_requests_eq: [Filter Group by require_person_add_requests using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_require_person_add_requests_eq: bool
        :param filter_self_registration_url_eq: [Filter Group by self_registration_url using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_eq: List[str]
        :param filter_self_registration_url_not_eq: [Filter Group by self_registration_url using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_eq: List[str]
        :param filter_self_registration_url_eql: [Filter Group by self_registration_url using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_eql: List[str]
        :param filter_self_registration_url_not_eql: [Filter Group by self_registration_url using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_eql: List[str]
        :param filter_self_registration_url_prefix: [Filter Group by self_registration_url using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_prefix: List[str]
        :param filter_self_registration_url_not_prefix: [Filter Group by self_registration_url using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_prefix: List[str]
        :param filter_self_registration_url_suffix: [Filter Group by self_registration_url using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_suffix: List[str]
        :param filter_self_registration_url_not_suffix: [Filter Group by self_registration_url using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_suffix: List[str]
        :param filter_self_registration_url_match: [Filter Group by self_registration_url using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_match: List[str]
        :param filter_self_registration_url_not_match: [Filter Group by self_registration_url using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_match: List[str]
        :param filter_archived_at_eq: [Filter Group by archived_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_eq: List[datetime]
        :param filter_archived_at_not_eq: [Filter Group by archived_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_not_eq: List[datetime]
        :param filter_archived_at_gt: [Filter Group by archived_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_gt: List[datetime]
        :param filter_archived_at_gte: [Filter Group by archived_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_gte: List[datetime]
        :param filter_archived_at_lt: [Filter Group by archived_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_lt: List[datetime]
        :param filter_archived_at_lte: [Filter Group by archived_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_lte: List[datetime]
        :param filter_created_at_eq: [Filter Group by created_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_eq: List[datetime]
        :param filter_created_at_not_eq: [Filter Group by created_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_not_eq: List[datetime]
        :param filter_created_at_gt: [Filter Group by created_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_gt: List[datetime]
        :param filter_created_at_gte: [Filter Group by created_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_gte: List[datetime]
        :param filter_created_at_lt: [Filter Group by created_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_lt: List[datetime]
        :param filter_created_at_lte: [Filter Group by created_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_lte: List[datetime]
        :param filter_updated_at_eq: [Filter Group by updated_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_eq: List[datetime]
        :param filter_updated_at_not_eq: [Filter Group by updated_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_not_eq: List[datetime]
        :param filter_updated_at_gt: [Filter Group by updated_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_gt: List[datetime]
        :param filter_updated_at_gte: [Filter Group by updated_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_gte: List[datetime]
        :param filter_updated_at_lt: [Filter Group by updated_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_lt: List[datetime]
        :param filter_updated_at_lte: [Filter Group by updated_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_lte: List[datetime]
        :param filter_deleted_at_eq: [Filter Group by deleted_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_eq: List[datetime]
        :param filter_deleted_at_not_eq: [Filter Group by deleted_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_not_eq: List[datetime]
        :param filter_deleted_at_gt: [Filter Group by deleted_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_gt: List[datetime]
        :param filter_deleted_at_gte: [Filter Group by deleted_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_gte: List[datetime]
        :param filter_deleted_at_lt: [Filter Group by deleted_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_lt: List[datetime]
        :param filter_deleted_at_lte: [Filter Group by deleted_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_lte: List[datetime]
        :param filter_with_deleted_eq: [Filter Group by with_deleted using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_with_deleted_eq: bool
        :param filter_with_archived_eq: [Filter Group by with_archived using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_with_archived_eq: bool
        :param fields_people: [Include only specified fields of Person in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_people: List[PeopleReadableAttribute]
        :param fields_phone_numbers: [Include only specified fields of Phone number in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_phone_numbers: List[PhoneNumbersReadableAttribute]
        :param fields_social_accounts: [Include only specified fields of Social account in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_social_accounts: List[SocialAccountsReadableAttribute]
        :param fields_additional_emails: [Include only specified fields of Additional email in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_additional_emails: List[AdditionalEmailsReadableAttribute]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_group_serialize(
            id=id,
            include=include,
            sort=sort,
            fields_groups=fields_groups,
            extra_fields_groups=extra_fields_groups,
            filter_id_eq=filter_id_eq,
            filter_id_not_eq=filter_id_not_eq,
            filter_id_gt=filter_id_gt,
            filter_id_gte=filter_id_gte,
            filter_id_lt=filter_id_lt,
            filter_id_lte=filter_id_lte,
            filter_name_eq=filter_name_eq,
            filter_name_not_eq=filter_name_not_eq,
            filter_name_eql=filter_name_eql,
            filter_name_not_eql=filter_name_not_eql,
            filter_name_prefix=filter_name_prefix,
            filter_name_not_prefix=filter_name_not_prefix,
            filter_name_suffix=filter_name_suffix,
            filter_name_not_suffix=filter_name_not_suffix,
            filter_name_match=filter_name_match,
            filter_name_not_match=filter_name_not_match,
            filter_short_name_eq=filter_short_name_eq,
            filter_short_name_not_eq=filter_short_name_not_eq,
            filter_short_name_eql=filter_short_name_eql,
            filter_short_name_not_eql=filter_short_name_not_eql,
            filter_short_name_prefix=filter_short_name_prefix,
            filter_short_name_not_prefix=filter_short_name_not_prefix,
            filter_short_name_suffix=filter_short_name_suffix,
            filter_short_name_not_suffix=filter_short_name_not_suffix,
            filter_short_name_match=filter_short_name_match,
            filter_short_name_not_match=filter_short_name_not_match,
            filter_display_name_eq=filter_display_name_eq,
            filter_display_name_not_eq=filter_display_name_not_eq,
            filter_display_name_eql=filter_display_name_eql,
            filter_display_name_not_eql=filter_display_name_not_eql,
            filter_display_name_prefix=filter_display_name_prefix,
            filter_display_name_not_prefix=filter_display_name_not_prefix,
            filter_display_name_suffix=filter_display_name_suffix,
            filter_display_name_not_suffix=filter_display_name_not_suffix,
            filter_display_name_match=filter_display_name_match,
            filter_display_name_not_match=filter_display_name_not_match,
            filter_description_eq=filter_description_eq,
            filter_description_not_eq=filter_description_not_eq,
            filter_description_eql=filter_description_eql,
            filter_description_not_eql=filter_description_not_eql,
            filter_description_prefix=filter_description_prefix,
            filter_description_not_prefix=filter_description_not_prefix,
            filter_description_suffix=filter_description_suffix,
            filter_description_not_suffix=filter_description_not_suffix,
            filter_description_match=filter_description_match,
            filter_description_not_match=filter_description_not_match,
            filter_layer_eq=filter_layer_eq,
            filter_parent_id_eq=filter_parent_id_eq,
            filter_parent_id_not_eq=filter_parent_id_not_eq,
            filter_parent_id_gt=filter_parent_id_gt,
            filter_parent_id_gte=filter_parent_id_gte,
            filter_parent_id_lt=filter_parent_id_lt,
            filter_parent_id_lte=filter_parent_id_lte,
            filter_layer_group_id_eq=filter_layer_group_id_eq,
            filter_layer_group_id_not_eq=filter_layer_group_id_not_eq,
            filter_layer_group_id_gt=filter_layer_group_id_gt,
            filter_layer_group_id_gte=filter_layer_group_id_gte,
            filter_layer_group_id_lt=filter_layer_group_id_lt,
            filter_layer_group_id_lte=filter_layer_group_id_lte,
            filter_type_eq=filter_type_eq,
            filter_type_not_eq=filter_type_not_eq,
            filter_type_eql=filter_type_eql,
            filter_type_not_eql=filter_type_not_eql,
            filter_type_prefix=filter_type_prefix,
            filter_type_not_prefix=filter_type_not_prefix,
            filter_type_suffix=filter_type_suffix,
            filter_type_not_suffix=filter_type_not_suffix,
            filter_type_match=filter_type_match,
            filter_type_not_match=filter_type_not_match,
            filter_email_eq=filter_email_eq,
            filter_email_not_eq=filter_email_not_eq,
            filter_email_eql=filter_email_eql,
            filter_email_not_eql=filter_email_not_eql,
            filter_email_prefix=filter_email_prefix,
            filter_email_not_prefix=filter_email_not_prefix,
            filter_email_suffix=filter_email_suffix,
            filter_email_not_suffix=filter_email_not_suffix,
            filter_email_match=filter_email_match,
            filter_email_not_match=filter_email_not_match,
            filter_address_eq=filter_address_eq,
            filter_address_not_eq=filter_address_not_eq,
            filter_address_eql=filter_address_eql,
            filter_address_not_eql=filter_address_not_eql,
            filter_address_prefix=filter_address_prefix,
            filter_address_not_prefix=filter_address_not_prefix,
            filter_address_suffix=filter_address_suffix,
            filter_address_not_suffix=filter_address_not_suffix,
            filter_address_match=filter_address_match,
            filter_address_not_match=filter_address_not_match,
            filter_zip_code_eq=filter_zip_code_eq,
            filter_zip_code_not_eq=filter_zip_code_not_eq,
            filter_zip_code_gt=filter_zip_code_gt,
            filter_zip_code_gte=filter_zip_code_gte,
            filter_zip_code_lt=filter_zip_code_lt,
            filter_zip_code_lte=filter_zip_code_lte,
            filter_town_eq=filter_town_eq,
            filter_town_not_eq=filter_town_not_eq,
            filter_town_eql=filter_town_eql,
            filter_town_not_eql=filter_town_not_eql,
            filter_town_prefix=filter_town_prefix,
            filter_town_not_prefix=filter_town_not_prefix,
            filter_town_suffix=filter_town_suffix,
            filter_town_not_suffix=filter_town_not_suffix,
            filter_town_match=filter_town_match,
            filter_town_not_match=filter_town_not_match,
            filter_country_eq=filter_country_eq,
            filter_country_not_eq=filter_country_not_eq,
            filter_country_eql=filter_country_eql,
            filter_country_not_eql=filter_country_not_eql,
            filter_country_prefix=filter_country_prefix,
            filter_country_not_prefix=filter_country_not_prefix,
            filter_country_suffix=filter_country_suffix,
            filter_country_not_suffix=filter_country_not_suffix,
            filter_country_match=filter_country_match,
            filter_country_not_match=filter_country_not_match,
            filter_require_person_add_requests_eq=filter_require_person_add_requests_eq,
            filter_self_registration_url_eq=filter_self_registration_url_eq,
            filter_self_registration_url_not_eq=filter_self_registration_url_not_eq,
            filter_self_registration_url_eql=filter_self_registration_url_eql,
            filter_self_registration_url_not_eql=filter_self_registration_url_not_eql,
            filter_self_registration_url_prefix=filter_self_registration_url_prefix,
            filter_self_registration_url_not_prefix=filter_self_registration_url_not_prefix,
            filter_self_registration_url_suffix=filter_self_registration_url_suffix,
            filter_self_registration_url_not_suffix=filter_self_registration_url_not_suffix,
            filter_self_registration_url_match=filter_self_registration_url_match,
            filter_self_registration_url_not_match=filter_self_registration_url_not_match,
            filter_archived_at_eq=filter_archived_at_eq,
            filter_archived_at_not_eq=filter_archived_at_not_eq,
            filter_archived_at_gt=filter_archived_at_gt,
            filter_archived_at_gte=filter_archived_at_gte,
            filter_archived_at_lt=filter_archived_at_lt,
            filter_archived_at_lte=filter_archived_at_lte,
            filter_created_at_eq=filter_created_at_eq,
            filter_created_at_not_eq=filter_created_at_not_eq,
            filter_created_at_gt=filter_created_at_gt,
            filter_created_at_gte=filter_created_at_gte,
            filter_created_at_lt=filter_created_at_lt,
            filter_created_at_lte=filter_created_at_lte,
            filter_updated_at_eq=filter_updated_at_eq,
            filter_updated_at_not_eq=filter_updated_at_not_eq,
            filter_updated_at_gt=filter_updated_at_gt,
            filter_updated_at_gte=filter_updated_at_gte,
            filter_updated_at_lt=filter_updated_at_lt,
            filter_updated_at_lte=filter_updated_at_lte,
            filter_deleted_at_eq=filter_deleted_at_eq,
            filter_deleted_at_not_eq=filter_deleted_at_not_eq,
            filter_deleted_at_gt=filter_deleted_at_gt,
            filter_deleted_at_gte=filter_deleted_at_gte,
            filter_deleted_at_lt=filter_deleted_at_lt,
            filter_deleted_at_lte=filter_deleted_at_lte,
            filter_with_deleted_eq=filter_with_deleted_eq,
            filter_with_archived_eq=filter_with_archived_eq,
            fields_people=fields_people,
            fields_phone_numbers=fields_phone_numbers,
            fields_social_accounts=fields_social_accounts,
            fields_additional_emails=fields_additional_emails,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
            _additional_query_params=_additional_query_params,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GroupsSingle",
            '401': "JsonapiFailure",
            '403': "JsonapiFailure",
            '404': "JsonapiFailure",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_group_with_http_info(
        self,
        id: Annotated[StrictStr, Field(description="ID of the resource")],
        include: Annotated[Optional[List[StrictStr]], Field(description="[Include related resources](https://jsonapi.org/format/#fetching-includes)")] = None,
        sort: Annotated[Optional[List[StrictStr]], Field(description="[Sort groups according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)  You should not include both ascending `id` and descending `-id` fields the same time  ")] = None,
        fields_groups: Annotated[Optional[List[GroupsReadableAttribute]], Field(description="[Include only specified fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        extra_fields_groups: Annotated[Optional[List[GroupsExtraAttribute]], Field(description="[Include specified extra fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        filter_id_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by layer using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_require_person_add_requests_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by require_person_add_requests using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_with_deleted_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by with_deleted using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_with_archived_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by with_archived using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        fields_people: Annotated[Optional[List[PeopleReadableAttribute]], Field(description="[Include only specified fields of Person in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        fields_phone_numbers: Annotated[Optional[List[PhoneNumbersReadableAttribute]], Field(description="[Include only specified fields of Phone number in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        fields_social_accounts: Annotated[Optional[List[SocialAccountsReadableAttribute]], Field(description="[Include only specified fields of Social account in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        fields_additional_emails: Annotated[Optional[List[AdditionalEmailsReadableAttribute]], Field(description="[Include only specified fields of Additional email in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
        _additional_query_params: Optional[Dict[StrictStr, Any]] = None,
    ) -> ApiResponse[GroupsSingle]:
        """Fetch Group


        :param id: ID of the resource (required)
        :type id: str
        :param include: [Include related resources](https://jsonapi.org/format/#fetching-includes)
        :type include: List[str]
        :param sort: [Sort groups according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)  You should not include both ascending `id` and descending `-id` fields the same time  
        :type sort: List[str]
        :param fields_groups: [Include only specified fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_groups: List[GroupsReadableAttribute]
        :param extra_fields_groups: [Include specified extra fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type extra_fields_groups: List[GroupsExtraAttribute]
        :param filter_id_eq: [Filter Group by id using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_eq: List[int]
        :param filter_id_not_eq: [Filter Group by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_not_eq: List[int]
        :param filter_id_gt: [Filter Group by id using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_gt: List[int]
        :param filter_id_gte: [Filter Group by id using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_gte: List[int]
        :param filter_id_lt: [Filter Group by id using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_lt: List[int]
        :param filter_id_lte: [Filter Group by id using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_lte: List[int]
        :param filter_name_eq: [Filter Group by name using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_eq: List[str]
        :param filter_name_not_eq: [Filter Group by name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_eq: List[str]
        :param filter_name_eql: [Filter Group by name using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_eql: List[str]
        :param filter_name_not_eql: [Filter Group by name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_eql: List[str]
        :param filter_name_prefix: [Filter Group by name using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_prefix: List[str]
        :param filter_name_not_prefix: [Filter Group by name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_prefix: List[str]
        :param filter_name_suffix: [Filter Group by name using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_suffix: List[str]
        :param filter_name_not_suffix: [Filter Group by name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_suffix: List[str]
        :param filter_name_match: [Filter Group by name using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_match: List[str]
        :param filter_name_not_match: [Filter Group by name using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_match: List[str]
        :param filter_short_name_eq: [Filter Group by short_name using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_eq: List[str]
        :param filter_short_name_not_eq: [Filter Group by short_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_eq: List[str]
        :param filter_short_name_eql: [Filter Group by short_name using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_eql: List[str]
        :param filter_short_name_not_eql: [Filter Group by short_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_eql: List[str]
        :param filter_short_name_prefix: [Filter Group by short_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_prefix: List[str]
        :param filter_short_name_not_prefix: [Filter Group by short_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_prefix: List[str]
        :param filter_short_name_suffix: [Filter Group by short_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_suffix: List[str]
        :param filter_short_name_not_suffix: [Filter Group by short_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_suffix: List[str]
        :param filter_short_name_match: [Filter Group by short_name using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_match: List[str]
        :param filter_short_name_not_match: [Filter Group by short_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_match: List[str]
        :param filter_display_name_eq: [Filter Group by display_name using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_eq: List[str]
        :param filter_display_name_not_eq: [Filter Group by display_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_eq: List[str]
        :param filter_display_name_eql: [Filter Group by display_name using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_eql: List[str]
        :param filter_display_name_not_eql: [Filter Group by display_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_eql: List[str]
        :param filter_display_name_prefix: [Filter Group by display_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_prefix: List[str]
        :param filter_display_name_not_prefix: [Filter Group by display_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_prefix: List[str]
        :param filter_display_name_suffix: [Filter Group by display_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_suffix: List[str]
        :param filter_display_name_not_suffix: [Filter Group by display_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_suffix: List[str]
        :param filter_display_name_match: [Filter Group by display_name using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_match: List[str]
        :param filter_display_name_not_match: [Filter Group by display_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_match: List[str]
        :param filter_description_eq: [Filter Group by description using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_eq: List[str]
        :param filter_description_not_eq: [Filter Group by description using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_eq: List[str]
        :param filter_description_eql: [Filter Group by description using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_eql: List[str]
        :param filter_description_not_eql: [Filter Group by description using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_eql: List[str]
        :param filter_description_prefix: [Filter Group by description using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_prefix: List[str]
        :param filter_description_not_prefix: [Filter Group by description using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_prefix: List[str]
        :param filter_description_suffix: [Filter Group by description using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_suffix: List[str]
        :param filter_description_not_suffix: [Filter Group by description using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_suffix: List[str]
        :param filter_description_match: [Filter Group by description using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_match: List[str]
        :param filter_description_not_match: [Filter Group by description using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_match: List[str]
        :param filter_layer_eq: [Filter Group by layer using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_eq: bool
        :param filter_parent_id_eq: [Filter Group by parent_id using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_eq: List[int]
        :param filter_parent_id_not_eq: [Filter Group by parent_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_not_eq: List[int]
        :param filter_parent_id_gt: [Filter Group by parent_id using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_gt: List[int]
        :param filter_parent_id_gte: [Filter Group by parent_id using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_gte: List[int]
        :param filter_parent_id_lt: [Filter Group by parent_id using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_lt: List[int]
        :param filter_parent_id_lte: [Filter Group by parent_id using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_lte: List[int]
        :param filter_layer_group_id_eq: [Filter Group by layer_group_id using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_eq: List[int]
        :param filter_layer_group_id_not_eq: [Filter Group by layer_group_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_not_eq: List[int]
        :param filter_layer_group_id_gt: [Filter Group by layer_group_id using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_gt: List[int]
        :param filter_layer_group_id_gte: [Filter Group by layer_group_id using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_gte: List[int]
        :param filter_layer_group_id_lt: [Filter Group by layer_group_id using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_lt: List[int]
        :param filter_layer_group_id_lte: [Filter Group by layer_group_id using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_lte: List[int]
        :param filter_type_eq: [Filter Group by type using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_eq: List[str]
        :param filter_type_not_eq: [Filter Group by type using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_eq: List[str]
        :param filter_type_eql: [Filter Group by type using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_eql: List[str]
        :param filter_type_not_eql: [Filter Group by type using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_eql: List[str]
        :param filter_type_prefix: [Filter Group by type using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_prefix: List[str]
        :param filter_type_not_prefix: [Filter Group by type using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_prefix: List[str]
        :param filter_type_suffix: [Filter Group by type using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_suffix: List[str]
        :param filter_type_not_suffix: [Filter Group by type using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_suffix: List[str]
        :param filter_type_match: [Filter Group by type using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_match: List[str]
        :param filter_type_not_match: [Filter Group by type using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_match: List[str]
        :param filter_email_eq: [Filter Group by email using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_eq: List[str]
        :param filter_email_not_eq: [Filter Group by email using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_eq: List[str]
        :param filter_email_eql: [Filter Group by email using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_eql: List[str]
        :param filter_email_not_eql: [Filter Group by email using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_eql: List[str]
        :param filter_email_prefix: [Filter Group by email using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_prefix: List[str]
        :param filter_email_not_prefix: [Filter Group by email using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_prefix: List[str]
        :param filter_email_suffix: [Filter Group by email using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_suffix: List[str]
        :param filter_email_not_suffix: [Filter Group by email using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_suffix: List[str]
        :param filter_email_match: [Filter Group by email using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_match: List[str]
        :param filter_email_not_match: [Filter Group by email using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_match: List[str]
        :param filter_address_eq: [Filter Group by address using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_eq: List[str]
        :param filter_address_not_eq: [Filter Group by address using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_eq: List[str]
        :param filter_address_eql: [Filter Group by address using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_eql: List[str]
        :param filter_address_not_eql: [Filter Group by address using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_eql: List[str]
        :param filter_address_prefix: [Filter Group by address using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_prefix: List[str]
        :param filter_address_not_prefix: [Filter Group by address using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_prefix: List[str]
        :param filter_address_suffix: [Filter Group by address using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_suffix: List[str]
        :param filter_address_not_suffix: [Filter Group by address using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_suffix: List[str]
        :param filter_address_match: [Filter Group by address using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_match: List[str]
        :param filter_address_not_match: [Filter Group by address using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_match: List[str]
        :param filter_zip_code_eq: [Filter Group by zip_code using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_eq: List[int]
        :param filter_zip_code_not_eq: [Filter Group by zip_code using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_not_eq: List[int]
        :param filter_zip_code_gt: [Filter Group by zip_code using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_gt: List[int]
        :param filter_zip_code_gte: [Filter Group by zip_code using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_gte: List[int]
        :param filter_zip_code_lt: [Filter Group by zip_code using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_lt: List[int]
        :param filter_zip_code_lte: [Filter Group by zip_code using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_lte: List[int]
        :param filter_town_eq: [Filter Group by town using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_eq: List[str]
        :param filter_town_not_eq: [Filter Group by town using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_eq: List[str]
        :param filter_town_eql: [Filter Group by town using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_eql: List[str]
        :param filter_town_not_eql: [Filter Group by town using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_eql: List[str]
        :param filter_town_prefix: [Filter Group by town using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_prefix: List[str]
        :param filter_town_not_prefix: [Filter Group by town using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_prefix: List[str]
        :param filter_town_suffix: [Filter Group by town using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_suffix: List[str]
        :param filter_town_not_suffix: [Filter Group by town using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_suffix: List[str]
        :param filter_town_match: [Filter Group by town using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_match: List[str]
        :param filter_town_not_match: [Filter Group by town using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_match: List[str]
        :param filter_country_eq: [Filter Group by country using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_eq: List[str]
        :param filter_country_not_eq: [Filter Group by country using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_eq: List[str]
        :param filter_country_eql: [Filter Group by country using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_eql: List[str]
        :param filter_country_not_eql: [Filter Group by country using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_eql: List[str]
        :param filter_country_prefix: [Filter Group by country using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_prefix: List[str]
        :param filter_country_not_prefix: [Filter Group by country using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_prefix: List[str]
        :param filter_country_suffix: [Filter Group by country using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_suffix: List[str]
        :param filter_country_not_suffix: [Filter Group by country using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_suffix: List[str]
        :param filter_country_match: [Filter Group by country using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_match: List[str]
        :param filter_country_not_match: [Filter Group by country using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_match: List[str]
        :param filter_require_person_add_requests_eq: [Filter Group by require_person_add_requests using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_require_person_add_requests_eq: bool
        :param filter_self_registration_url_eq: [Filter Group by self_registration_url using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_eq: List[str]
        :param filter_self_registration_url_not_eq: [Filter Group by self_registration_url using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_eq: List[str]
        :param filter_self_registration_url_eql: [Filter Group by self_registration_url using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_eql: List[str]
        :param filter_self_registration_url_not_eql: [Filter Group by self_registration_url using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_eql: List[str]
        :param filter_self_registration_url_prefix: [Filter Group by self_registration_url using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_prefix: List[str]
        :param filter_self_registration_url_not_prefix: [Filter Group by self_registration_url using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_prefix: List[str]
        :param filter_self_registration_url_suffix: [Filter Group by self_registration_url using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_suffix: List[str]
        :param filter_self_registration_url_not_suffix: [Filter Group by self_registration_url using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_suffix: List[str]
        :param filter_self_registration_url_match: [Filter Group by self_registration_url using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_match: List[str]
        :param filter_self_registration_url_not_match: [Filter Group by self_registration_url using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_match: List[str]
        :param filter_archived_at_eq: [Filter Group by archived_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_eq: List[datetime]
        :param filter_archived_at_not_eq: [Filter Group by archived_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_not_eq: List[datetime]
        :param filter_archived_at_gt: [Filter Group by archived_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_gt: List[datetime]
        :param filter_archived_at_gte: [Filter Group by archived_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_gte: List[datetime]
        :param filter_archived_at_lt: [Filter Group by archived_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_lt: List[datetime]
        :param filter_archived_at_lte: [Filter Group by archived_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_lte: List[datetime]
        :param filter_created_at_eq: [Filter Group by created_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_eq: List[datetime]
        :param filter_created_at_not_eq: [Filter Group by created_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_not_eq: List[datetime]
        :param filter_created_at_gt: [Filter Group by created_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_gt: List[datetime]
        :param filter_created_at_gte: [Filter Group by created_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_gte: List[datetime]
        :param filter_created_at_lt: [Filter Group by created_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_lt: List[datetime]
        :param filter_created_at_lte: [Filter Group by created_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_lte: List[datetime]
        :param filter_updated_at_eq: [Filter Group by updated_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_eq: List[datetime]
        :param filter_updated_at_not_eq: [Filter Group by updated_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_not_eq: List[datetime]
        :param filter_updated_at_gt: [Filter Group by updated_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_gt: List[datetime]
        :param filter_updated_at_gte: [Filter Group by updated_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_gte: List[datetime]
        :param filter_updated_at_lt: [Filter Group by updated_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_lt: List[datetime]
        :param filter_updated_at_lte: [Filter Group by updated_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_lte: List[datetime]
        :param filter_deleted_at_eq: [Filter Group by deleted_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_eq: List[datetime]
        :param filter_deleted_at_not_eq: [Filter Group by deleted_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_not_eq: List[datetime]
        :param filter_deleted_at_gt: [Filter Group by deleted_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_gt: List[datetime]
        :param filter_deleted_at_gte: [Filter Group by deleted_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_gte: List[datetime]
        :param filter_deleted_at_lt: [Filter Group by deleted_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_lt: List[datetime]
        :param filter_deleted_at_lte: [Filter Group by deleted_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_lte: List[datetime]
        :param filter_with_deleted_eq: [Filter Group by with_deleted using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_with_deleted_eq: bool
        :param filter_with_archived_eq: [Filter Group by with_archived using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_with_archived_eq: bool
        :param fields_people: [Include only specified fields of Person in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_people: List[PeopleReadableAttribute]
        :param fields_phone_numbers: [Include only specified fields of Phone number in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_phone_numbers: List[PhoneNumbersReadableAttribute]
        :param fields_social_accounts: [Include only specified fields of Social account in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_social_accounts: List[SocialAccountsReadableAttribute]
        :param fields_additional_emails: [Include only specified fields of Additional email in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_additional_emails: List[AdditionalEmailsReadableAttribute]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_group_serialize(
            id=id,
            include=include,
            sort=sort,
            fields_groups=fields_groups,
            extra_fields_groups=extra_fields_groups,
            filter_id_eq=filter_id_eq,
            filter_id_not_eq=filter_id_not_eq,
            filter_id_gt=filter_id_gt,
            filter_id_gte=filter_id_gte,
            filter_id_lt=filter_id_lt,
            filter_id_lte=filter_id_lte,
            filter_name_eq=filter_name_eq,
            filter_name_not_eq=filter_name_not_eq,
            filter_name_eql=filter_name_eql,
            filter_name_not_eql=filter_name_not_eql,
            filter_name_prefix=filter_name_prefix,
            filter_name_not_prefix=filter_name_not_prefix,
            filter_name_suffix=filter_name_suffix,
            filter_name_not_suffix=filter_name_not_suffix,
            filter_name_match=filter_name_match,
            filter_name_not_match=filter_name_not_match,
            filter_short_name_eq=filter_short_name_eq,
            filter_short_name_not_eq=filter_short_name_not_eq,
            filter_short_name_eql=filter_short_name_eql,
            filter_short_name_not_eql=filter_short_name_not_eql,
            filter_short_name_prefix=filter_short_name_prefix,
            filter_short_name_not_prefix=filter_short_name_not_prefix,
            filter_short_name_suffix=filter_short_name_suffix,
            filter_short_name_not_suffix=filter_short_name_not_suffix,
            filter_short_name_match=filter_short_name_match,
            filter_short_name_not_match=filter_short_name_not_match,
            filter_display_name_eq=filter_display_name_eq,
            filter_display_name_not_eq=filter_display_name_not_eq,
            filter_display_name_eql=filter_display_name_eql,
            filter_display_name_not_eql=filter_display_name_not_eql,
            filter_display_name_prefix=filter_display_name_prefix,
            filter_display_name_not_prefix=filter_display_name_not_prefix,
            filter_display_name_suffix=filter_display_name_suffix,
            filter_display_name_not_suffix=filter_display_name_not_suffix,
            filter_display_name_match=filter_display_name_match,
            filter_display_name_not_match=filter_display_name_not_match,
            filter_description_eq=filter_description_eq,
            filter_description_not_eq=filter_description_not_eq,
            filter_description_eql=filter_description_eql,
            filter_description_not_eql=filter_description_not_eql,
            filter_description_prefix=filter_description_prefix,
            filter_description_not_prefix=filter_description_not_prefix,
            filter_description_suffix=filter_description_suffix,
            filter_description_not_suffix=filter_description_not_suffix,
            filter_description_match=filter_description_match,
            filter_description_not_match=filter_description_not_match,
            filter_layer_eq=filter_layer_eq,
            filter_parent_id_eq=filter_parent_id_eq,
            filter_parent_id_not_eq=filter_parent_id_not_eq,
            filter_parent_id_gt=filter_parent_id_gt,
            filter_parent_id_gte=filter_parent_id_gte,
            filter_parent_id_lt=filter_parent_id_lt,
            filter_parent_id_lte=filter_parent_id_lte,
            filter_layer_group_id_eq=filter_layer_group_id_eq,
            filter_layer_group_id_not_eq=filter_layer_group_id_not_eq,
            filter_layer_group_id_gt=filter_layer_group_id_gt,
            filter_layer_group_id_gte=filter_layer_group_id_gte,
            filter_layer_group_id_lt=filter_layer_group_id_lt,
            filter_layer_group_id_lte=filter_layer_group_id_lte,
            filter_type_eq=filter_type_eq,
            filter_type_not_eq=filter_type_not_eq,
            filter_type_eql=filter_type_eql,
            filter_type_not_eql=filter_type_not_eql,
            filter_type_prefix=filter_type_prefix,
            filter_type_not_prefix=filter_type_not_prefix,
            filter_type_suffix=filter_type_suffix,
            filter_type_not_suffix=filter_type_not_suffix,
            filter_type_match=filter_type_match,
            filter_type_not_match=filter_type_not_match,
            filter_email_eq=filter_email_eq,
            filter_email_not_eq=filter_email_not_eq,
            filter_email_eql=filter_email_eql,
            filter_email_not_eql=filter_email_not_eql,
            filter_email_prefix=filter_email_prefix,
            filter_email_not_prefix=filter_email_not_prefix,
            filter_email_suffix=filter_email_suffix,
            filter_email_not_suffix=filter_email_not_suffix,
            filter_email_match=filter_email_match,
            filter_email_not_match=filter_email_not_match,
            filter_address_eq=filter_address_eq,
            filter_address_not_eq=filter_address_not_eq,
            filter_address_eql=filter_address_eql,
            filter_address_not_eql=filter_address_not_eql,
            filter_address_prefix=filter_address_prefix,
            filter_address_not_prefix=filter_address_not_prefix,
            filter_address_suffix=filter_address_suffix,
            filter_address_not_suffix=filter_address_not_suffix,
            filter_address_match=filter_address_match,
            filter_address_not_match=filter_address_not_match,
            filter_zip_code_eq=filter_zip_code_eq,
            filter_zip_code_not_eq=filter_zip_code_not_eq,
            filter_zip_code_gt=filter_zip_code_gt,
            filter_zip_code_gte=filter_zip_code_gte,
            filter_zip_code_lt=filter_zip_code_lt,
            filter_zip_code_lte=filter_zip_code_lte,
            filter_town_eq=filter_town_eq,
            filter_town_not_eq=filter_town_not_eq,
            filter_town_eql=filter_town_eql,
            filter_town_not_eql=filter_town_not_eql,
            filter_town_prefix=filter_town_prefix,
            filter_town_not_prefix=filter_town_not_prefix,
            filter_town_suffix=filter_town_suffix,
            filter_town_not_suffix=filter_town_not_suffix,
            filter_town_match=filter_town_match,
            filter_town_not_match=filter_town_not_match,
            filter_country_eq=filter_country_eq,
            filter_country_not_eq=filter_country_not_eq,
            filter_country_eql=filter_country_eql,
            filter_country_not_eql=filter_country_not_eql,
            filter_country_prefix=filter_country_prefix,
            filter_country_not_prefix=filter_country_not_prefix,
            filter_country_suffix=filter_country_suffix,
            filter_country_not_suffix=filter_country_not_suffix,
            filter_country_match=filter_country_match,
            filter_country_not_match=filter_country_not_match,
            filter_require_person_add_requests_eq=filter_require_person_add_requests_eq,
            filter_self_registration_url_eq=filter_self_registration_url_eq,
            filter_self_registration_url_not_eq=filter_self_registration_url_not_eq,
            filter_self_registration_url_eql=filter_self_registration_url_eql,
            filter_self_registration_url_not_eql=filter_self_registration_url_not_eql,
            filter_self_registration_url_prefix=filter_self_registration_url_prefix,
            filter_self_registration_url_not_prefix=filter_self_registration_url_not_prefix,
            filter_self_registration_url_suffix=filter_self_registration_url_suffix,
            filter_self_registration_url_not_suffix=filter_self_registration_url_not_suffix,
            filter_self_registration_url_match=filter_self_registration_url_match,
            filter_self_registration_url_not_match=filter_self_registration_url_not_match,
            filter_archived_at_eq=filter_archived_at_eq,
            filter_archived_at_not_eq=filter_archived_at_not_eq,
            filter_archived_at_gt=filter_archived_at_gt,
            filter_archived_at_gte=filter_archived_at_gte,
            filter_archived_at_lt=filter_archived_at_lt,
            filter_archived_at_lte=filter_archived_at_lte,
            filter_created_at_eq=filter_created_at_eq,
            filter_created_at_not_eq=filter_created_at_not_eq,
            filter_created_at_gt=filter_created_at_gt,
            filter_created_at_gte=filter_created_at_gte,
            filter_created_at_lt=filter_created_at_lt,
            filter_created_at_lte=filter_created_at_lte,
            filter_updated_at_eq=filter_updated_at_eq,
            filter_updated_at_not_eq=filter_updated_at_not_eq,
            filter_updated_at_gt=filter_updated_at_gt,
            filter_updated_at_gte=filter_updated_at_gte,
            filter_updated_at_lt=filter_updated_at_lt,
            filter_updated_at_lte=filter_updated_at_lte,
            filter_deleted_at_eq=filter_deleted_at_eq,
            filter_deleted_at_not_eq=filter_deleted_at_not_eq,
            filter_deleted_at_gt=filter_deleted_at_gt,
            filter_deleted_at_gte=filter_deleted_at_gte,
            filter_deleted_at_lt=filter_deleted_at_lt,
            filter_deleted_at_lte=filter_deleted_at_lte,
            filter_with_deleted_eq=filter_with_deleted_eq,
            filter_with_archived_eq=filter_with_archived_eq,
            fields_people=fields_people,
            fields_phone_numbers=fields_phone_numbers,
            fields_social_accounts=fields_social_accounts,
            fields_additional_emails=fields_additional_emails,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
            _additional_query_params=_additional_query_params,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GroupsSingle",
            '401': "JsonapiFailure",
            '403': "JsonapiFailure",
            '404': "JsonapiFailure",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_group_without_preload_content(
        self,
        id: Annotated[StrictStr, Field(description="ID of the resource")],
        include: Annotated[Optional[List[StrictStr]], Field(description="[Include related resources](https://jsonapi.org/format/#fetching-includes)")] = None,
        sort: Annotated[Optional[List[StrictStr]], Field(description="[Sort groups according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)  You should not include both ascending `id` and descending `-id` fields the same time  ")] = None,
        fields_groups: Annotated[Optional[List[GroupsReadableAttribute]], Field(description="[Include only specified fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        extra_fields_groups: Annotated[Optional[List[GroupsExtraAttribute]], Field(description="[Include specified extra fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        filter_id_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by layer using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_require_person_add_requests_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by require_person_add_requests using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_with_deleted_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by with_deleted using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_with_archived_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by with_archived using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        fields_people: Annotated[Optional[List[PeopleReadableAttribute]], Field(description="[Include only specified fields of Person in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        fields_phone_numbers: Annotated[Optional[List[PhoneNumbersReadableAttribute]], Field(description="[Include only specified fields of Phone number in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        fields_social_accounts: Annotated[Optional[List[SocialAccountsReadableAttribute]], Field(description="[Include only specified fields of Social account in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        fields_additional_emails: Annotated[Optional[List[AdditionalEmailsReadableAttribute]], Field(description="[Include only specified fields of Additional email in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
        _additional_query_params: Optional[Dict[StrictStr, Any]] = None,
    ) -> RESTResponseType:
        """Fetch Group


        :param id: ID of the resource (required)
        :type id: str
        :param include: [Include related resources](https://jsonapi.org/format/#fetching-includes)
        :type include: List[str]
        :param sort: [Sort groups according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)  You should not include both ascending `id` and descending `-id` fields the same time  
        :type sort: List[str]
        :param fields_groups: [Include only specified fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_groups: List[GroupsReadableAttribute]
        :param extra_fields_groups: [Include specified extra fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type extra_fields_groups: List[GroupsExtraAttribute]
        :param filter_id_eq: [Filter Group by id using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_eq: List[int]
        :param filter_id_not_eq: [Filter Group by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_not_eq: List[int]
        :param filter_id_gt: [Filter Group by id using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_gt: List[int]
        :param filter_id_gte: [Filter Group by id using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_gte: List[int]
        :param filter_id_lt: [Filter Group by id using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_lt: List[int]
        :param filter_id_lte: [Filter Group by id using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_lte: List[int]
        :param filter_name_eq: [Filter Group by name using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_eq: List[str]
        :param filter_name_not_eq: [Filter Group by name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_eq: List[str]
        :param filter_name_eql: [Filter Group by name using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_eql: List[str]
        :param filter_name_not_eql: [Filter Group by name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_eql: List[str]
        :param filter_name_prefix: [Filter Group by name using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_prefix: List[str]
        :param filter_name_not_prefix: [Filter Group by name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_prefix: List[str]
        :param filter_name_suffix: [Filter Group by name using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_suffix: List[str]
        :param filter_name_not_suffix: [Filter Group by name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_suffix: List[str]
        :param filter_name_match: [Filter Group by name using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_match: List[str]
        :param filter_name_not_match: [Filter Group by name using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_match: List[str]
        :param filter_short_name_eq: [Filter Group by short_name using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_eq: List[str]
        :param filter_short_name_not_eq: [Filter Group by short_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_eq: List[str]
        :param filter_short_name_eql: [Filter Group by short_name using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_eql: List[str]
        :param filter_short_name_not_eql: [Filter Group by short_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_eql: List[str]
        :param filter_short_name_prefix: [Filter Group by short_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_prefix: List[str]
        :param filter_short_name_not_prefix: [Filter Group by short_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_prefix: List[str]
        :param filter_short_name_suffix: [Filter Group by short_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_suffix: List[str]
        :param filter_short_name_not_suffix: [Filter Group by short_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_suffix: List[str]
        :param filter_short_name_match: [Filter Group by short_name using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_match: List[str]
        :param filter_short_name_not_match: [Filter Group by short_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_match: List[str]
        :param filter_display_name_eq: [Filter Group by display_name using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_eq: List[str]
        :param filter_display_name_not_eq: [Filter Group by display_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_eq: List[str]
        :param filter_display_name_eql: [Filter Group by display_name using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_eql: List[str]
        :param filter_display_name_not_eql: [Filter Group by display_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_eql: List[str]
        :param filter_display_name_prefix: [Filter Group by display_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_prefix: List[str]
        :param filter_display_name_not_prefix: [Filter Group by display_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_prefix: List[str]
        :param filter_display_name_suffix: [Filter Group by display_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_suffix: List[str]
        :param filter_display_name_not_suffix: [Filter Group by display_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_suffix: List[str]
        :param filter_display_name_match: [Filter Group by display_name using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_match: List[str]
        :param filter_display_name_not_match: [Filter Group by display_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_match: List[str]
        :param filter_description_eq: [Filter Group by description using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_eq: List[str]
        :param filter_description_not_eq: [Filter Group by description using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_eq: List[str]
        :param filter_description_eql: [Filter Group by description using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_eql: List[str]
        :param filter_description_not_eql: [Filter Group by description using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_eql: List[str]
        :param filter_description_prefix: [Filter Group by description using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_prefix: List[str]
        :param filter_description_not_prefix: [Filter Group by description using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_prefix: List[str]
        :param filter_description_suffix: [Filter Group by description using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_suffix: List[str]
        :param filter_description_not_suffix: [Filter Group by description using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_suffix: List[str]
        :param filter_description_match: [Filter Group by description using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_match: List[str]
        :param filter_description_not_match: [Filter Group by description using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_match: List[str]
        :param filter_layer_eq: [Filter Group by layer using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_eq: bool
        :param filter_parent_id_eq: [Filter Group by parent_id using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_eq: List[int]
        :param filter_parent_id_not_eq: [Filter Group by parent_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_not_eq: List[int]
        :param filter_parent_id_gt: [Filter Group by parent_id using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_gt: List[int]
        :param filter_parent_id_gte: [Filter Group by parent_id using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_gte: List[int]
        :param filter_parent_id_lt: [Filter Group by parent_id using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_lt: List[int]
        :param filter_parent_id_lte: [Filter Group by parent_id using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_lte: List[int]
        :param filter_layer_group_id_eq: [Filter Group by layer_group_id using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_eq: List[int]
        :param filter_layer_group_id_not_eq: [Filter Group by layer_group_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_not_eq: List[int]
        :param filter_layer_group_id_gt: [Filter Group by layer_group_id using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_gt: List[int]
        :param filter_layer_group_id_gte: [Filter Group by layer_group_id using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_gte: List[int]
        :param filter_layer_group_id_lt: [Filter Group by layer_group_id using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_lt: List[int]
        :param filter_layer_group_id_lte: [Filter Group by layer_group_id using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_lte: List[int]
        :param filter_type_eq: [Filter Group by type using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_eq: List[str]
        :param filter_type_not_eq: [Filter Group by type using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_eq: List[str]
        :param filter_type_eql: [Filter Group by type using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_eql: List[str]
        :param filter_type_not_eql: [Filter Group by type using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_eql: List[str]
        :param filter_type_prefix: [Filter Group by type using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_prefix: List[str]
        :param filter_type_not_prefix: [Filter Group by type using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_prefix: List[str]
        :param filter_type_suffix: [Filter Group by type using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_suffix: List[str]
        :param filter_type_not_suffix: [Filter Group by type using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_suffix: List[str]
        :param filter_type_match: [Filter Group by type using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_match: List[str]
        :param filter_type_not_match: [Filter Group by type using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_match: List[str]
        :param filter_email_eq: [Filter Group by email using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_eq: List[str]
        :param filter_email_not_eq: [Filter Group by email using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_eq: List[str]
        :param filter_email_eql: [Filter Group by email using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_eql: List[str]
        :param filter_email_not_eql: [Filter Group by email using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_eql: List[str]
        :param filter_email_prefix: [Filter Group by email using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_prefix: List[str]
        :param filter_email_not_prefix: [Filter Group by email using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_prefix: List[str]
        :param filter_email_suffix: [Filter Group by email using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_suffix: List[str]
        :param filter_email_not_suffix: [Filter Group by email using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_suffix: List[str]
        :param filter_email_match: [Filter Group by email using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_match: List[str]
        :param filter_email_not_match: [Filter Group by email using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_match: List[str]
        :param filter_address_eq: [Filter Group by address using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_eq: List[str]
        :param filter_address_not_eq: [Filter Group by address using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_eq: List[str]
        :param filter_address_eql: [Filter Group by address using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_eql: List[str]
        :param filter_address_not_eql: [Filter Group by address using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_eql: List[str]
        :param filter_address_prefix: [Filter Group by address using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_prefix: List[str]
        :param filter_address_not_prefix: [Filter Group by address using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_prefix: List[str]
        :param filter_address_suffix: [Filter Group by address using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_suffix: List[str]
        :param filter_address_not_suffix: [Filter Group by address using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_suffix: List[str]
        :param filter_address_match: [Filter Group by address using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_match: List[str]
        :param filter_address_not_match: [Filter Group by address using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_match: List[str]
        :param filter_zip_code_eq: [Filter Group by zip_code using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_eq: List[int]
        :param filter_zip_code_not_eq: [Filter Group by zip_code using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_not_eq: List[int]
        :param filter_zip_code_gt: [Filter Group by zip_code using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_gt: List[int]
        :param filter_zip_code_gte: [Filter Group by zip_code using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_gte: List[int]
        :param filter_zip_code_lt: [Filter Group by zip_code using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_lt: List[int]
        :param filter_zip_code_lte: [Filter Group by zip_code using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_lte: List[int]
        :param filter_town_eq: [Filter Group by town using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_eq: List[str]
        :param filter_town_not_eq: [Filter Group by town using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_eq: List[str]
        :param filter_town_eql: [Filter Group by town using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_eql: List[str]
        :param filter_town_not_eql: [Filter Group by town using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_eql: List[str]
        :param filter_town_prefix: [Filter Group by town using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_prefix: List[str]
        :param filter_town_not_prefix: [Filter Group by town using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_prefix: List[str]
        :param filter_town_suffix: [Filter Group by town using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_suffix: List[str]
        :param filter_town_not_suffix: [Filter Group by town using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_suffix: List[str]
        :param filter_town_match: [Filter Group by town using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_match: List[str]
        :param filter_town_not_match: [Filter Group by town using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_match: List[str]
        :param filter_country_eq: [Filter Group by country using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_eq: List[str]
        :param filter_country_not_eq: [Filter Group by country using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_eq: List[str]
        :param filter_country_eql: [Filter Group by country using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_eql: List[str]
        :param filter_country_not_eql: [Filter Group by country using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_eql: List[str]
        :param filter_country_prefix: [Filter Group by country using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_prefix: List[str]
        :param filter_country_not_prefix: [Filter Group by country using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_prefix: List[str]
        :param filter_country_suffix: [Filter Group by country using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_suffix: List[str]
        :param filter_country_not_suffix: [Filter Group by country using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_suffix: List[str]
        :param filter_country_match: [Filter Group by country using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_match: List[str]
        :param filter_country_not_match: [Filter Group by country using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_match: List[str]
        :param filter_require_person_add_requests_eq: [Filter Group by require_person_add_requests using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_require_person_add_requests_eq: bool
        :param filter_self_registration_url_eq: [Filter Group by self_registration_url using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_eq: List[str]
        :param filter_self_registration_url_not_eq: [Filter Group by self_registration_url using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_eq: List[str]
        :param filter_self_registration_url_eql: [Filter Group by self_registration_url using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_eql: List[str]
        :param filter_self_registration_url_not_eql: [Filter Group by self_registration_url using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_eql: List[str]
        :param filter_self_registration_url_prefix: [Filter Group by self_registration_url using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_prefix: List[str]
        :param filter_self_registration_url_not_prefix: [Filter Group by self_registration_url using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_prefix: List[str]
        :param filter_self_registration_url_suffix: [Filter Group by self_registration_url using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_suffix: List[str]
        :param filter_self_registration_url_not_suffix: [Filter Group by self_registration_url using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_suffix: List[str]
        :param filter_self_registration_url_match: [Filter Group by self_registration_url using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_match: List[str]
        :param filter_self_registration_url_not_match: [Filter Group by self_registration_url using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_match: List[str]
        :param filter_archived_at_eq: [Filter Group by archived_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_eq: List[datetime]
        :param filter_archived_at_not_eq: [Filter Group by archived_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_not_eq: List[datetime]
        :param filter_archived_at_gt: [Filter Group by archived_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_gt: List[datetime]
        :param filter_archived_at_gte: [Filter Group by archived_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_gte: List[datetime]
        :param filter_archived_at_lt: [Filter Group by archived_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_lt: List[datetime]
        :param filter_archived_at_lte: [Filter Group by archived_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_lte: List[datetime]
        :param filter_created_at_eq: [Filter Group by created_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_eq: List[datetime]
        :param filter_created_at_not_eq: [Filter Group by created_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_not_eq: List[datetime]
        :param filter_created_at_gt: [Filter Group by created_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_gt: List[datetime]
        :param filter_created_at_gte: [Filter Group by created_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_gte: List[datetime]
        :param filter_created_at_lt: [Filter Group by created_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_lt: List[datetime]
        :param filter_created_at_lte: [Filter Group by created_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_lte: List[datetime]
        :param filter_updated_at_eq: [Filter Group by updated_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_eq: List[datetime]
        :param filter_updated_at_not_eq: [Filter Group by updated_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_not_eq: List[datetime]
        :param filter_updated_at_gt: [Filter Group by updated_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_gt: List[datetime]
        :param filter_updated_at_gte: [Filter Group by updated_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_gte: List[datetime]
        :param filter_updated_at_lt: [Filter Group by updated_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_lt: List[datetime]
        :param filter_updated_at_lte: [Filter Group by updated_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_lte: List[datetime]
        :param filter_deleted_at_eq: [Filter Group by deleted_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_eq: List[datetime]
        :param filter_deleted_at_not_eq: [Filter Group by deleted_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_not_eq: List[datetime]
        :param filter_deleted_at_gt: [Filter Group by deleted_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_gt: List[datetime]
        :param filter_deleted_at_gte: [Filter Group by deleted_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_gte: List[datetime]
        :param filter_deleted_at_lt: [Filter Group by deleted_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_lt: List[datetime]
        :param filter_deleted_at_lte: [Filter Group by deleted_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_lte: List[datetime]
        :param filter_with_deleted_eq: [Filter Group by with_deleted using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_with_deleted_eq: bool
        :param filter_with_archived_eq: [Filter Group by with_archived using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_with_archived_eq: bool
        :param fields_people: [Include only specified fields of Person in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_people: List[PeopleReadableAttribute]
        :param fields_phone_numbers: [Include only specified fields of Phone number in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_phone_numbers: List[PhoneNumbersReadableAttribute]
        :param fields_social_accounts: [Include only specified fields of Social account in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_social_accounts: List[SocialAccountsReadableAttribute]
        :param fields_additional_emails: [Include only specified fields of Additional email in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_additional_emails: List[AdditionalEmailsReadableAttribute]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_group_serialize(
            id=id,
            include=include,
            sort=sort,
            fields_groups=fields_groups,
            extra_fields_groups=extra_fields_groups,
            filter_id_eq=filter_id_eq,
            filter_id_not_eq=filter_id_not_eq,
            filter_id_gt=filter_id_gt,
            filter_id_gte=filter_id_gte,
            filter_id_lt=filter_id_lt,
            filter_id_lte=filter_id_lte,
            filter_name_eq=filter_name_eq,
            filter_name_not_eq=filter_name_not_eq,
            filter_name_eql=filter_name_eql,
            filter_name_not_eql=filter_name_not_eql,
            filter_name_prefix=filter_name_prefix,
            filter_name_not_prefix=filter_name_not_prefix,
            filter_name_suffix=filter_name_suffix,
            filter_name_not_suffix=filter_name_not_suffix,
            filter_name_match=filter_name_match,
            filter_name_not_match=filter_name_not_match,
            filter_short_name_eq=filter_short_name_eq,
            filter_short_name_not_eq=filter_short_name_not_eq,
            filter_short_name_eql=filter_short_name_eql,
            filter_short_name_not_eql=filter_short_name_not_eql,
            filter_short_name_prefix=filter_short_name_prefix,
            filter_short_name_not_prefix=filter_short_name_not_prefix,
            filter_short_name_suffix=filter_short_name_suffix,
            filter_short_name_not_suffix=filter_short_name_not_suffix,
            filter_short_name_match=filter_short_name_match,
            filter_short_name_not_match=filter_short_name_not_match,
            filter_display_name_eq=filter_display_name_eq,
            filter_display_name_not_eq=filter_display_name_not_eq,
            filter_display_name_eql=filter_display_name_eql,
            filter_display_name_not_eql=filter_display_name_not_eql,
            filter_display_name_prefix=filter_display_name_prefix,
            filter_display_name_not_prefix=filter_display_name_not_prefix,
            filter_display_name_suffix=filter_display_name_suffix,
            filter_display_name_not_suffix=filter_display_name_not_suffix,
            filter_display_name_match=filter_display_name_match,
            filter_display_name_not_match=filter_display_name_not_match,
            filter_description_eq=filter_description_eq,
            filter_description_not_eq=filter_description_not_eq,
            filter_description_eql=filter_description_eql,
            filter_description_not_eql=filter_description_not_eql,
            filter_description_prefix=filter_description_prefix,
            filter_description_not_prefix=filter_description_not_prefix,
            filter_description_suffix=filter_description_suffix,
            filter_description_not_suffix=filter_description_not_suffix,
            filter_description_match=filter_description_match,
            filter_description_not_match=filter_description_not_match,
            filter_layer_eq=filter_layer_eq,
            filter_parent_id_eq=filter_parent_id_eq,
            filter_parent_id_not_eq=filter_parent_id_not_eq,
            filter_parent_id_gt=filter_parent_id_gt,
            filter_parent_id_gte=filter_parent_id_gte,
            filter_parent_id_lt=filter_parent_id_lt,
            filter_parent_id_lte=filter_parent_id_lte,
            filter_layer_group_id_eq=filter_layer_group_id_eq,
            filter_layer_group_id_not_eq=filter_layer_group_id_not_eq,
            filter_layer_group_id_gt=filter_layer_group_id_gt,
            filter_layer_group_id_gte=filter_layer_group_id_gte,
            filter_layer_group_id_lt=filter_layer_group_id_lt,
            filter_layer_group_id_lte=filter_layer_group_id_lte,
            filter_type_eq=filter_type_eq,
            filter_type_not_eq=filter_type_not_eq,
            filter_type_eql=filter_type_eql,
            filter_type_not_eql=filter_type_not_eql,
            filter_type_prefix=filter_type_prefix,
            filter_type_not_prefix=filter_type_not_prefix,
            filter_type_suffix=filter_type_suffix,
            filter_type_not_suffix=filter_type_not_suffix,
            filter_type_match=filter_type_match,
            filter_type_not_match=filter_type_not_match,
            filter_email_eq=filter_email_eq,
            filter_email_not_eq=filter_email_not_eq,
            filter_email_eql=filter_email_eql,
            filter_email_not_eql=filter_email_not_eql,
            filter_email_prefix=filter_email_prefix,
            filter_email_not_prefix=filter_email_not_prefix,
            filter_email_suffix=filter_email_suffix,
            filter_email_not_suffix=filter_email_not_suffix,
            filter_email_match=filter_email_match,
            filter_email_not_match=filter_email_not_match,
            filter_address_eq=filter_address_eq,
            filter_address_not_eq=filter_address_not_eq,
            filter_address_eql=filter_address_eql,
            filter_address_not_eql=filter_address_not_eql,
            filter_address_prefix=filter_address_prefix,
            filter_address_not_prefix=filter_address_not_prefix,
            filter_address_suffix=filter_address_suffix,
            filter_address_not_suffix=filter_address_not_suffix,
            filter_address_match=filter_address_match,
            filter_address_not_match=filter_address_not_match,
            filter_zip_code_eq=filter_zip_code_eq,
            filter_zip_code_not_eq=filter_zip_code_not_eq,
            filter_zip_code_gt=filter_zip_code_gt,
            filter_zip_code_gte=filter_zip_code_gte,
            filter_zip_code_lt=filter_zip_code_lt,
            filter_zip_code_lte=filter_zip_code_lte,
            filter_town_eq=filter_town_eq,
            filter_town_not_eq=filter_town_not_eq,
            filter_town_eql=filter_town_eql,
            filter_town_not_eql=filter_town_not_eql,
            filter_town_prefix=filter_town_prefix,
            filter_town_not_prefix=filter_town_not_prefix,
            filter_town_suffix=filter_town_suffix,
            filter_town_not_suffix=filter_town_not_suffix,
            filter_town_match=filter_town_match,
            filter_town_not_match=filter_town_not_match,
            filter_country_eq=filter_country_eq,
            filter_country_not_eq=filter_country_not_eq,
            filter_country_eql=filter_country_eql,
            filter_country_not_eql=filter_country_not_eql,
            filter_country_prefix=filter_country_prefix,
            filter_country_not_prefix=filter_country_not_prefix,
            filter_country_suffix=filter_country_suffix,
            filter_country_not_suffix=filter_country_not_suffix,
            filter_country_match=filter_country_match,
            filter_country_not_match=filter_country_not_match,
            filter_require_person_add_requests_eq=filter_require_person_add_requests_eq,
            filter_self_registration_url_eq=filter_self_registration_url_eq,
            filter_self_registration_url_not_eq=filter_self_registration_url_not_eq,
            filter_self_registration_url_eql=filter_self_registration_url_eql,
            filter_self_registration_url_not_eql=filter_self_registration_url_not_eql,
            filter_self_registration_url_prefix=filter_self_registration_url_prefix,
            filter_self_registration_url_not_prefix=filter_self_registration_url_not_prefix,
            filter_self_registration_url_suffix=filter_self_registration_url_suffix,
            filter_self_registration_url_not_suffix=filter_self_registration_url_not_suffix,
            filter_self_registration_url_match=filter_self_registration_url_match,
            filter_self_registration_url_not_match=filter_self_registration_url_not_match,
            filter_archived_at_eq=filter_archived_at_eq,
            filter_archived_at_not_eq=filter_archived_at_not_eq,
            filter_archived_at_gt=filter_archived_at_gt,
            filter_archived_at_gte=filter_archived_at_gte,
            filter_archived_at_lt=filter_archived_at_lt,
            filter_archived_at_lte=filter_archived_at_lte,
            filter_created_at_eq=filter_created_at_eq,
            filter_created_at_not_eq=filter_created_at_not_eq,
            filter_created_at_gt=filter_created_at_gt,
            filter_created_at_gte=filter_created_at_gte,
            filter_created_at_lt=filter_created_at_lt,
            filter_created_at_lte=filter_created_at_lte,
            filter_updated_at_eq=filter_updated_at_eq,
            filter_updated_at_not_eq=filter_updated_at_not_eq,
            filter_updated_at_gt=filter_updated_at_gt,
            filter_updated_at_gte=filter_updated_at_gte,
            filter_updated_at_lt=filter_updated_at_lt,
            filter_updated_at_lte=filter_updated_at_lte,
            filter_deleted_at_eq=filter_deleted_at_eq,
            filter_deleted_at_not_eq=filter_deleted_at_not_eq,
            filter_deleted_at_gt=filter_deleted_at_gt,
            filter_deleted_at_gte=filter_deleted_at_gte,
            filter_deleted_at_lt=filter_deleted_at_lt,
            filter_deleted_at_lte=filter_deleted_at_lte,
            filter_with_deleted_eq=filter_with_deleted_eq,
            filter_with_archived_eq=filter_with_archived_eq,
            fields_people=fields_people,
            fields_phone_numbers=fields_phone_numbers,
            fields_social_accounts=fields_social_accounts,
            fields_additional_emails=fields_additional_emails,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
            _additional_query_params=_additional_query_params,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GroupsSingle",
            '401': "JsonapiFailure",
            '403': "JsonapiFailure",
            '404': "JsonapiFailure",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_group_serialize(
        self,
        id,
        include,
        sort,
        fields_groups,
        extra_fields_groups,
        filter_id_eq,
        filter_id_not_eq,
        filter_id_gt,
        filter_id_gte,
        filter_id_lt,
        filter_id_lte,
        filter_name_eq,
        filter_name_not_eq,
        filter_name_eql,
        filter_name_not_eql,
        filter_name_prefix,
        filter_name_not_prefix,
        filter_name_suffix,
        filter_name_not_suffix,
        filter_name_match,
        filter_name_not_match,
        filter_short_name_eq,
        filter_short_name_not_eq,
        filter_short_name_eql,
        filter_short_name_not_eql,
        filter_short_name_prefix,
        filter_short_name_not_prefix,
        filter_short_name_suffix,
        filter_short_name_not_suffix,
        filter_short_name_match,
        filter_short_name_not_match,
        filter_display_name_eq,
        filter_display_name_not_eq,
        filter_display_name_eql,
        filter_display_name_not_eql,
        filter_display_name_prefix,
        filter_display_name_not_prefix,
        filter_display_name_suffix,
        filter_display_name_not_suffix,
        filter_display_name_match,
        filter_display_name_not_match,
        filter_description_eq,
        filter_description_not_eq,
        filter_description_eql,
        filter_description_not_eql,
        filter_description_prefix,
        filter_description_not_prefix,
        filter_description_suffix,
        filter_description_not_suffix,
        filter_description_match,
        filter_description_not_match,
        filter_layer_eq,
        filter_parent_id_eq,
        filter_parent_id_not_eq,
        filter_parent_id_gt,
        filter_parent_id_gte,
        filter_parent_id_lt,
        filter_parent_id_lte,
        filter_layer_group_id_eq,
        filter_layer_group_id_not_eq,
        filter_layer_group_id_gt,
        filter_layer_group_id_gte,
        filter_layer_group_id_lt,
        filter_layer_group_id_lte,
        filter_type_eq,
        filter_type_not_eq,
        filter_type_eql,
        filter_type_not_eql,
        filter_type_prefix,
        filter_type_not_prefix,
        filter_type_suffix,
        filter_type_not_suffix,
        filter_type_match,
        filter_type_not_match,
        filter_email_eq,
        filter_email_not_eq,
        filter_email_eql,
        filter_email_not_eql,
        filter_email_prefix,
        filter_email_not_prefix,
        filter_email_suffix,
        filter_email_not_suffix,
        filter_email_match,
        filter_email_not_match,
        filter_address_eq,
        filter_address_not_eq,
        filter_address_eql,
        filter_address_not_eql,
        filter_address_prefix,
        filter_address_not_prefix,
        filter_address_suffix,
        filter_address_not_suffix,
        filter_address_match,
        filter_address_not_match,
        filter_zip_code_eq,
        filter_zip_code_not_eq,
        filter_zip_code_gt,
        filter_zip_code_gte,
        filter_zip_code_lt,
        filter_zip_code_lte,
        filter_town_eq,
        filter_town_not_eq,
        filter_town_eql,
        filter_town_not_eql,
        filter_town_prefix,
        filter_town_not_prefix,
        filter_town_suffix,
        filter_town_not_suffix,
        filter_town_match,
        filter_town_not_match,
        filter_country_eq,
        filter_country_not_eq,
        filter_country_eql,
        filter_country_not_eql,
        filter_country_prefix,
        filter_country_not_prefix,
        filter_country_suffix,
        filter_country_not_suffix,
        filter_country_match,
        filter_country_not_match,
        filter_require_person_add_requests_eq,
        filter_self_registration_url_eq,
        filter_self_registration_url_not_eq,
        filter_self_registration_url_eql,
        filter_self_registration_url_not_eql,
        filter_self_registration_url_prefix,
        filter_self_registration_url_not_prefix,
        filter_self_registration_url_suffix,
        filter_self_registration_url_not_suffix,
        filter_self_registration_url_match,
        filter_self_registration_url_not_match,
        filter_archived_at_eq,
        filter_archived_at_not_eq,
        filter_archived_at_gt,
        filter_archived_at_gte,
        filter_archived_at_lt,
        filter_archived_at_lte,
        filter_created_at_eq,
        filter_created_at_not_eq,
        filter_created_at_gt,
        filter_created_at_gte,
        filter_created_at_lt,
        filter_created_at_lte,
        filter_updated_at_eq,
        filter_updated_at_not_eq,
        filter_updated_at_gt,
        filter_updated_at_gte,
        filter_updated_at_lt,
        filter_updated_at_lte,
        filter_deleted_at_eq,
        filter_deleted_at_not_eq,
        filter_deleted_at_gt,
        filter_deleted_at_gte,
        filter_deleted_at_lt,
        filter_deleted_at_lte,
        filter_with_deleted_eq,
        filter_with_archived_eq,
        fields_people,
        fields_phone_numbers,
        fields_social_accounts,
        fields_additional_emails,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
        _additional_query_params: Optional[Dict[StrictStr, Any]] = None,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'include': 'csv',
            'sort': 'csv',
            'fields[groups]': 'csv',
            'extra_fields[groups]': 'csv',
            'filter[id][eq]': 'csv',
            'filter[id][not_eq]': 'csv',
            'filter[id][gt]': 'csv',
            'filter[id][gte]': 'csv',
            'filter[id][lt]': 'csv',
            'filter[id][lte]': 'csv',
            'filter[name][eq]': 'csv',
            'filter[name][not_eq]': 'csv',
            'filter[name][eql]': 'csv',
            'filter[name][not_eql]': 'csv',
            'filter[name][prefix]': 'csv',
            'filter[name][not_prefix]': 'csv',
            'filter[name][suffix]': 'csv',
            'filter[name][not_suffix]': 'csv',
            'filter[name][match]': 'csv',
            'filter[name][not_match]': 'csv',
            'filter[short_name][eq]': 'csv',
            'filter[short_name][not_eq]': 'csv',
            'filter[short_name][eql]': 'csv',
            'filter[short_name][not_eql]': 'csv',
            'filter[short_name][prefix]': 'csv',
            'filter[short_name][not_prefix]': 'csv',
            'filter[short_name][suffix]': 'csv',
            'filter[short_name][not_suffix]': 'csv',
            'filter[short_name][match]': 'csv',
            'filter[short_name][not_match]': 'csv',
            'filter[display_name][eq]': 'csv',
            'filter[display_name][not_eq]': 'csv',
            'filter[display_name][eql]': 'csv',
            'filter[display_name][not_eql]': 'csv',
            'filter[display_name][prefix]': 'csv',
            'filter[display_name][not_prefix]': 'csv',
            'filter[display_name][suffix]': 'csv',
            'filter[display_name][not_suffix]': 'csv',
            'filter[display_name][match]': 'csv',
            'filter[display_name][not_match]': 'csv',
            'filter[description][eq]': 'csv',
            'filter[description][not_eq]': 'csv',
            'filter[description][eql]': 'csv',
            'filter[description][not_eql]': 'csv',
            'filter[description][prefix]': 'csv',
            'filter[description][not_prefix]': 'csv',
            'filter[description][suffix]': 'csv',
            'filter[description][not_suffix]': 'csv',
            'filter[description][match]': 'csv',
            'filter[description][not_match]': 'csv',
            'filter[parent_id][eq]': 'csv',
            'filter[parent_id][not_eq]': 'csv',
            'filter[parent_id][gt]': 'csv',
            'filter[parent_id][gte]': 'csv',
            'filter[parent_id][lt]': 'csv',
            'filter[parent_id][lte]': 'csv',
            'filter[layer_group_id][eq]': 'csv',
            'filter[layer_group_id][not_eq]': 'csv',
            'filter[layer_group_id][gt]': 'csv',
            'filter[layer_group_id][gte]': 'csv',
            'filter[layer_group_id][lt]': 'csv',
            'filter[layer_group_id][lte]': 'csv',
            'filter[type][eq]': 'csv',
            'filter[type][not_eq]': 'csv',
            'filter[type][eql]': 'csv',
            'filter[type][not_eql]': 'csv',
            'filter[type][prefix]': 'csv',
            'filter[type][not_prefix]': 'csv',
            'filter[type][suffix]': 'csv',
            'filter[type][not_suffix]': 'csv',
            'filter[type][match]': 'csv',
            'filter[type][not_match]': 'csv',
            'filter[email][eq]': 'csv',
            'filter[email][not_eq]': 'csv',
            'filter[email][eql]': 'csv',
            'filter[email][not_eql]': 'csv',
            'filter[email][prefix]': 'csv',
            'filter[email][not_prefix]': 'csv',
            'filter[email][suffix]': 'csv',
            'filter[email][not_suffix]': 'csv',
            'filter[email][match]': 'csv',
            'filter[email][not_match]': 'csv',
            'filter[address][eq]': 'csv',
            'filter[address][not_eq]': 'csv',
            'filter[address][eql]': 'csv',
            'filter[address][not_eql]': 'csv',
            'filter[address][prefix]': 'csv',
            'filter[address][not_prefix]': 'csv',
            'filter[address][suffix]': 'csv',
            'filter[address][not_suffix]': 'csv',
            'filter[address][match]': 'csv',
            'filter[address][not_match]': 'csv',
            'filter[zip_code][eq]': 'csv',
            'filter[zip_code][not_eq]': 'csv',
            'filter[zip_code][gt]': 'csv',
            'filter[zip_code][gte]': 'csv',
            'filter[zip_code][lt]': 'csv',
            'filter[zip_code][lte]': 'csv',
            'filter[town][eq]': 'csv',
            'filter[town][not_eq]': 'csv',
            'filter[town][eql]': 'csv',
            'filter[town][not_eql]': 'csv',
            'filter[town][prefix]': 'csv',
            'filter[town][not_prefix]': 'csv',
            'filter[town][suffix]': 'csv',
            'filter[town][not_suffix]': 'csv',
            'filter[town][match]': 'csv',
            'filter[town][not_match]': 'csv',
            'filter[country][eq]': 'csv',
            'filter[country][not_eq]': 'csv',
            'filter[country][eql]': 'csv',
            'filter[country][not_eql]': 'csv',
            'filter[country][prefix]': 'csv',
            'filter[country][not_prefix]': 'csv',
            'filter[country][suffix]': 'csv',
            'filter[country][not_suffix]': 'csv',
            'filter[country][match]': 'csv',
            'filter[country][not_match]': 'csv',
            'filter[self_registration_url][eq]': 'csv',
            'filter[self_registration_url][not_eq]': 'csv',
            'filter[self_registration_url][eql]': 'csv',
            'filter[self_registration_url][not_eql]': 'csv',
            'filter[self_registration_url][prefix]': 'csv',
            'filter[self_registration_url][not_prefix]': 'csv',
            'filter[self_registration_url][suffix]': 'csv',
            'filter[self_registration_url][not_suffix]': 'csv',
            'filter[self_registration_url][match]': 'csv',
            'filter[self_registration_url][not_match]': 'csv',
            'filter[archived_at][eq]': 'csv',
            'filter[archived_at][not_eq]': 'csv',
            'filter[archived_at][gt]': 'csv',
            'filter[archived_at][gte]': 'csv',
            'filter[archived_at][lt]': 'csv',
            'filter[archived_at][lte]': 'csv',
            'filter[created_at][eq]': 'csv',
            'filter[created_at][not_eq]': 'csv',
            'filter[created_at][gt]': 'csv',
            'filter[created_at][gte]': 'csv',
            'filter[created_at][lt]': 'csv',
            'filter[created_at][lte]': 'csv',
            'filter[updated_at][eq]': 'csv',
            'filter[updated_at][not_eq]': 'csv',
            'filter[updated_at][gt]': 'csv',
            'filter[updated_at][gte]': 'csv',
            'filter[updated_at][lt]': 'csv',
            'filter[updated_at][lte]': 'csv',
            'filter[deleted_at][eq]': 'csv',
            'filter[deleted_at][not_eq]': 'csv',
            'filter[deleted_at][gt]': 'csv',
            'filter[deleted_at][gte]': 'csv',
            'filter[deleted_at][lt]': 'csv',
            'filter[deleted_at][lte]': 'csv',
            'fields[people]': 'csv',
            'fields[phone_numbers]': 'csv',
            'fields[social_accounts]': 'csv',
            'fields[additional_emails]': 'csv',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters

        if _additional_query_params is not None:
            _query_params.extend((key, value) for key, value in _additional_query_params.items())

        if include is not None:
            
            _query_params.append(('include', include))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if fields_groups is not None:
            
            _query_params.append(('fields[groups]', fields_groups))
            
        if extra_fields_groups is not None:
            
            _query_params.append(('extra_fields[groups]', extra_fields_groups))
            
        if filter_id_eq is not None:
            
            _query_params.append(('filter[id][eq]', filter_id_eq))
            
        if filter_id_not_eq is not None:
            
            _query_params.append(('filter[id][not_eq]', filter_id_not_eq))
            
        if filter_id_gt is not None:
            
            _query_params.append(('filter[id][gt]', filter_id_gt))
            
        if filter_id_gte is not None:
            
            _query_params.append(('filter[id][gte]', filter_id_gte))
            
        if filter_id_lt is not None:
            
            _query_params.append(('filter[id][lt]', filter_id_lt))
            
        if filter_id_lte is not None:
            
            _query_params.append(('filter[id][lte]', filter_id_lte))
            
        if filter_name_eq is not None:
            
            _query_params.append(('filter[name][eq]', filter_name_eq))
            
        if filter_name_not_eq is not None:
            
            _query_params.append(('filter[name][not_eq]', filter_name_not_eq))
            
        if filter_name_eql is not None:
            
            _query_params.append(('filter[name][eql]', filter_name_eql))
            
        if filter_name_not_eql is not None:
            
            _query_params.append(('filter[name][not_eql]', filter_name_not_eql))
            
        if filter_name_prefix is not None:
            
            _query_params.append(('filter[name][prefix]', filter_name_prefix))
            
        if filter_name_not_prefix is not None:
            
            _query_params.append(('filter[name][not_prefix]', filter_name_not_prefix))
            
        if filter_name_suffix is not None:
            
            _query_params.append(('filter[name][suffix]', filter_name_suffix))
            
        if filter_name_not_suffix is not None:
            
            _query_params.append(('filter[name][not_suffix]', filter_name_not_suffix))
            
        if filter_name_match is not None:
            
            _query_params.append(('filter[name][match]', filter_name_match))
            
        if filter_name_not_match is not None:
            
            _query_params.append(('filter[name][not_match]', filter_name_not_match))
            
        if filter_short_name_eq is not None:
            
            _query_params.append(('filter[short_name][eq]', filter_short_name_eq))
            
        if filter_short_name_not_eq is not None:
            
            _query_params.append(('filter[short_name][not_eq]', filter_short_name_not_eq))
            
        if filter_short_name_eql is not None:
            
            _query_params.append(('filter[short_name][eql]', filter_short_name_eql))
            
        if filter_short_name_not_eql is not None:
            
            _query_params.append(('filter[short_name][not_eql]', filter_short_name_not_eql))
            
        if filter_short_name_prefix is not None:
            
            _query_params.append(('filter[short_name][prefix]', filter_short_name_prefix))
            
        if filter_short_name_not_prefix is not None:
            
            _query_params.append(('filter[short_name][not_prefix]', filter_short_name_not_prefix))
            
        if filter_short_name_suffix is not None:
            
            _query_params.append(('filter[short_name][suffix]', filter_short_name_suffix))
            
        if filter_short_name_not_suffix is not None:
            
            _query_params.append(('filter[short_name][not_suffix]', filter_short_name_not_suffix))
            
        if filter_short_name_match is not None:
            
            _query_params.append(('filter[short_name][match]', filter_short_name_match))
            
        if filter_short_name_not_match is not None:
            
            _query_params.append(('filter[short_name][not_match]', filter_short_name_not_match))
            
        if filter_display_name_eq is not None:
            
            _query_params.append(('filter[display_name][eq]', filter_display_name_eq))
            
        if filter_display_name_not_eq is not None:
            
            _query_params.append(('filter[display_name][not_eq]', filter_display_name_not_eq))
            
        if filter_display_name_eql is not None:
            
            _query_params.append(('filter[display_name][eql]', filter_display_name_eql))
            
        if filter_display_name_not_eql is not None:
            
            _query_params.append(('filter[display_name][not_eql]', filter_display_name_not_eql))
            
        if filter_display_name_prefix is not None:
            
            _query_params.append(('filter[display_name][prefix]', filter_display_name_prefix))
            
        if filter_display_name_not_prefix is not None:
            
            _query_params.append(('filter[display_name][not_prefix]', filter_display_name_not_prefix))
            
        if filter_display_name_suffix is not None:
            
            _query_params.append(('filter[display_name][suffix]', filter_display_name_suffix))
            
        if filter_display_name_not_suffix is not None:
            
            _query_params.append(('filter[display_name][not_suffix]', filter_display_name_not_suffix))
            
        if filter_display_name_match is not None:
            
            _query_params.append(('filter[display_name][match]', filter_display_name_match))
            
        if filter_display_name_not_match is not None:
            
            _query_params.append(('filter[display_name][not_match]', filter_display_name_not_match))
            
        if filter_description_eq is not None:
            
            _query_params.append(('filter[description][eq]', filter_description_eq))
            
        if filter_description_not_eq is not None:
            
            _query_params.append(('filter[description][not_eq]', filter_description_not_eq))
            
        if filter_description_eql is not None:
            
            _query_params.append(('filter[description][eql]', filter_description_eql))
            
        if filter_description_not_eql is not None:
            
            _query_params.append(('filter[description][not_eql]', filter_description_not_eql))
            
        if filter_description_prefix is not None:
            
            _query_params.append(('filter[description][prefix]', filter_description_prefix))
            
        if filter_description_not_prefix is not None:
            
            _query_params.append(('filter[description][not_prefix]', filter_description_not_prefix))
            
        if filter_description_suffix is not None:
            
            _query_params.append(('filter[description][suffix]', filter_description_suffix))
            
        if filter_description_not_suffix is not None:
            
            _query_params.append(('filter[description][not_suffix]', filter_description_not_suffix))
            
        if filter_description_match is not None:
            
            _query_params.append(('filter[description][match]', filter_description_match))
            
        if filter_description_not_match is not None:
            
            _query_params.append(('filter[description][not_match]', filter_description_not_match))
            
        if filter_layer_eq is not None:
            
            _query_params.append(('filter[layer][eq]', filter_layer_eq))
            
        if filter_parent_id_eq is not None:
            
            _query_params.append(('filter[parent_id][eq]', filter_parent_id_eq))
            
        if filter_parent_id_not_eq is not None:
            
            _query_params.append(('filter[parent_id][not_eq]', filter_parent_id_not_eq))
            
        if filter_parent_id_gt is not None:
            
            _query_params.append(('filter[parent_id][gt]', filter_parent_id_gt))
            
        if filter_parent_id_gte is not None:
            
            _query_params.append(('filter[parent_id][gte]', filter_parent_id_gte))
            
        if filter_parent_id_lt is not None:
            
            _query_params.append(('filter[parent_id][lt]', filter_parent_id_lt))
            
        if filter_parent_id_lte is not None:
            
            _query_params.append(('filter[parent_id][lte]', filter_parent_id_lte))
            
        if filter_layer_group_id_eq is not None:
            
            _query_params.append(('filter[layer_group_id][eq]', filter_layer_group_id_eq))
            
        if filter_layer_group_id_not_eq is not None:
            
            _query_params.append(('filter[layer_group_id][not_eq]', filter_layer_group_id_not_eq))
            
        if filter_layer_group_id_gt is not None:
            
            _query_params.append(('filter[layer_group_id][gt]', filter_layer_group_id_gt))
            
        if filter_layer_group_id_gte is not None:
            
            _query_params.append(('filter[layer_group_id][gte]', filter_layer_group_id_gte))
            
        if filter_layer_group_id_lt is not None:
            
            _query_params.append(('filter[layer_group_id][lt]', filter_layer_group_id_lt))
            
        if filter_layer_group_id_lte is not None:
            
            _query_params.append(('filter[layer_group_id][lte]', filter_layer_group_id_lte))
            
        if filter_type_eq is not None:
            
            _query_params.append(('filter[type][eq]', filter_type_eq))
            
        if filter_type_not_eq is not None:
            
            _query_params.append(('filter[type][not_eq]', filter_type_not_eq))
            
        if filter_type_eql is not None:
            
            _query_params.append(('filter[type][eql]', filter_type_eql))
            
        if filter_type_not_eql is not None:
            
            _query_params.append(('filter[type][not_eql]', filter_type_not_eql))
            
        if filter_type_prefix is not None:
            
            _query_params.append(('filter[type][prefix]', filter_type_prefix))
            
        if filter_type_not_prefix is not None:
            
            _query_params.append(('filter[type][not_prefix]', filter_type_not_prefix))
            
        if filter_type_suffix is not None:
            
            _query_params.append(('filter[type][suffix]', filter_type_suffix))
            
        if filter_type_not_suffix is not None:
            
            _query_params.append(('filter[type][not_suffix]', filter_type_not_suffix))
            
        if filter_type_match is not None:
            
            _query_params.append(('filter[type][match]', filter_type_match))
            
        if filter_type_not_match is not None:
            
            _query_params.append(('filter[type][not_match]', filter_type_not_match))
            
        if filter_email_eq is not None:
            
            _query_params.append(('filter[email][eq]', filter_email_eq))
            
        if filter_email_not_eq is not None:
            
            _query_params.append(('filter[email][not_eq]', filter_email_not_eq))
            
        if filter_email_eql is not None:
            
            _query_params.append(('filter[email][eql]', filter_email_eql))
            
        if filter_email_not_eql is not None:
            
            _query_params.append(('filter[email][not_eql]', filter_email_not_eql))
            
        if filter_email_prefix is not None:
            
            _query_params.append(('filter[email][prefix]', filter_email_prefix))
            
        if filter_email_not_prefix is not None:
            
            _query_params.append(('filter[email][not_prefix]', filter_email_not_prefix))
            
        if filter_email_suffix is not None:
            
            _query_params.append(('filter[email][suffix]', filter_email_suffix))
            
        if filter_email_not_suffix is not None:
            
            _query_params.append(('filter[email][not_suffix]', filter_email_not_suffix))
            
        if filter_email_match is not None:
            
            _query_params.append(('filter[email][match]', filter_email_match))
            
        if filter_email_not_match is not None:
            
            _query_params.append(('filter[email][not_match]', filter_email_not_match))
            
        if filter_address_eq is not None:
            
            _query_params.append(('filter[address][eq]', filter_address_eq))
            
        if filter_address_not_eq is not None:
            
            _query_params.append(('filter[address][not_eq]', filter_address_not_eq))
            
        if filter_address_eql is not None:
            
            _query_params.append(('filter[address][eql]', filter_address_eql))
            
        if filter_address_not_eql is not None:
            
            _query_params.append(('filter[address][not_eql]', filter_address_not_eql))
            
        if filter_address_prefix is not None:
            
            _query_params.append(('filter[address][prefix]', filter_address_prefix))
            
        if filter_address_not_prefix is not None:
            
            _query_params.append(('filter[address][not_prefix]', filter_address_not_prefix))
            
        if filter_address_suffix is not None:
            
            _query_params.append(('filter[address][suffix]', filter_address_suffix))
            
        if filter_address_not_suffix is not None:
            
            _query_params.append(('filter[address][not_suffix]', filter_address_not_suffix))
            
        if filter_address_match is not None:
            
            _query_params.append(('filter[address][match]', filter_address_match))
            
        if filter_address_not_match is not None:
            
            _query_params.append(('filter[address][not_match]', filter_address_not_match))
            
        if filter_zip_code_eq is not None:
            
            _query_params.append(('filter[zip_code][eq]', filter_zip_code_eq))
            
        if filter_zip_code_not_eq is not None:
            
            _query_params.append(('filter[zip_code][not_eq]', filter_zip_code_not_eq))
            
        if filter_zip_code_gt is not None:
            
            _query_params.append(('filter[zip_code][gt]', filter_zip_code_gt))
            
        if filter_zip_code_gte is not None:
            
            _query_params.append(('filter[zip_code][gte]', filter_zip_code_gte))
            
        if filter_zip_code_lt is not None:
            
            _query_params.append(('filter[zip_code][lt]', filter_zip_code_lt))
            
        if filter_zip_code_lte is not None:
            
            _query_params.append(('filter[zip_code][lte]', filter_zip_code_lte))
            
        if filter_town_eq is not None:
            
            _query_params.append(('filter[town][eq]', filter_town_eq))
            
        if filter_town_not_eq is not None:
            
            _query_params.append(('filter[town][not_eq]', filter_town_not_eq))
            
        if filter_town_eql is not None:
            
            _query_params.append(('filter[town][eql]', filter_town_eql))
            
        if filter_town_not_eql is not None:
            
            _query_params.append(('filter[town][not_eql]', filter_town_not_eql))
            
        if filter_town_prefix is not None:
            
            _query_params.append(('filter[town][prefix]', filter_town_prefix))
            
        if filter_town_not_prefix is not None:
            
            _query_params.append(('filter[town][not_prefix]', filter_town_not_prefix))
            
        if filter_town_suffix is not None:
            
            _query_params.append(('filter[town][suffix]', filter_town_suffix))
            
        if filter_town_not_suffix is not None:
            
            _query_params.append(('filter[town][not_suffix]', filter_town_not_suffix))
            
        if filter_town_match is not None:
            
            _query_params.append(('filter[town][match]', filter_town_match))
            
        if filter_town_not_match is not None:
            
            _query_params.append(('filter[town][not_match]', filter_town_not_match))
            
        if filter_country_eq is not None:
            
            _query_params.append(('filter[country][eq]', filter_country_eq))
            
        if filter_country_not_eq is not None:
            
            _query_params.append(('filter[country][not_eq]', filter_country_not_eq))
            
        if filter_country_eql is not None:
            
            _query_params.append(('filter[country][eql]', filter_country_eql))
            
        if filter_country_not_eql is not None:
            
            _query_params.append(('filter[country][not_eql]', filter_country_not_eql))
            
        if filter_country_prefix is not None:
            
            _query_params.append(('filter[country][prefix]', filter_country_prefix))
            
        if filter_country_not_prefix is not None:
            
            _query_params.append(('filter[country][not_prefix]', filter_country_not_prefix))
            
        if filter_country_suffix is not None:
            
            _query_params.append(('filter[country][suffix]', filter_country_suffix))
            
        if filter_country_not_suffix is not None:
            
            _query_params.append(('filter[country][not_suffix]', filter_country_not_suffix))
            
        if filter_country_match is not None:
            
            _query_params.append(('filter[country][match]', filter_country_match))
            
        if filter_country_not_match is not None:
            
            _query_params.append(('filter[country][not_match]', filter_country_not_match))
            
        if filter_require_person_add_requests_eq is not None:
            
            _query_params.append(('filter[require_person_add_requests][eq]', filter_require_person_add_requests_eq))
            
        if filter_self_registration_url_eq is not None:
            
            _query_params.append(('filter[self_registration_url][eq]', filter_self_registration_url_eq))
            
        if filter_self_registration_url_not_eq is not None:
            
            _query_params.append(('filter[self_registration_url][not_eq]', filter_self_registration_url_not_eq))
            
        if filter_self_registration_url_eql is not None:
            
            _query_params.append(('filter[self_registration_url][eql]', filter_self_registration_url_eql))
            
        if filter_self_registration_url_not_eql is not None:
            
            _query_params.append(('filter[self_registration_url][not_eql]', filter_self_registration_url_not_eql))
            
        if filter_self_registration_url_prefix is not None:
            
            _query_params.append(('filter[self_registration_url][prefix]', filter_self_registration_url_prefix))
            
        if filter_self_registration_url_not_prefix is not None:
            
            _query_params.append(('filter[self_registration_url][not_prefix]', filter_self_registration_url_not_prefix))
            
        if filter_self_registration_url_suffix is not None:
            
            _query_params.append(('filter[self_registration_url][suffix]', filter_self_registration_url_suffix))
            
        if filter_self_registration_url_not_suffix is not None:
            
            _query_params.append(('filter[self_registration_url][not_suffix]', filter_self_registration_url_not_suffix))
            
        if filter_self_registration_url_match is not None:
            
            _query_params.append(('filter[self_registration_url][match]', filter_self_registration_url_match))
            
        if filter_self_registration_url_not_match is not None:
            
            _query_params.append(('filter[self_registration_url][not_match]', filter_self_registration_url_not_match))
            
        if filter_archived_at_eq is not None:
            
            _query_params.append(('filter[archived_at][eq]', filter_archived_at_eq))
            
        if filter_archived_at_not_eq is not None:
            
            _query_params.append(('filter[archived_at][not_eq]', filter_archived_at_not_eq))
            
        if filter_archived_at_gt is not None:
            
            _query_params.append(('filter[archived_at][gt]', filter_archived_at_gt))
            
        if filter_archived_at_gte is not None:
            
            _query_params.append(('filter[archived_at][gte]', filter_archived_at_gte))
            
        if filter_archived_at_lt is not None:
            
            _query_params.append(('filter[archived_at][lt]', filter_archived_at_lt))
            
        if filter_archived_at_lte is not None:
            
            _query_params.append(('filter[archived_at][lte]', filter_archived_at_lte))
            
        if filter_created_at_eq is not None:
            
            _query_params.append(('filter[created_at][eq]', filter_created_at_eq))
            
        if filter_created_at_not_eq is not None:
            
            _query_params.append(('filter[created_at][not_eq]', filter_created_at_not_eq))
            
        if filter_created_at_gt is not None:
            
            _query_params.append(('filter[created_at][gt]', filter_created_at_gt))
            
        if filter_created_at_gte is not None:
            
            _query_params.append(('filter[created_at][gte]', filter_created_at_gte))
            
        if filter_created_at_lt is not None:
            
            _query_params.append(('filter[created_at][lt]', filter_created_at_lt))
            
        if filter_created_at_lte is not None:
            
            _query_params.append(('filter[created_at][lte]', filter_created_at_lte))
            
        if filter_updated_at_eq is not None:
            
            _query_params.append(('filter[updated_at][eq]', filter_updated_at_eq))
            
        if filter_updated_at_not_eq is not None:
            
            _query_params.append(('filter[updated_at][not_eq]', filter_updated_at_not_eq))
            
        if filter_updated_at_gt is not None:
            
            _query_params.append(('filter[updated_at][gt]', filter_updated_at_gt))
            
        if filter_updated_at_gte is not None:
            
            _query_params.append(('filter[updated_at][gte]', filter_updated_at_gte))
            
        if filter_updated_at_lt is not None:
            
            _query_params.append(('filter[updated_at][lt]', filter_updated_at_lt))
            
        if filter_updated_at_lte is not None:
            
            _query_params.append(('filter[updated_at][lte]', filter_updated_at_lte))
            
        if filter_deleted_at_eq is not None:
            
            _query_params.append(('filter[deleted_at][eq]', filter_deleted_at_eq))
            
        if filter_deleted_at_not_eq is not None:
            
            _query_params.append(('filter[deleted_at][not_eq]', filter_deleted_at_not_eq))
            
        if filter_deleted_at_gt is not None:
            
            _query_params.append(('filter[deleted_at][gt]', filter_deleted_at_gt))
            
        if filter_deleted_at_gte is not None:
            
            _query_params.append(('filter[deleted_at][gte]', filter_deleted_at_gte))
            
        if filter_deleted_at_lt is not None:
            
            _query_params.append(('filter[deleted_at][lt]', filter_deleted_at_lt))
            
        if filter_deleted_at_lte is not None:
            
            _query_params.append(('filter[deleted_at][lte]', filter_deleted_at_lte))
            
        if filter_with_deleted_eq is not None:
            
            _query_params.append(('filter[with_deleted][eq]', filter_with_deleted_eq))
            
        if filter_with_archived_eq is not None:
            
            _query_params.append(('filter[with_archived][eq]', filter_with_archived_eq))
            
        if fields_people is not None:
            
            _query_params.append(('fields[people]', fields_people))
            
        if fields_phone_numbers is not None:
            
            _query_params.append(('fields[phone_numbers]', fields_phone_numbers))
            
        if fields_social_accounts is not None:
            
            _query_params.append(('fields[social_accounts]', fields_social_accounts))
            
        if fields_additional_emails is not None:
            
            _query_params.append(('fields[additional_emails]', fields_additional_emails))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/vnd.api+json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ServiceTokenAuthHeader', 
            'ServiceTokenAuthParam'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/groups/{id}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def list_groups(
        self,
        include: Annotated[Optional[List[StrictStr]], Field(description="[Include related resources](https://jsonapi.org/format/#fetching-includes)")] = None,
        sort: Annotated[Optional[List[StrictStr]], Field(description="[Sort groups according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)  You should not include both ascending `id` and descending `-id` fields the same time  ")] = None,
        fields_groups: Annotated[Optional[List[GroupsReadableAttribute]], Field(description="[Include only specified fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        extra_fields_groups: Annotated[Optional[List[GroupsExtraAttribute]], Field(description="[Include specified extra fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        filter_id_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by layer using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_require_person_add_requests_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by require_person_add_requests using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_with_deleted_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by with_deleted using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_with_archived_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by with_archived using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        fields_people: Annotated[Optional[List[PeopleReadableAttribute]], Field(description="[Include only specified fields of Person in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        fields_phone_numbers: Annotated[Optional[List[PhoneNumbersReadableAttribute]], Field(description="[Include only specified fields of Phone number in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        fields_social_accounts: Annotated[Optional[List[SocialAccountsReadableAttribute]], Field(description="[Include only specified fields of Social account in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        fields_additional_emails: Annotated[Optional[List[AdditionalEmailsReadableAttribute]], Field(description="[Include only specified fields of Additional email in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
        _additional_query_params: Optional[Dict[StrictStr, Any]] = None,
    ) -> GroupsCollection:
        """List Groups


        :param include: [Include related resources](https://jsonapi.org/format/#fetching-includes)
        :type include: List[str]
        :param sort: [Sort groups according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)  You should not include both ascending `id` and descending `-id` fields the same time  
        :type sort: List[str]
        :param fields_groups: [Include only specified fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_groups: List[GroupsReadableAttribute]
        :param extra_fields_groups: [Include specified extra fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type extra_fields_groups: List[GroupsExtraAttribute]
        :param filter_id_eq: [Filter Group by id using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_eq: List[int]
        :param filter_id_not_eq: [Filter Group by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_not_eq: List[int]
        :param filter_id_gt: [Filter Group by id using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_gt: List[int]
        :param filter_id_gte: [Filter Group by id using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_gte: List[int]
        :param filter_id_lt: [Filter Group by id using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_lt: List[int]
        :param filter_id_lte: [Filter Group by id using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_lte: List[int]
        :param filter_name_eq: [Filter Group by name using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_eq: List[str]
        :param filter_name_not_eq: [Filter Group by name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_eq: List[str]
        :param filter_name_eql: [Filter Group by name using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_eql: List[str]
        :param filter_name_not_eql: [Filter Group by name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_eql: List[str]
        :param filter_name_prefix: [Filter Group by name using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_prefix: List[str]
        :param filter_name_not_prefix: [Filter Group by name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_prefix: List[str]
        :param filter_name_suffix: [Filter Group by name using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_suffix: List[str]
        :param filter_name_not_suffix: [Filter Group by name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_suffix: List[str]
        :param filter_name_match: [Filter Group by name using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_match: List[str]
        :param filter_name_not_match: [Filter Group by name using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_match: List[str]
        :param filter_short_name_eq: [Filter Group by short_name using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_eq: List[str]
        :param filter_short_name_not_eq: [Filter Group by short_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_eq: List[str]
        :param filter_short_name_eql: [Filter Group by short_name using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_eql: List[str]
        :param filter_short_name_not_eql: [Filter Group by short_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_eql: List[str]
        :param filter_short_name_prefix: [Filter Group by short_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_prefix: List[str]
        :param filter_short_name_not_prefix: [Filter Group by short_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_prefix: List[str]
        :param filter_short_name_suffix: [Filter Group by short_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_suffix: List[str]
        :param filter_short_name_not_suffix: [Filter Group by short_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_suffix: List[str]
        :param filter_short_name_match: [Filter Group by short_name using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_match: List[str]
        :param filter_short_name_not_match: [Filter Group by short_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_match: List[str]
        :param filter_display_name_eq: [Filter Group by display_name using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_eq: List[str]
        :param filter_display_name_not_eq: [Filter Group by display_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_eq: List[str]
        :param filter_display_name_eql: [Filter Group by display_name using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_eql: List[str]
        :param filter_display_name_not_eql: [Filter Group by display_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_eql: List[str]
        :param filter_display_name_prefix: [Filter Group by display_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_prefix: List[str]
        :param filter_display_name_not_prefix: [Filter Group by display_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_prefix: List[str]
        :param filter_display_name_suffix: [Filter Group by display_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_suffix: List[str]
        :param filter_display_name_not_suffix: [Filter Group by display_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_suffix: List[str]
        :param filter_display_name_match: [Filter Group by display_name using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_match: List[str]
        :param filter_display_name_not_match: [Filter Group by display_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_match: List[str]
        :param filter_description_eq: [Filter Group by description using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_eq: List[str]
        :param filter_description_not_eq: [Filter Group by description using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_eq: List[str]
        :param filter_description_eql: [Filter Group by description using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_eql: List[str]
        :param filter_description_not_eql: [Filter Group by description using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_eql: List[str]
        :param filter_description_prefix: [Filter Group by description using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_prefix: List[str]
        :param filter_description_not_prefix: [Filter Group by description using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_prefix: List[str]
        :param filter_description_suffix: [Filter Group by description using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_suffix: List[str]
        :param filter_description_not_suffix: [Filter Group by description using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_suffix: List[str]
        :param filter_description_match: [Filter Group by description using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_match: List[str]
        :param filter_description_not_match: [Filter Group by description using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_match: List[str]
        :param filter_layer_eq: [Filter Group by layer using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_eq: bool
        :param filter_parent_id_eq: [Filter Group by parent_id using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_eq: List[int]
        :param filter_parent_id_not_eq: [Filter Group by parent_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_not_eq: List[int]
        :param filter_parent_id_gt: [Filter Group by parent_id using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_gt: List[int]
        :param filter_parent_id_gte: [Filter Group by parent_id using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_gte: List[int]
        :param filter_parent_id_lt: [Filter Group by parent_id using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_lt: List[int]
        :param filter_parent_id_lte: [Filter Group by parent_id using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_lte: List[int]
        :param filter_layer_group_id_eq: [Filter Group by layer_group_id using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_eq: List[int]
        :param filter_layer_group_id_not_eq: [Filter Group by layer_group_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_not_eq: List[int]
        :param filter_layer_group_id_gt: [Filter Group by layer_group_id using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_gt: List[int]
        :param filter_layer_group_id_gte: [Filter Group by layer_group_id using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_gte: List[int]
        :param filter_layer_group_id_lt: [Filter Group by layer_group_id using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_lt: List[int]
        :param filter_layer_group_id_lte: [Filter Group by layer_group_id using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_lte: List[int]
        :param filter_type_eq: [Filter Group by type using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_eq: List[str]
        :param filter_type_not_eq: [Filter Group by type using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_eq: List[str]
        :param filter_type_eql: [Filter Group by type using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_eql: List[str]
        :param filter_type_not_eql: [Filter Group by type using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_eql: List[str]
        :param filter_type_prefix: [Filter Group by type using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_prefix: List[str]
        :param filter_type_not_prefix: [Filter Group by type using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_prefix: List[str]
        :param filter_type_suffix: [Filter Group by type using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_suffix: List[str]
        :param filter_type_not_suffix: [Filter Group by type using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_suffix: List[str]
        :param filter_type_match: [Filter Group by type using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_match: List[str]
        :param filter_type_not_match: [Filter Group by type using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_match: List[str]
        :param filter_email_eq: [Filter Group by email using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_eq: List[str]
        :param filter_email_not_eq: [Filter Group by email using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_eq: List[str]
        :param filter_email_eql: [Filter Group by email using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_eql: List[str]
        :param filter_email_not_eql: [Filter Group by email using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_eql: List[str]
        :param filter_email_prefix: [Filter Group by email using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_prefix: List[str]
        :param filter_email_not_prefix: [Filter Group by email using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_prefix: List[str]
        :param filter_email_suffix: [Filter Group by email using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_suffix: List[str]
        :param filter_email_not_suffix: [Filter Group by email using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_suffix: List[str]
        :param filter_email_match: [Filter Group by email using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_match: List[str]
        :param filter_email_not_match: [Filter Group by email using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_match: List[str]
        :param filter_address_eq: [Filter Group by address using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_eq: List[str]
        :param filter_address_not_eq: [Filter Group by address using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_eq: List[str]
        :param filter_address_eql: [Filter Group by address using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_eql: List[str]
        :param filter_address_not_eql: [Filter Group by address using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_eql: List[str]
        :param filter_address_prefix: [Filter Group by address using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_prefix: List[str]
        :param filter_address_not_prefix: [Filter Group by address using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_prefix: List[str]
        :param filter_address_suffix: [Filter Group by address using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_suffix: List[str]
        :param filter_address_not_suffix: [Filter Group by address using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_suffix: List[str]
        :param filter_address_match: [Filter Group by address using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_match: List[str]
        :param filter_address_not_match: [Filter Group by address using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_match: List[str]
        :param filter_zip_code_eq: [Filter Group by zip_code using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_eq: List[int]
        :param filter_zip_code_not_eq: [Filter Group by zip_code using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_not_eq: List[int]
        :param filter_zip_code_gt: [Filter Group by zip_code using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_gt: List[int]
        :param filter_zip_code_gte: [Filter Group by zip_code using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_gte: List[int]
        :param filter_zip_code_lt: [Filter Group by zip_code using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_lt: List[int]
        :param filter_zip_code_lte: [Filter Group by zip_code using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_lte: List[int]
        :param filter_town_eq: [Filter Group by town using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_eq: List[str]
        :param filter_town_not_eq: [Filter Group by town using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_eq: List[str]
        :param filter_town_eql: [Filter Group by town using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_eql: List[str]
        :param filter_town_not_eql: [Filter Group by town using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_eql: List[str]
        :param filter_town_prefix: [Filter Group by town using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_prefix: List[str]
        :param filter_town_not_prefix: [Filter Group by town using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_prefix: List[str]
        :param filter_town_suffix: [Filter Group by town using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_suffix: List[str]
        :param filter_town_not_suffix: [Filter Group by town using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_suffix: List[str]
        :param filter_town_match: [Filter Group by town using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_match: List[str]
        :param filter_town_not_match: [Filter Group by town using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_match: List[str]
        :param filter_country_eq: [Filter Group by country using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_eq: List[str]
        :param filter_country_not_eq: [Filter Group by country using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_eq: List[str]
        :param filter_country_eql: [Filter Group by country using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_eql: List[str]
        :param filter_country_not_eql: [Filter Group by country using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_eql: List[str]
        :param filter_country_prefix: [Filter Group by country using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_prefix: List[str]
        :param filter_country_not_prefix: [Filter Group by country using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_prefix: List[str]
        :param filter_country_suffix: [Filter Group by country using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_suffix: List[str]
        :param filter_country_not_suffix: [Filter Group by country using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_suffix: List[str]
        :param filter_country_match: [Filter Group by country using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_match: List[str]
        :param filter_country_not_match: [Filter Group by country using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_match: List[str]
        :param filter_require_person_add_requests_eq: [Filter Group by require_person_add_requests using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_require_person_add_requests_eq: bool
        :param filter_self_registration_url_eq: [Filter Group by self_registration_url using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_eq: List[str]
        :param filter_self_registration_url_not_eq: [Filter Group by self_registration_url using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_eq: List[str]
        :param filter_self_registration_url_eql: [Filter Group by self_registration_url using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_eql: List[str]
        :param filter_self_registration_url_not_eql: [Filter Group by self_registration_url using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_eql: List[str]
        :param filter_self_registration_url_prefix: [Filter Group by self_registration_url using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_prefix: List[str]
        :param filter_self_registration_url_not_prefix: [Filter Group by self_registration_url using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_prefix: List[str]
        :param filter_self_registration_url_suffix: [Filter Group by self_registration_url using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_suffix: List[str]
        :param filter_self_registration_url_not_suffix: [Filter Group by self_registration_url using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_suffix: List[str]
        :param filter_self_registration_url_match: [Filter Group by self_registration_url using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_match: List[str]
        :param filter_self_registration_url_not_match: [Filter Group by self_registration_url using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_match: List[str]
        :param filter_archived_at_eq: [Filter Group by archived_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_eq: List[datetime]
        :param filter_archived_at_not_eq: [Filter Group by archived_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_not_eq: List[datetime]
        :param filter_archived_at_gt: [Filter Group by archived_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_gt: List[datetime]
        :param filter_archived_at_gte: [Filter Group by archived_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_gte: List[datetime]
        :param filter_archived_at_lt: [Filter Group by archived_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_lt: List[datetime]
        :param filter_archived_at_lte: [Filter Group by archived_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_lte: List[datetime]
        :param filter_created_at_eq: [Filter Group by created_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_eq: List[datetime]
        :param filter_created_at_not_eq: [Filter Group by created_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_not_eq: List[datetime]
        :param filter_created_at_gt: [Filter Group by created_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_gt: List[datetime]
        :param filter_created_at_gte: [Filter Group by created_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_gte: List[datetime]
        :param filter_created_at_lt: [Filter Group by created_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_lt: List[datetime]
        :param filter_created_at_lte: [Filter Group by created_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_lte: List[datetime]
        :param filter_updated_at_eq: [Filter Group by updated_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_eq: List[datetime]
        :param filter_updated_at_not_eq: [Filter Group by updated_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_not_eq: List[datetime]
        :param filter_updated_at_gt: [Filter Group by updated_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_gt: List[datetime]
        :param filter_updated_at_gte: [Filter Group by updated_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_gte: List[datetime]
        :param filter_updated_at_lt: [Filter Group by updated_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_lt: List[datetime]
        :param filter_updated_at_lte: [Filter Group by updated_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_lte: List[datetime]
        :param filter_deleted_at_eq: [Filter Group by deleted_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_eq: List[datetime]
        :param filter_deleted_at_not_eq: [Filter Group by deleted_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_not_eq: List[datetime]
        :param filter_deleted_at_gt: [Filter Group by deleted_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_gt: List[datetime]
        :param filter_deleted_at_gte: [Filter Group by deleted_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_gte: List[datetime]
        :param filter_deleted_at_lt: [Filter Group by deleted_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_lt: List[datetime]
        :param filter_deleted_at_lte: [Filter Group by deleted_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_lte: List[datetime]
        :param filter_with_deleted_eq: [Filter Group by with_deleted using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_with_deleted_eq: bool
        :param filter_with_archived_eq: [Filter Group by with_archived using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_with_archived_eq: bool
        :param fields_people: [Include only specified fields of Person in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_people: List[PeopleReadableAttribute]
        :param fields_phone_numbers: [Include only specified fields of Phone number in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_phone_numbers: List[PhoneNumbersReadableAttribute]
        :param fields_social_accounts: [Include only specified fields of Social account in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_social_accounts: List[SocialAccountsReadableAttribute]
        :param fields_additional_emails: [Include only specified fields of Additional email in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_additional_emails: List[AdditionalEmailsReadableAttribute]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._list_groups_serialize(
            include=include,
            sort=sort,
            fields_groups=fields_groups,
            extra_fields_groups=extra_fields_groups,
            filter_id_eq=filter_id_eq,
            filter_id_not_eq=filter_id_not_eq,
            filter_id_gt=filter_id_gt,
            filter_id_gte=filter_id_gte,
            filter_id_lt=filter_id_lt,
            filter_id_lte=filter_id_lte,
            filter_name_eq=filter_name_eq,
            filter_name_not_eq=filter_name_not_eq,
            filter_name_eql=filter_name_eql,
            filter_name_not_eql=filter_name_not_eql,
            filter_name_prefix=filter_name_prefix,
            filter_name_not_prefix=filter_name_not_prefix,
            filter_name_suffix=filter_name_suffix,
            filter_name_not_suffix=filter_name_not_suffix,
            filter_name_match=filter_name_match,
            filter_name_not_match=filter_name_not_match,
            filter_short_name_eq=filter_short_name_eq,
            filter_short_name_not_eq=filter_short_name_not_eq,
            filter_short_name_eql=filter_short_name_eql,
            filter_short_name_not_eql=filter_short_name_not_eql,
            filter_short_name_prefix=filter_short_name_prefix,
            filter_short_name_not_prefix=filter_short_name_not_prefix,
            filter_short_name_suffix=filter_short_name_suffix,
            filter_short_name_not_suffix=filter_short_name_not_suffix,
            filter_short_name_match=filter_short_name_match,
            filter_short_name_not_match=filter_short_name_not_match,
            filter_display_name_eq=filter_display_name_eq,
            filter_display_name_not_eq=filter_display_name_not_eq,
            filter_display_name_eql=filter_display_name_eql,
            filter_display_name_not_eql=filter_display_name_not_eql,
            filter_display_name_prefix=filter_display_name_prefix,
            filter_display_name_not_prefix=filter_display_name_not_prefix,
            filter_display_name_suffix=filter_display_name_suffix,
            filter_display_name_not_suffix=filter_display_name_not_suffix,
            filter_display_name_match=filter_display_name_match,
            filter_display_name_not_match=filter_display_name_not_match,
            filter_description_eq=filter_description_eq,
            filter_description_not_eq=filter_description_not_eq,
            filter_description_eql=filter_description_eql,
            filter_description_not_eql=filter_description_not_eql,
            filter_description_prefix=filter_description_prefix,
            filter_description_not_prefix=filter_description_not_prefix,
            filter_description_suffix=filter_description_suffix,
            filter_description_not_suffix=filter_description_not_suffix,
            filter_description_match=filter_description_match,
            filter_description_not_match=filter_description_not_match,
            filter_layer_eq=filter_layer_eq,
            filter_parent_id_eq=filter_parent_id_eq,
            filter_parent_id_not_eq=filter_parent_id_not_eq,
            filter_parent_id_gt=filter_parent_id_gt,
            filter_parent_id_gte=filter_parent_id_gte,
            filter_parent_id_lt=filter_parent_id_lt,
            filter_parent_id_lte=filter_parent_id_lte,
            filter_layer_group_id_eq=filter_layer_group_id_eq,
            filter_layer_group_id_not_eq=filter_layer_group_id_not_eq,
            filter_layer_group_id_gt=filter_layer_group_id_gt,
            filter_layer_group_id_gte=filter_layer_group_id_gte,
            filter_layer_group_id_lt=filter_layer_group_id_lt,
            filter_layer_group_id_lte=filter_layer_group_id_lte,
            filter_type_eq=filter_type_eq,
            filter_type_not_eq=filter_type_not_eq,
            filter_type_eql=filter_type_eql,
            filter_type_not_eql=filter_type_not_eql,
            filter_type_prefix=filter_type_prefix,
            filter_type_not_prefix=filter_type_not_prefix,
            filter_type_suffix=filter_type_suffix,
            filter_type_not_suffix=filter_type_not_suffix,
            filter_type_match=filter_type_match,
            filter_type_not_match=filter_type_not_match,
            filter_email_eq=filter_email_eq,
            filter_email_not_eq=filter_email_not_eq,
            filter_email_eql=filter_email_eql,
            filter_email_not_eql=filter_email_not_eql,
            filter_email_prefix=filter_email_prefix,
            filter_email_not_prefix=filter_email_not_prefix,
            filter_email_suffix=filter_email_suffix,
            filter_email_not_suffix=filter_email_not_suffix,
            filter_email_match=filter_email_match,
            filter_email_not_match=filter_email_not_match,
            filter_address_eq=filter_address_eq,
            filter_address_not_eq=filter_address_not_eq,
            filter_address_eql=filter_address_eql,
            filter_address_not_eql=filter_address_not_eql,
            filter_address_prefix=filter_address_prefix,
            filter_address_not_prefix=filter_address_not_prefix,
            filter_address_suffix=filter_address_suffix,
            filter_address_not_suffix=filter_address_not_suffix,
            filter_address_match=filter_address_match,
            filter_address_not_match=filter_address_not_match,
            filter_zip_code_eq=filter_zip_code_eq,
            filter_zip_code_not_eq=filter_zip_code_not_eq,
            filter_zip_code_gt=filter_zip_code_gt,
            filter_zip_code_gte=filter_zip_code_gte,
            filter_zip_code_lt=filter_zip_code_lt,
            filter_zip_code_lte=filter_zip_code_lte,
            filter_town_eq=filter_town_eq,
            filter_town_not_eq=filter_town_not_eq,
            filter_town_eql=filter_town_eql,
            filter_town_not_eql=filter_town_not_eql,
            filter_town_prefix=filter_town_prefix,
            filter_town_not_prefix=filter_town_not_prefix,
            filter_town_suffix=filter_town_suffix,
            filter_town_not_suffix=filter_town_not_suffix,
            filter_town_match=filter_town_match,
            filter_town_not_match=filter_town_not_match,
            filter_country_eq=filter_country_eq,
            filter_country_not_eq=filter_country_not_eq,
            filter_country_eql=filter_country_eql,
            filter_country_not_eql=filter_country_not_eql,
            filter_country_prefix=filter_country_prefix,
            filter_country_not_prefix=filter_country_not_prefix,
            filter_country_suffix=filter_country_suffix,
            filter_country_not_suffix=filter_country_not_suffix,
            filter_country_match=filter_country_match,
            filter_country_not_match=filter_country_not_match,
            filter_require_person_add_requests_eq=filter_require_person_add_requests_eq,
            filter_self_registration_url_eq=filter_self_registration_url_eq,
            filter_self_registration_url_not_eq=filter_self_registration_url_not_eq,
            filter_self_registration_url_eql=filter_self_registration_url_eql,
            filter_self_registration_url_not_eql=filter_self_registration_url_not_eql,
            filter_self_registration_url_prefix=filter_self_registration_url_prefix,
            filter_self_registration_url_not_prefix=filter_self_registration_url_not_prefix,
            filter_self_registration_url_suffix=filter_self_registration_url_suffix,
            filter_self_registration_url_not_suffix=filter_self_registration_url_not_suffix,
            filter_self_registration_url_match=filter_self_registration_url_match,
            filter_self_registration_url_not_match=filter_self_registration_url_not_match,
            filter_archived_at_eq=filter_archived_at_eq,
            filter_archived_at_not_eq=filter_archived_at_not_eq,
            filter_archived_at_gt=filter_archived_at_gt,
            filter_archived_at_gte=filter_archived_at_gte,
            filter_archived_at_lt=filter_archived_at_lt,
            filter_archived_at_lte=filter_archived_at_lte,
            filter_created_at_eq=filter_created_at_eq,
            filter_created_at_not_eq=filter_created_at_not_eq,
            filter_created_at_gt=filter_created_at_gt,
            filter_created_at_gte=filter_created_at_gte,
            filter_created_at_lt=filter_created_at_lt,
            filter_created_at_lte=filter_created_at_lte,
            filter_updated_at_eq=filter_updated_at_eq,
            filter_updated_at_not_eq=filter_updated_at_not_eq,
            filter_updated_at_gt=filter_updated_at_gt,
            filter_updated_at_gte=filter_updated_at_gte,
            filter_updated_at_lt=filter_updated_at_lt,
            filter_updated_at_lte=filter_updated_at_lte,
            filter_deleted_at_eq=filter_deleted_at_eq,
            filter_deleted_at_not_eq=filter_deleted_at_not_eq,
            filter_deleted_at_gt=filter_deleted_at_gt,
            filter_deleted_at_gte=filter_deleted_at_gte,
            filter_deleted_at_lt=filter_deleted_at_lt,
            filter_deleted_at_lte=filter_deleted_at_lte,
            filter_with_deleted_eq=filter_with_deleted_eq,
            filter_with_archived_eq=filter_with_archived_eq,
            fields_people=fields_people,
            fields_phone_numbers=fields_phone_numbers,
            fields_social_accounts=fields_social_accounts,
            fields_additional_emails=fields_additional_emails,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
            _additional_query_params=_additional_query_params,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GroupsCollection",
            '401': "JsonapiFailure",
            '403': "JsonapiFailure",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def list_groups_with_http_info(
        self,
        include: Annotated[Optional[List[StrictStr]], Field(description="[Include related resources](https://jsonapi.org/format/#fetching-includes)")] = None,
        sort: Annotated[Optional[List[StrictStr]], Field(description="[Sort groups according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)  You should not include both ascending `id` and descending `-id` fields the same time  ")] = None,
        fields_groups: Annotated[Optional[List[GroupsReadableAttribute]], Field(description="[Include only specified fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        extra_fields_groups: Annotated[Optional[List[GroupsExtraAttribute]], Field(description="[Include specified extra fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        filter_id_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by layer using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_require_person_add_requests_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by require_person_add_requests using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_with_deleted_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by with_deleted using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_with_archived_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by with_archived using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        fields_people: Annotated[Optional[List[PeopleReadableAttribute]], Field(description="[Include only specified fields of Person in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        fields_phone_numbers: Annotated[Optional[List[PhoneNumbersReadableAttribute]], Field(description="[Include only specified fields of Phone number in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        fields_social_accounts: Annotated[Optional[List[SocialAccountsReadableAttribute]], Field(description="[Include only specified fields of Social account in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        fields_additional_emails: Annotated[Optional[List[AdditionalEmailsReadableAttribute]], Field(description="[Include only specified fields of Additional email in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
        _additional_query_params: Optional[Dict[StrictStr, Any]] = None,
    ) -> ApiResponse[GroupsCollection]:
        """List Groups


        :param include: [Include related resources](https://jsonapi.org/format/#fetching-includes)
        :type include: List[str]
        :param sort: [Sort groups according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)  You should not include both ascending `id` and descending `-id` fields the same time  
        :type sort: List[str]
        :param fields_groups: [Include only specified fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_groups: List[GroupsReadableAttribute]
        :param extra_fields_groups: [Include specified extra fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type extra_fields_groups: List[GroupsExtraAttribute]
        :param filter_id_eq: [Filter Group by id using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_eq: List[int]
        :param filter_id_not_eq: [Filter Group by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_not_eq: List[int]
        :param filter_id_gt: [Filter Group by id using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_gt: List[int]
        :param filter_id_gte: [Filter Group by id using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_gte: List[int]
        :param filter_id_lt: [Filter Group by id using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_lt: List[int]
        :param filter_id_lte: [Filter Group by id using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_lte: List[int]
        :param filter_name_eq: [Filter Group by name using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_eq: List[str]
        :param filter_name_not_eq: [Filter Group by name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_eq: List[str]
        :param filter_name_eql: [Filter Group by name using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_eql: List[str]
        :param filter_name_not_eql: [Filter Group by name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_eql: List[str]
        :param filter_name_prefix: [Filter Group by name using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_prefix: List[str]
        :param filter_name_not_prefix: [Filter Group by name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_prefix: List[str]
        :param filter_name_suffix: [Filter Group by name using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_suffix: List[str]
        :param filter_name_not_suffix: [Filter Group by name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_suffix: List[str]
        :param filter_name_match: [Filter Group by name using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_match: List[str]
        :param filter_name_not_match: [Filter Group by name using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_match: List[str]
        :param filter_short_name_eq: [Filter Group by short_name using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_eq: List[str]
        :param filter_short_name_not_eq: [Filter Group by short_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_eq: List[str]
        :param filter_short_name_eql: [Filter Group by short_name using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_eql: List[str]
        :param filter_short_name_not_eql: [Filter Group by short_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_eql: List[str]
        :param filter_short_name_prefix: [Filter Group by short_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_prefix: List[str]
        :param filter_short_name_not_prefix: [Filter Group by short_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_prefix: List[str]
        :param filter_short_name_suffix: [Filter Group by short_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_suffix: List[str]
        :param filter_short_name_not_suffix: [Filter Group by short_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_suffix: List[str]
        :param filter_short_name_match: [Filter Group by short_name using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_match: List[str]
        :param filter_short_name_not_match: [Filter Group by short_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_match: List[str]
        :param filter_display_name_eq: [Filter Group by display_name using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_eq: List[str]
        :param filter_display_name_not_eq: [Filter Group by display_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_eq: List[str]
        :param filter_display_name_eql: [Filter Group by display_name using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_eql: List[str]
        :param filter_display_name_not_eql: [Filter Group by display_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_eql: List[str]
        :param filter_display_name_prefix: [Filter Group by display_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_prefix: List[str]
        :param filter_display_name_not_prefix: [Filter Group by display_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_prefix: List[str]
        :param filter_display_name_suffix: [Filter Group by display_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_suffix: List[str]
        :param filter_display_name_not_suffix: [Filter Group by display_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_suffix: List[str]
        :param filter_display_name_match: [Filter Group by display_name using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_match: List[str]
        :param filter_display_name_not_match: [Filter Group by display_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_match: List[str]
        :param filter_description_eq: [Filter Group by description using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_eq: List[str]
        :param filter_description_not_eq: [Filter Group by description using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_eq: List[str]
        :param filter_description_eql: [Filter Group by description using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_eql: List[str]
        :param filter_description_not_eql: [Filter Group by description using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_eql: List[str]
        :param filter_description_prefix: [Filter Group by description using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_prefix: List[str]
        :param filter_description_not_prefix: [Filter Group by description using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_prefix: List[str]
        :param filter_description_suffix: [Filter Group by description using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_suffix: List[str]
        :param filter_description_not_suffix: [Filter Group by description using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_suffix: List[str]
        :param filter_description_match: [Filter Group by description using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_match: List[str]
        :param filter_description_not_match: [Filter Group by description using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_match: List[str]
        :param filter_layer_eq: [Filter Group by layer using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_eq: bool
        :param filter_parent_id_eq: [Filter Group by parent_id using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_eq: List[int]
        :param filter_parent_id_not_eq: [Filter Group by parent_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_not_eq: List[int]
        :param filter_parent_id_gt: [Filter Group by parent_id using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_gt: List[int]
        :param filter_parent_id_gte: [Filter Group by parent_id using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_gte: List[int]
        :param filter_parent_id_lt: [Filter Group by parent_id using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_lt: List[int]
        :param filter_parent_id_lte: [Filter Group by parent_id using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_lte: List[int]
        :param filter_layer_group_id_eq: [Filter Group by layer_group_id using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_eq: List[int]
        :param filter_layer_group_id_not_eq: [Filter Group by layer_group_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_not_eq: List[int]
        :param filter_layer_group_id_gt: [Filter Group by layer_group_id using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_gt: List[int]
        :param filter_layer_group_id_gte: [Filter Group by layer_group_id using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_gte: List[int]
        :param filter_layer_group_id_lt: [Filter Group by layer_group_id using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_lt: List[int]
        :param filter_layer_group_id_lte: [Filter Group by layer_group_id using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_lte: List[int]
        :param filter_type_eq: [Filter Group by type using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_eq: List[str]
        :param filter_type_not_eq: [Filter Group by type using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_eq: List[str]
        :param filter_type_eql: [Filter Group by type using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_eql: List[str]
        :param filter_type_not_eql: [Filter Group by type using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_eql: List[str]
        :param filter_type_prefix: [Filter Group by type using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_prefix: List[str]
        :param filter_type_not_prefix: [Filter Group by type using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_prefix: List[str]
        :param filter_type_suffix: [Filter Group by type using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_suffix: List[str]
        :param filter_type_not_suffix: [Filter Group by type using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_suffix: List[str]
        :param filter_type_match: [Filter Group by type using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_match: List[str]
        :param filter_type_not_match: [Filter Group by type using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_match: List[str]
        :param filter_email_eq: [Filter Group by email using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_eq: List[str]
        :param filter_email_not_eq: [Filter Group by email using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_eq: List[str]
        :param filter_email_eql: [Filter Group by email using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_eql: List[str]
        :param filter_email_not_eql: [Filter Group by email using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_eql: List[str]
        :param filter_email_prefix: [Filter Group by email using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_prefix: List[str]
        :param filter_email_not_prefix: [Filter Group by email using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_prefix: List[str]
        :param filter_email_suffix: [Filter Group by email using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_suffix: List[str]
        :param filter_email_not_suffix: [Filter Group by email using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_suffix: List[str]
        :param filter_email_match: [Filter Group by email using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_match: List[str]
        :param filter_email_not_match: [Filter Group by email using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_match: List[str]
        :param filter_address_eq: [Filter Group by address using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_eq: List[str]
        :param filter_address_not_eq: [Filter Group by address using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_eq: List[str]
        :param filter_address_eql: [Filter Group by address using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_eql: List[str]
        :param filter_address_not_eql: [Filter Group by address using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_eql: List[str]
        :param filter_address_prefix: [Filter Group by address using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_prefix: List[str]
        :param filter_address_not_prefix: [Filter Group by address using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_prefix: List[str]
        :param filter_address_suffix: [Filter Group by address using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_suffix: List[str]
        :param filter_address_not_suffix: [Filter Group by address using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_suffix: List[str]
        :param filter_address_match: [Filter Group by address using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_match: List[str]
        :param filter_address_not_match: [Filter Group by address using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_match: List[str]
        :param filter_zip_code_eq: [Filter Group by zip_code using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_eq: List[int]
        :param filter_zip_code_not_eq: [Filter Group by zip_code using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_not_eq: List[int]
        :param filter_zip_code_gt: [Filter Group by zip_code using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_gt: List[int]
        :param filter_zip_code_gte: [Filter Group by zip_code using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_gte: List[int]
        :param filter_zip_code_lt: [Filter Group by zip_code using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_lt: List[int]
        :param filter_zip_code_lte: [Filter Group by zip_code using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_lte: List[int]
        :param filter_town_eq: [Filter Group by town using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_eq: List[str]
        :param filter_town_not_eq: [Filter Group by town using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_eq: List[str]
        :param filter_town_eql: [Filter Group by town using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_eql: List[str]
        :param filter_town_not_eql: [Filter Group by town using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_eql: List[str]
        :param filter_town_prefix: [Filter Group by town using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_prefix: List[str]
        :param filter_town_not_prefix: [Filter Group by town using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_prefix: List[str]
        :param filter_town_suffix: [Filter Group by town using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_suffix: List[str]
        :param filter_town_not_suffix: [Filter Group by town using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_suffix: List[str]
        :param filter_town_match: [Filter Group by town using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_match: List[str]
        :param filter_town_not_match: [Filter Group by town using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_match: List[str]
        :param filter_country_eq: [Filter Group by country using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_eq: List[str]
        :param filter_country_not_eq: [Filter Group by country using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_eq: List[str]
        :param filter_country_eql: [Filter Group by country using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_eql: List[str]
        :param filter_country_not_eql: [Filter Group by country using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_eql: List[str]
        :param filter_country_prefix: [Filter Group by country using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_prefix: List[str]
        :param filter_country_not_prefix: [Filter Group by country using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_prefix: List[str]
        :param filter_country_suffix: [Filter Group by country using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_suffix: List[str]
        :param filter_country_not_suffix: [Filter Group by country using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_suffix: List[str]
        :param filter_country_match: [Filter Group by country using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_match: List[str]
        :param filter_country_not_match: [Filter Group by country using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_match: List[str]
        :param filter_require_person_add_requests_eq: [Filter Group by require_person_add_requests using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_require_person_add_requests_eq: bool
        :param filter_self_registration_url_eq: [Filter Group by self_registration_url using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_eq: List[str]
        :param filter_self_registration_url_not_eq: [Filter Group by self_registration_url using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_eq: List[str]
        :param filter_self_registration_url_eql: [Filter Group by self_registration_url using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_eql: List[str]
        :param filter_self_registration_url_not_eql: [Filter Group by self_registration_url using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_eql: List[str]
        :param filter_self_registration_url_prefix: [Filter Group by self_registration_url using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_prefix: List[str]
        :param filter_self_registration_url_not_prefix: [Filter Group by self_registration_url using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_prefix: List[str]
        :param filter_self_registration_url_suffix: [Filter Group by self_registration_url using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_suffix: List[str]
        :param filter_self_registration_url_not_suffix: [Filter Group by self_registration_url using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_suffix: List[str]
        :param filter_self_registration_url_match: [Filter Group by self_registration_url using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_match: List[str]
        :param filter_self_registration_url_not_match: [Filter Group by self_registration_url using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_match: List[str]
        :param filter_archived_at_eq: [Filter Group by archived_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_eq: List[datetime]
        :param filter_archived_at_not_eq: [Filter Group by archived_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_not_eq: List[datetime]
        :param filter_archived_at_gt: [Filter Group by archived_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_gt: List[datetime]
        :param filter_archived_at_gte: [Filter Group by archived_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_gte: List[datetime]
        :param filter_archived_at_lt: [Filter Group by archived_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_lt: List[datetime]
        :param filter_archived_at_lte: [Filter Group by archived_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_lte: List[datetime]
        :param filter_created_at_eq: [Filter Group by created_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_eq: List[datetime]
        :param filter_created_at_not_eq: [Filter Group by created_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_not_eq: List[datetime]
        :param filter_created_at_gt: [Filter Group by created_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_gt: List[datetime]
        :param filter_created_at_gte: [Filter Group by created_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_gte: List[datetime]
        :param filter_created_at_lt: [Filter Group by created_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_lt: List[datetime]
        :param filter_created_at_lte: [Filter Group by created_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_lte: List[datetime]
        :param filter_updated_at_eq: [Filter Group by updated_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_eq: List[datetime]
        :param filter_updated_at_not_eq: [Filter Group by updated_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_not_eq: List[datetime]
        :param filter_updated_at_gt: [Filter Group by updated_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_gt: List[datetime]
        :param filter_updated_at_gte: [Filter Group by updated_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_gte: List[datetime]
        :param filter_updated_at_lt: [Filter Group by updated_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_lt: List[datetime]
        :param filter_updated_at_lte: [Filter Group by updated_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_lte: List[datetime]
        :param filter_deleted_at_eq: [Filter Group by deleted_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_eq: List[datetime]
        :param filter_deleted_at_not_eq: [Filter Group by deleted_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_not_eq: List[datetime]
        :param filter_deleted_at_gt: [Filter Group by deleted_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_gt: List[datetime]
        :param filter_deleted_at_gte: [Filter Group by deleted_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_gte: List[datetime]
        :param filter_deleted_at_lt: [Filter Group by deleted_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_lt: List[datetime]
        :param filter_deleted_at_lte: [Filter Group by deleted_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_lte: List[datetime]
        :param filter_with_deleted_eq: [Filter Group by with_deleted using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_with_deleted_eq: bool
        :param filter_with_archived_eq: [Filter Group by with_archived using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_with_archived_eq: bool
        :param fields_people: [Include only specified fields of Person in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_people: List[PeopleReadableAttribute]
        :param fields_phone_numbers: [Include only specified fields of Phone number in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_phone_numbers: List[PhoneNumbersReadableAttribute]
        :param fields_social_accounts: [Include only specified fields of Social account in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_social_accounts: List[SocialAccountsReadableAttribute]
        :param fields_additional_emails: [Include only specified fields of Additional email in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_additional_emails: List[AdditionalEmailsReadableAttribute]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._list_groups_serialize(
            include=include,
            sort=sort,
            fields_groups=fields_groups,
            extra_fields_groups=extra_fields_groups,
            filter_id_eq=filter_id_eq,
            filter_id_not_eq=filter_id_not_eq,
            filter_id_gt=filter_id_gt,
            filter_id_gte=filter_id_gte,
            filter_id_lt=filter_id_lt,
            filter_id_lte=filter_id_lte,
            filter_name_eq=filter_name_eq,
            filter_name_not_eq=filter_name_not_eq,
            filter_name_eql=filter_name_eql,
            filter_name_not_eql=filter_name_not_eql,
            filter_name_prefix=filter_name_prefix,
            filter_name_not_prefix=filter_name_not_prefix,
            filter_name_suffix=filter_name_suffix,
            filter_name_not_suffix=filter_name_not_suffix,
            filter_name_match=filter_name_match,
            filter_name_not_match=filter_name_not_match,
            filter_short_name_eq=filter_short_name_eq,
            filter_short_name_not_eq=filter_short_name_not_eq,
            filter_short_name_eql=filter_short_name_eql,
            filter_short_name_not_eql=filter_short_name_not_eql,
            filter_short_name_prefix=filter_short_name_prefix,
            filter_short_name_not_prefix=filter_short_name_not_prefix,
            filter_short_name_suffix=filter_short_name_suffix,
            filter_short_name_not_suffix=filter_short_name_not_suffix,
            filter_short_name_match=filter_short_name_match,
            filter_short_name_not_match=filter_short_name_not_match,
            filter_display_name_eq=filter_display_name_eq,
            filter_display_name_not_eq=filter_display_name_not_eq,
            filter_display_name_eql=filter_display_name_eql,
            filter_display_name_not_eql=filter_display_name_not_eql,
            filter_display_name_prefix=filter_display_name_prefix,
            filter_display_name_not_prefix=filter_display_name_not_prefix,
            filter_display_name_suffix=filter_display_name_suffix,
            filter_display_name_not_suffix=filter_display_name_not_suffix,
            filter_display_name_match=filter_display_name_match,
            filter_display_name_not_match=filter_display_name_not_match,
            filter_description_eq=filter_description_eq,
            filter_description_not_eq=filter_description_not_eq,
            filter_description_eql=filter_description_eql,
            filter_description_not_eql=filter_description_not_eql,
            filter_description_prefix=filter_description_prefix,
            filter_description_not_prefix=filter_description_not_prefix,
            filter_description_suffix=filter_description_suffix,
            filter_description_not_suffix=filter_description_not_suffix,
            filter_description_match=filter_description_match,
            filter_description_not_match=filter_description_not_match,
            filter_layer_eq=filter_layer_eq,
            filter_parent_id_eq=filter_parent_id_eq,
            filter_parent_id_not_eq=filter_parent_id_not_eq,
            filter_parent_id_gt=filter_parent_id_gt,
            filter_parent_id_gte=filter_parent_id_gte,
            filter_parent_id_lt=filter_parent_id_lt,
            filter_parent_id_lte=filter_parent_id_lte,
            filter_layer_group_id_eq=filter_layer_group_id_eq,
            filter_layer_group_id_not_eq=filter_layer_group_id_not_eq,
            filter_layer_group_id_gt=filter_layer_group_id_gt,
            filter_layer_group_id_gte=filter_layer_group_id_gte,
            filter_layer_group_id_lt=filter_layer_group_id_lt,
            filter_layer_group_id_lte=filter_layer_group_id_lte,
            filter_type_eq=filter_type_eq,
            filter_type_not_eq=filter_type_not_eq,
            filter_type_eql=filter_type_eql,
            filter_type_not_eql=filter_type_not_eql,
            filter_type_prefix=filter_type_prefix,
            filter_type_not_prefix=filter_type_not_prefix,
            filter_type_suffix=filter_type_suffix,
            filter_type_not_suffix=filter_type_not_suffix,
            filter_type_match=filter_type_match,
            filter_type_not_match=filter_type_not_match,
            filter_email_eq=filter_email_eq,
            filter_email_not_eq=filter_email_not_eq,
            filter_email_eql=filter_email_eql,
            filter_email_not_eql=filter_email_not_eql,
            filter_email_prefix=filter_email_prefix,
            filter_email_not_prefix=filter_email_not_prefix,
            filter_email_suffix=filter_email_suffix,
            filter_email_not_suffix=filter_email_not_suffix,
            filter_email_match=filter_email_match,
            filter_email_not_match=filter_email_not_match,
            filter_address_eq=filter_address_eq,
            filter_address_not_eq=filter_address_not_eq,
            filter_address_eql=filter_address_eql,
            filter_address_not_eql=filter_address_not_eql,
            filter_address_prefix=filter_address_prefix,
            filter_address_not_prefix=filter_address_not_prefix,
            filter_address_suffix=filter_address_suffix,
            filter_address_not_suffix=filter_address_not_suffix,
            filter_address_match=filter_address_match,
            filter_address_not_match=filter_address_not_match,
            filter_zip_code_eq=filter_zip_code_eq,
            filter_zip_code_not_eq=filter_zip_code_not_eq,
            filter_zip_code_gt=filter_zip_code_gt,
            filter_zip_code_gte=filter_zip_code_gte,
            filter_zip_code_lt=filter_zip_code_lt,
            filter_zip_code_lte=filter_zip_code_lte,
            filter_town_eq=filter_town_eq,
            filter_town_not_eq=filter_town_not_eq,
            filter_town_eql=filter_town_eql,
            filter_town_not_eql=filter_town_not_eql,
            filter_town_prefix=filter_town_prefix,
            filter_town_not_prefix=filter_town_not_prefix,
            filter_town_suffix=filter_town_suffix,
            filter_town_not_suffix=filter_town_not_suffix,
            filter_town_match=filter_town_match,
            filter_town_not_match=filter_town_not_match,
            filter_country_eq=filter_country_eq,
            filter_country_not_eq=filter_country_not_eq,
            filter_country_eql=filter_country_eql,
            filter_country_not_eql=filter_country_not_eql,
            filter_country_prefix=filter_country_prefix,
            filter_country_not_prefix=filter_country_not_prefix,
            filter_country_suffix=filter_country_suffix,
            filter_country_not_suffix=filter_country_not_suffix,
            filter_country_match=filter_country_match,
            filter_country_not_match=filter_country_not_match,
            filter_require_person_add_requests_eq=filter_require_person_add_requests_eq,
            filter_self_registration_url_eq=filter_self_registration_url_eq,
            filter_self_registration_url_not_eq=filter_self_registration_url_not_eq,
            filter_self_registration_url_eql=filter_self_registration_url_eql,
            filter_self_registration_url_not_eql=filter_self_registration_url_not_eql,
            filter_self_registration_url_prefix=filter_self_registration_url_prefix,
            filter_self_registration_url_not_prefix=filter_self_registration_url_not_prefix,
            filter_self_registration_url_suffix=filter_self_registration_url_suffix,
            filter_self_registration_url_not_suffix=filter_self_registration_url_not_suffix,
            filter_self_registration_url_match=filter_self_registration_url_match,
            filter_self_registration_url_not_match=filter_self_registration_url_not_match,
            filter_archived_at_eq=filter_archived_at_eq,
            filter_archived_at_not_eq=filter_archived_at_not_eq,
            filter_archived_at_gt=filter_archived_at_gt,
            filter_archived_at_gte=filter_archived_at_gte,
            filter_archived_at_lt=filter_archived_at_lt,
            filter_archived_at_lte=filter_archived_at_lte,
            filter_created_at_eq=filter_created_at_eq,
            filter_created_at_not_eq=filter_created_at_not_eq,
            filter_created_at_gt=filter_created_at_gt,
            filter_created_at_gte=filter_created_at_gte,
            filter_created_at_lt=filter_created_at_lt,
            filter_created_at_lte=filter_created_at_lte,
            filter_updated_at_eq=filter_updated_at_eq,
            filter_updated_at_not_eq=filter_updated_at_not_eq,
            filter_updated_at_gt=filter_updated_at_gt,
            filter_updated_at_gte=filter_updated_at_gte,
            filter_updated_at_lt=filter_updated_at_lt,
            filter_updated_at_lte=filter_updated_at_lte,
            filter_deleted_at_eq=filter_deleted_at_eq,
            filter_deleted_at_not_eq=filter_deleted_at_not_eq,
            filter_deleted_at_gt=filter_deleted_at_gt,
            filter_deleted_at_gte=filter_deleted_at_gte,
            filter_deleted_at_lt=filter_deleted_at_lt,
            filter_deleted_at_lte=filter_deleted_at_lte,
            filter_with_deleted_eq=filter_with_deleted_eq,
            filter_with_archived_eq=filter_with_archived_eq,
            fields_people=fields_people,
            fields_phone_numbers=fields_phone_numbers,
            fields_social_accounts=fields_social_accounts,
            fields_additional_emails=fields_additional_emails,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
            _additional_query_params=_additional_query_params,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GroupsCollection",
            '401': "JsonapiFailure",
            '403': "JsonapiFailure",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def list_groups_without_preload_content(
        self,
        include: Annotated[Optional[List[StrictStr]], Field(description="[Include related resources](https://jsonapi.org/format/#fetching-includes)")] = None,
        sort: Annotated[Optional[List[StrictStr]], Field(description="[Sort groups according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)  You should not include both ascending `id` and descending `-id` fields the same time  ")] = None,
        fields_groups: Annotated[Optional[List[GroupsReadableAttribute]], Field(description="[Include only specified fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        extra_fields_groups: Annotated[Optional[List[GroupsExtraAttribute]], Field(description="[Include specified extra fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        filter_id_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_id_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by id using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_name_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by name using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_short_name_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by short_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_display_name_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by display_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_description_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by description using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by layer using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_parent_id_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by parent_id using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_layer_group_id_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by layer_group_id using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_type_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by type using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_email_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by email using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_address_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by address using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_not_eq: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_gt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_gte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_lt: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_zip_code_lte: Annotated[Optional[List[StrictInt]], Field(description="[Filter Group by zip_code using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_town_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by town using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_country_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by country using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_require_person_add_requests_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by require_person_add_requests using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_eq: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_eql: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_eql operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_prefix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_suffix: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_self_registration_url_not_match: Annotated[Optional[List[StrictStr]], Field(description="[Filter Group by self_registration_url using not_match operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_archived_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by archived_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_created_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by created_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_updated_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by updated_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_not_eq: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_gt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using gt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_gte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using gte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_lt: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using lt operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_deleted_at_lte: Annotated[Optional[List[datetime]], Field(description="[Filter Group by deleted_at using lte operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_with_deleted_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by with_deleted using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        filter_with_archived_eq: Annotated[Optional[StrictBool], Field(description="[Filter Group by with_archived using eq operator](https://jsonapi.org/format/#fetching-filtering)")] = None,
        fields_people: Annotated[Optional[List[PeopleReadableAttribute]], Field(description="[Include only specified fields of Person in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        fields_phone_numbers: Annotated[Optional[List[PhoneNumbersReadableAttribute]], Field(description="[Include only specified fields of Phone number in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        fields_social_accounts: Annotated[Optional[List[SocialAccountsReadableAttribute]], Field(description="[Include only specified fields of Social account in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        fields_additional_emails: Annotated[Optional[List[AdditionalEmailsReadableAttribute]], Field(description="[Include only specified fields of Additional email in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
        _additional_query_params: Optional[Dict[StrictStr, Any]] = None,
    ) -> RESTResponseType:
        """List Groups


        :param include: [Include related resources](https://jsonapi.org/format/#fetching-includes)
        :type include: List[str]
        :param sort: [Sort groups according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)  You should not include both ascending `id` and descending `-id` fields the same time  
        :type sort: List[str]
        :param fields_groups: [Include only specified fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_groups: List[GroupsReadableAttribute]
        :param extra_fields_groups: [Include specified extra fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type extra_fields_groups: List[GroupsExtraAttribute]
        :param filter_id_eq: [Filter Group by id using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_eq: List[int]
        :param filter_id_not_eq: [Filter Group by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_not_eq: List[int]
        :param filter_id_gt: [Filter Group by id using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_gt: List[int]
        :param filter_id_gte: [Filter Group by id using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_gte: List[int]
        :param filter_id_lt: [Filter Group by id using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_lt: List[int]
        :param filter_id_lte: [Filter Group by id using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_id_lte: List[int]
        :param filter_name_eq: [Filter Group by name using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_eq: List[str]
        :param filter_name_not_eq: [Filter Group by name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_eq: List[str]
        :param filter_name_eql: [Filter Group by name using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_eql: List[str]
        :param filter_name_not_eql: [Filter Group by name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_eql: List[str]
        :param filter_name_prefix: [Filter Group by name using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_prefix: List[str]
        :param filter_name_not_prefix: [Filter Group by name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_prefix: List[str]
        :param filter_name_suffix: [Filter Group by name using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_suffix: List[str]
        :param filter_name_not_suffix: [Filter Group by name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_suffix: List[str]
        :param filter_name_match: [Filter Group by name using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_match: List[str]
        :param filter_name_not_match: [Filter Group by name using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_name_not_match: List[str]
        :param filter_short_name_eq: [Filter Group by short_name using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_eq: List[str]
        :param filter_short_name_not_eq: [Filter Group by short_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_eq: List[str]
        :param filter_short_name_eql: [Filter Group by short_name using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_eql: List[str]
        :param filter_short_name_not_eql: [Filter Group by short_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_eql: List[str]
        :param filter_short_name_prefix: [Filter Group by short_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_prefix: List[str]
        :param filter_short_name_not_prefix: [Filter Group by short_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_prefix: List[str]
        :param filter_short_name_suffix: [Filter Group by short_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_suffix: List[str]
        :param filter_short_name_not_suffix: [Filter Group by short_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_suffix: List[str]
        :param filter_short_name_match: [Filter Group by short_name using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_match: List[str]
        :param filter_short_name_not_match: [Filter Group by short_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_short_name_not_match: List[str]
        :param filter_display_name_eq: [Filter Group by display_name using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_eq: List[str]
        :param filter_display_name_not_eq: [Filter Group by display_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_eq: List[str]
        :param filter_display_name_eql: [Filter Group by display_name using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_eql: List[str]
        :param filter_display_name_not_eql: [Filter Group by display_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_eql: List[str]
        :param filter_display_name_prefix: [Filter Group by display_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_prefix: List[str]
        :param filter_display_name_not_prefix: [Filter Group by display_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_prefix: List[str]
        :param filter_display_name_suffix: [Filter Group by display_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_suffix: List[str]
        :param filter_display_name_not_suffix: [Filter Group by display_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_suffix: List[str]
        :param filter_display_name_match: [Filter Group by display_name using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_match: List[str]
        :param filter_display_name_not_match: [Filter Group by display_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_display_name_not_match: List[str]
        :param filter_description_eq: [Filter Group by description using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_eq: List[str]
        :param filter_description_not_eq: [Filter Group by description using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_eq: List[str]
        :param filter_description_eql: [Filter Group by description using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_eql: List[str]
        :param filter_description_not_eql: [Filter Group by description using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_eql: List[str]
        :param filter_description_prefix: [Filter Group by description using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_prefix: List[str]
        :param filter_description_not_prefix: [Filter Group by description using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_prefix: List[str]
        :param filter_description_suffix: [Filter Group by description using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_suffix: List[str]
        :param filter_description_not_suffix: [Filter Group by description using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_suffix: List[str]
        :param filter_description_match: [Filter Group by description using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_match: List[str]
        :param filter_description_not_match: [Filter Group by description using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_description_not_match: List[str]
        :param filter_layer_eq: [Filter Group by layer using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_eq: bool
        :param filter_parent_id_eq: [Filter Group by parent_id using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_eq: List[int]
        :param filter_parent_id_not_eq: [Filter Group by parent_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_not_eq: List[int]
        :param filter_parent_id_gt: [Filter Group by parent_id using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_gt: List[int]
        :param filter_parent_id_gte: [Filter Group by parent_id using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_gte: List[int]
        :param filter_parent_id_lt: [Filter Group by parent_id using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_lt: List[int]
        :param filter_parent_id_lte: [Filter Group by parent_id using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_parent_id_lte: List[int]
        :param filter_layer_group_id_eq: [Filter Group by layer_group_id using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_eq: List[int]
        :param filter_layer_group_id_not_eq: [Filter Group by layer_group_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_not_eq: List[int]
        :param filter_layer_group_id_gt: [Filter Group by layer_group_id using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_gt: List[int]
        :param filter_layer_group_id_gte: [Filter Group by layer_group_id using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_gte: List[int]
        :param filter_layer_group_id_lt: [Filter Group by layer_group_id using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_lt: List[int]
        :param filter_layer_group_id_lte: [Filter Group by layer_group_id using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_layer_group_id_lte: List[int]
        :param filter_type_eq: [Filter Group by type using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_eq: List[str]
        :param filter_type_not_eq: [Filter Group by type using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_eq: List[str]
        :param filter_type_eql: [Filter Group by type using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_eql: List[str]
        :param filter_type_not_eql: [Filter Group by type using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_eql: List[str]
        :param filter_type_prefix: [Filter Group by type using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_prefix: List[str]
        :param filter_type_not_prefix: [Filter Group by type using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_prefix: List[str]
        :param filter_type_suffix: [Filter Group by type using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_suffix: List[str]
        :param filter_type_not_suffix: [Filter Group by type using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_suffix: List[str]
        :param filter_type_match: [Filter Group by type using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_match: List[str]
        :param filter_type_not_match: [Filter Group by type using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_type_not_match: List[str]
        :param filter_email_eq: [Filter Group by email using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_eq: List[str]
        :param filter_email_not_eq: [Filter Group by email using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_eq: List[str]
        :param filter_email_eql: [Filter Group by email using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_eql: List[str]
        :param filter_email_not_eql: [Filter Group by email using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_eql: List[str]
        :param filter_email_prefix: [Filter Group by email using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_prefix: List[str]
        :param filter_email_not_prefix: [Filter Group by email using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_prefix: List[str]
        :param filter_email_suffix: [Filter Group by email using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_suffix: List[str]
        :param filter_email_not_suffix: [Filter Group by email using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_suffix: List[str]
        :param filter_email_match: [Filter Group by email using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_match: List[str]
        :param filter_email_not_match: [Filter Group by email using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_email_not_match: List[str]
        :param filter_address_eq: [Filter Group by address using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_eq: List[str]
        :param filter_address_not_eq: [Filter Group by address using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_eq: List[str]
        :param filter_address_eql: [Filter Group by address using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_eql: List[str]
        :param filter_address_not_eql: [Filter Group by address using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_eql: List[str]
        :param filter_address_prefix: [Filter Group by address using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_prefix: List[str]
        :param filter_address_not_prefix: [Filter Group by address using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_prefix: List[str]
        :param filter_address_suffix: [Filter Group by address using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_suffix: List[str]
        :param filter_address_not_suffix: [Filter Group by address using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_suffix: List[str]
        :param filter_address_match: [Filter Group by address using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_match: List[str]
        :param filter_address_not_match: [Filter Group by address using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_address_not_match: List[str]
        :param filter_zip_code_eq: [Filter Group by zip_code using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_eq: List[int]
        :param filter_zip_code_not_eq: [Filter Group by zip_code using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_not_eq: List[int]
        :param filter_zip_code_gt: [Filter Group by zip_code using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_gt: List[int]
        :param filter_zip_code_gte: [Filter Group by zip_code using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_gte: List[int]
        :param filter_zip_code_lt: [Filter Group by zip_code using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_lt: List[int]
        :param filter_zip_code_lte: [Filter Group by zip_code using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_zip_code_lte: List[int]
        :param filter_town_eq: [Filter Group by town using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_eq: List[str]
        :param filter_town_not_eq: [Filter Group by town using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_eq: List[str]
        :param filter_town_eql: [Filter Group by town using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_eql: List[str]
        :param filter_town_not_eql: [Filter Group by town using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_eql: List[str]
        :param filter_town_prefix: [Filter Group by town using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_prefix: List[str]
        :param filter_town_not_prefix: [Filter Group by town using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_prefix: List[str]
        :param filter_town_suffix: [Filter Group by town using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_suffix: List[str]
        :param filter_town_not_suffix: [Filter Group by town using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_suffix: List[str]
        :param filter_town_match: [Filter Group by town using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_match: List[str]
        :param filter_town_not_match: [Filter Group by town using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_town_not_match: List[str]
        :param filter_country_eq: [Filter Group by country using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_eq: List[str]
        :param filter_country_not_eq: [Filter Group by country using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_eq: List[str]
        :param filter_country_eql: [Filter Group by country using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_eql: List[str]
        :param filter_country_not_eql: [Filter Group by country using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_eql: List[str]
        :param filter_country_prefix: [Filter Group by country using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_prefix: List[str]
        :param filter_country_not_prefix: [Filter Group by country using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_prefix: List[str]
        :param filter_country_suffix: [Filter Group by country using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_suffix: List[str]
        :param filter_country_not_suffix: [Filter Group by country using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_suffix: List[str]
        :param filter_country_match: [Filter Group by country using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_match: List[str]
        :param filter_country_not_match: [Filter Group by country using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_country_not_match: List[str]
        :param filter_require_person_add_requests_eq: [Filter Group by require_person_add_requests using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_require_person_add_requests_eq: bool
        :param filter_self_registration_url_eq: [Filter Group by self_registration_url using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_eq: List[str]
        :param filter_self_registration_url_not_eq: [Filter Group by self_registration_url using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_eq: List[str]
        :param filter_self_registration_url_eql: [Filter Group by self_registration_url using eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_eql: List[str]
        :param filter_self_registration_url_not_eql: [Filter Group by self_registration_url using not_eql operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_eql: List[str]
        :param filter_self_registration_url_prefix: [Filter Group by self_registration_url using prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_prefix: List[str]
        :param filter_self_registration_url_not_prefix: [Filter Group by self_registration_url using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_prefix: List[str]
        :param filter_self_registration_url_suffix: [Filter Group by self_registration_url using suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_suffix: List[str]
        :param filter_self_registration_url_not_suffix: [Filter Group by self_registration_url using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_suffix: List[str]
        :param filter_self_registration_url_match: [Filter Group by self_registration_url using match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_match: List[str]
        :param filter_self_registration_url_not_match: [Filter Group by self_registration_url using not_match operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_self_registration_url_not_match: List[str]
        :param filter_archived_at_eq: [Filter Group by archived_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_eq: List[datetime]
        :param filter_archived_at_not_eq: [Filter Group by archived_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_not_eq: List[datetime]
        :param filter_archived_at_gt: [Filter Group by archived_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_gt: List[datetime]
        :param filter_archived_at_gte: [Filter Group by archived_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_gte: List[datetime]
        :param filter_archived_at_lt: [Filter Group by archived_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_lt: List[datetime]
        :param filter_archived_at_lte: [Filter Group by archived_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_archived_at_lte: List[datetime]
        :param filter_created_at_eq: [Filter Group by created_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_eq: List[datetime]
        :param filter_created_at_not_eq: [Filter Group by created_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_not_eq: List[datetime]
        :param filter_created_at_gt: [Filter Group by created_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_gt: List[datetime]
        :param filter_created_at_gte: [Filter Group by created_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_gte: List[datetime]
        :param filter_created_at_lt: [Filter Group by created_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_lt: List[datetime]
        :param filter_created_at_lte: [Filter Group by created_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_created_at_lte: List[datetime]
        :param filter_updated_at_eq: [Filter Group by updated_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_eq: List[datetime]
        :param filter_updated_at_not_eq: [Filter Group by updated_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_not_eq: List[datetime]
        :param filter_updated_at_gt: [Filter Group by updated_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_gt: List[datetime]
        :param filter_updated_at_gte: [Filter Group by updated_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_gte: List[datetime]
        :param filter_updated_at_lt: [Filter Group by updated_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_lt: List[datetime]
        :param filter_updated_at_lte: [Filter Group by updated_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_updated_at_lte: List[datetime]
        :param filter_deleted_at_eq: [Filter Group by deleted_at using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_eq: List[datetime]
        :param filter_deleted_at_not_eq: [Filter Group by deleted_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_not_eq: List[datetime]
        :param filter_deleted_at_gt: [Filter Group by deleted_at using gt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_gt: List[datetime]
        :param filter_deleted_at_gte: [Filter Group by deleted_at using gte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_gte: List[datetime]
        :param filter_deleted_at_lt: [Filter Group by deleted_at using lt operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_lt: List[datetime]
        :param filter_deleted_at_lte: [Filter Group by deleted_at using lte operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_deleted_at_lte: List[datetime]
        :param filter_with_deleted_eq: [Filter Group by with_deleted using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_with_deleted_eq: bool
        :param filter_with_archived_eq: [Filter Group by with_archived using eq operator](https://jsonapi.org/format/#fetching-filtering)
        :type filter_with_archived_eq: bool
        :param fields_people: [Include only specified fields of Person in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_people: List[PeopleReadableAttribute]
        :param fields_phone_numbers: [Include only specified fields of Phone number in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_phone_numbers: List[PhoneNumbersReadableAttribute]
        :param fields_social_accounts: [Include only specified fields of Social account in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_social_accounts: List[SocialAccountsReadableAttribute]
        :param fields_additional_emails: [Include only specified fields of Additional email in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)
        :type fields_additional_emails: List[AdditionalEmailsReadableAttribute]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._list_groups_serialize(
            include=include,
            sort=sort,
            fields_groups=fields_groups,
            extra_fields_groups=extra_fields_groups,
            filter_id_eq=filter_id_eq,
            filter_id_not_eq=filter_id_not_eq,
            filter_id_gt=filter_id_gt,
            filter_id_gte=filter_id_gte,
            filter_id_lt=filter_id_lt,
            filter_id_lte=filter_id_lte,
            filter_name_eq=filter_name_eq,
            filter_name_not_eq=filter_name_not_eq,
            filter_name_eql=filter_name_eql,
            filter_name_not_eql=filter_name_not_eql,
            filter_name_prefix=filter_name_prefix,
            filter_name_not_prefix=filter_name_not_prefix,
            filter_name_suffix=filter_name_suffix,
            filter_name_not_suffix=filter_name_not_suffix,
            filter_name_match=filter_name_match,
            filter_name_not_match=filter_name_not_match,
            filter_short_name_eq=filter_short_name_eq,
            filter_short_name_not_eq=filter_short_name_not_eq,
            filter_short_name_eql=filter_short_name_eql,
            filter_short_name_not_eql=filter_short_name_not_eql,
            filter_short_name_prefix=filter_short_name_prefix,
            filter_short_name_not_prefix=filter_short_name_not_prefix,
            filter_short_name_suffix=filter_short_name_suffix,
            filter_short_name_not_suffix=filter_short_name_not_suffix,
            filter_short_name_match=filter_short_name_match,
            filter_short_name_not_match=filter_short_name_not_match,
            filter_display_name_eq=filter_display_name_eq,
            filter_display_name_not_eq=filter_display_name_not_eq,
            filter_display_name_eql=filter_display_name_eql,
            filter_display_name_not_eql=filter_display_name_not_eql,
            filter_display_name_prefix=filter_display_name_prefix,
            filter_display_name_not_prefix=filter_display_name_not_prefix,
            filter_display_name_suffix=filter_display_name_suffix,
            filter_display_name_not_suffix=filter_display_name_not_suffix,
            filter_display_name_match=filter_display_name_match,
            filter_display_name_not_match=filter_display_name_not_match,
            filter_description_eq=filter_description_eq,
            filter_description_not_eq=filter_description_not_eq,
            filter_description_eql=filter_description_eql,
            filter_description_not_eql=filter_description_not_eql,
            filter_description_prefix=filter_description_prefix,
            filter_description_not_prefix=filter_description_not_prefix,
            filter_description_suffix=filter_description_suffix,
            filter_description_not_suffix=filter_description_not_suffix,
            filter_description_match=filter_description_match,
            filter_description_not_match=filter_description_not_match,
            filter_layer_eq=filter_layer_eq,
            filter_parent_id_eq=filter_parent_id_eq,
            filter_parent_id_not_eq=filter_parent_id_not_eq,
            filter_parent_id_gt=filter_parent_id_gt,
            filter_parent_id_gte=filter_parent_id_gte,
            filter_parent_id_lt=filter_parent_id_lt,
            filter_parent_id_lte=filter_parent_id_lte,
            filter_layer_group_id_eq=filter_layer_group_id_eq,
            filter_layer_group_id_not_eq=filter_layer_group_id_not_eq,
            filter_layer_group_id_gt=filter_layer_group_id_gt,
            filter_layer_group_id_gte=filter_layer_group_id_gte,
            filter_layer_group_id_lt=filter_layer_group_id_lt,
            filter_layer_group_id_lte=filter_layer_group_id_lte,
            filter_type_eq=filter_type_eq,
            filter_type_not_eq=filter_type_not_eq,
            filter_type_eql=filter_type_eql,
            filter_type_not_eql=filter_type_not_eql,
            filter_type_prefix=filter_type_prefix,
            filter_type_not_prefix=filter_type_not_prefix,
            filter_type_suffix=filter_type_suffix,
            filter_type_not_suffix=filter_type_not_suffix,
            filter_type_match=filter_type_match,
            filter_type_not_match=filter_type_not_match,
            filter_email_eq=filter_email_eq,
            filter_email_not_eq=filter_email_not_eq,
            filter_email_eql=filter_email_eql,
            filter_email_not_eql=filter_email_not_eql,
            filter_email_prefix=filter_email_prefix,
            filter_email_not_prefix=filter_email_not_prefix,
            filter_email_suffix=filter_email_suffix,
            filter_email_not_suffix=filter_email_not_suffix,
            filter_email_match=filter_email_match,
            filter_email_not_match=filter_email_not_match,
            filter_address_eq=filter_address_eq,
            filter_address_not_eq=filter_address_not_eq,
            filter_address_eql=filter_address_eql,
            filter_address_not_eql=filter_address_not_eql,
            filter_address_prefix=filter_address_prefix,
            filter_address_not_prefix=filter_address_not_prefix,
            filter_address_suffix=filter_address_suffix,
            filter_address_not_suffix=filter_address_not_suffix,
            filter_address_match=filter_address_match,
            filter_address_not_match=filter_address_not_match,
            filter_zip_code_eq=filter_zip_code_eq,
            filter_zip_code_not_eq=filter_zip_code_not_eq,
            filter_zip_code_gt=filter_zip_code_gt,
            filter_zip_code_gte=filter_zip_code_gte,
            filter_zip_code_lt=filter_zip_code_lt,
            filter_zip_code_lte=filter_zip_code_lte,
            filter_town_eq=filter_town_eq,
            filter_town_not_eq=filter_town_not_eq,
            filter_town_eql=filter_town_eql,
            filter_town_not_eql=filter_town_not_eql,
            filter_town_prefix=filter_town_prefix,
            filter_town_not_prefix=filter_town_not_prefix,
            filter_town_suffix=filter_town_suffix,
            filter_town_not_suffix=filter_town_not_suffix,
            filter_town_match=filter_town_match,
            filter_town_not_match=filter_town_not_match,
            filter_country_eq=filter_country_eq,
            filter_country_not_eq=filter_country_not_eq,
            filter_country_eql=filter_country_eql,
            filter_country_not_eql=filter_country_not_eql,
            filter_country_prefix=filter_country_prefix,
            filter_country_not_prefix=filter_country_not_prefix,
            filter_country_suffix=filter_country_suffix,
            filter_country_not_suffix=filter_country_not_suffix,
            filter_country_match=filter_country_match,
            filter_country_not_match=filter_country_not_match,
            filter_require_person_add_requests_eq=filter_require_person_add_requests_eq,
            filter_self_registration_url_eq=filter_self_registration_url_eq,
            filter_self_registration_url_not_eq=filter_self_registration_url_not_eq,
            filter_self_registration_url_eql=filter_self_registration_url_eql,
            filter_self_registration_url_not_eql=filter_self_registration_url_not_eql,
            filter_self_registration_url_prefix=filter_self_registration_url_prefix,
            filter_self_registration_url_not_prefix=filter_self_registration_url_not_prefix,
            filter_self_registration_url_suffix=filter_self_registration_url_suffix,
            filter_self_registration_url_not_suffix=filter_self_registration_url_not_suffix,
            filter_self_registration_url_match=filter_self_registration_url_match,
            filter_self_registration_url_not_match=filter_self_registration_url_not_match,
            filter_archived_at_eq=filter_archived_at_eq,
            filter_archived_at_not_eq=filter_archived_at_not_eq,
            filter_archived_at_gt=filter_archived_at_gt,
            filter_archived_at_gte=filter_archived_at_gte,
            filter_archived_at_lt=filter_archived_at_lt,
            filter_archived_at_lte=filter_archived_at_lte,
            filter_created_at_eq=filter_created_at_eq,
            filter_created_at_not_eq=filter_created_at_not_eq,
            filter_created_at_gt=filter_created_at_gt,
            filter_created_at_gte=filter_created_at_gte,
            filter_created_at_lt=filter_created_at_lt,
            filter_created_at_lte=filter_created_at_lte,
            filter_updated_at_eq=filter_updated_at_eq,
            filter_updated_at_not_eq=filter_updated_at_not_eq,
            filter_updated_at_gt=filter_updated_at_gt,
            filter_updated_at_gte=filter_updated_at_gte,
            filter_updated_at_lt=filter_updated_at_lt,
            filter_updated_at_lte=filter_updated_at_lte,
            filter_deleted_at_eq=filter_deleted_at_eq,
            filter_deleted_at_not_eq=filter_deleted_at_not_eq,
            filter_deleted_at_gt=filter_deleted_at_gt,
            filter_deleted_at_gte=filter_deleted_at_gte,
            filter_deleted_at_lt=filter_deleted_at_lt,
            filter_deleted_at_lte=filter_deleted_at_lte,
            filter_with_deleted_eq=filter_with_deleted_eq,
            filter_with_archived_eq=filter_with_archived_eq,
            fields_people=fields_people,
            fields_phone_numbers=fields_phone_numbers,
            fields_social_accounts=fields_social_accounts,
            fields_additional_emails=fields_additional_emails,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
            _additional_query_params=_additional_query_params,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GroupsCollection",
            '401': "JsonapiFailure",
            '403': "JsonapiFailure",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _list_groups_serialize(
        self,
        include,
        sort,
        fields_groups,
        extra_fields_groups,
        filter_id_eq,
        filter_id_not_eq,
        filter_id_gt,
        filter_id_gte,
        filter_id_lt,
        filter_id_lte,
        filter_name_eq,
        filter_name_not_eq,
        filter_name_eql,
        filter_name_not_eql,
        filter_name_prefix,
        filter_name_not_prefix,
        filter_name_suffix,
        filter_name_not_suffix,
        filter_name_match,
        filter_name_not_match,
        filter_short_name_eq,
        filter_short_name_not_eq,
        filter_short_name_eql,
        filter_short_name_not_eql,
        filter_short_name_prefix,
        filter_short_name_not_prefix,
        filter_short_name_suffix,
        filter_short_name_not_suffix,
        filter_short_name_match,
        filter_short_name_not_match,
        filter_display_name_eq,
        filter_display_name_not_eq,
        filter_display_name_eql,
        filter_display_name_not_eql,
        filter_display_name_prefix,
        filter_display_name_not_prefix,
        filter_display_name_suffix,
        filter_display_name_not_suffix,
        filter_display_name_match,
        filter_display_name_not_match,
        filter_description_eq,
        filter_description_not_eq,
        filter_description_eql,
        filter_description_not_eql,
        filter_description_prefix,
        filter_description_not_prefix,
        filter_description_suffix,
        filter_description_not_suffix,
        filter_description_match,
        filter_description_not_match,
        filter_layer_eq,
        filter_parent_id_eq,
        filter_parent_id_not_eq,
        filter_parent_id_gt,
        filter_parent_id_gte,
        filter_parent_id_lt,
        filter_parent_id_lte,
        filter_layer_group_id_eq,
        filter_layer_group_id_not_eq,
        filter_layer_group_id_gt,
        filter_layer_group_id_gte,
        filter_layer_group_id_lt,
        filter_layer_group_id_lte,
        filter_type_eq,
        filter_type_not_eq,
        filter_type_eql,
        filter_type_not_eql,
        filter_type_prefix,
        filter_type_not_prefix,
        filter_type_suffix,
        filter_type_not_suffix,
        filter_type_match,
        filter_type_not_match,
        filter_email_eq,
        filter_email_not_eq,
        filter_email_eql,
        filter_email_not_eql,
        filter_email_prefix,
        filter_email_not_prefix,
        filter_email_suffix,
        filter_email_not_suffix,
        filter_email_match,
        filter_email_not_match,
        filter_address_eq,
        filter_address_not_eq,
        filter_address_eql,
        filter_address_not_eql,
        filter_address_prefix,
        filter_address_not_prefix,
        filter_address_suffix,
        filter_address_not_suffix,
        filter_address_match,
        filter_address_not_match,
        filter_zip_code_eq,
        filter_zip_code_not_eq,
        filter_zip_code_gt,
        filter_zip_code_gte,
        filter_zip_code_lt,
        filter_zip_code_lte,
        filter_town_eq,
        filter_town_not_eq,
        filter_town_eql,
        filter_town_not_eql,
        filter_town_prefix,
        filter_town_not_prefix,
        filter_town_suffix,
        filter_town_not_suffix,
        filter_town_match,
        filter_town_not_match,
        filter_country_eq,
        filter_country_not_eq,
        filter_country_eql,
        filter_country_not_eql,
        filter_country_prefix,
        filter_country_not_prefix,
        filter_country_suffix,
        filter_country_not_suffix,
        filter_country_match,
        filter_country_not_match,
        filter_require_person_add_requests_eq,
        filter_self_registration_url_eq,
        filter_self_registration_url_not_eq,
        filter_self_registration_url_eql,
        filter_self_registration_url_not_eql,
        filter_self_registration_url_prefix,
        filter_self_registration_url_not_prefix,
        filter_self_registration_url_suffix,
        filter_self_registration_url_not_suffix,
        filter_self_registration_url_match,
        filter_self_registration_url_not_match,
        filter_archived_at_eq,
        filter_archived_at_not_eq,
        filter_archived_at_gt,
        filter_archived_at_gte,
        filter_archived_at_lt,
        filter_archived_at_lte,
        filter_created_at_eq,
        filter_created_at_not_eq,
        filter_created_at_gt,
        filter_created_at_gte,
        filter_created_at_lt,
        filter_created_at_lte,
        filter_updated_at_eq,
        filter_updated_at_not_eq,
        filter_updated_at_gt,
        filter_updated_at_gte,
        filter_updated_at_lt,
        filter_updated_at_lte,
        filter_deleted_at_eq,
        filter_deleted_at_not_eq,
        filter_deleted_at_gt,
        filter_deleted_at_gte,
        filter_deleted_at_lt,
        filter_deleted_at_lte,
        filter_with_deleted_eq,
        filter_with_archived_eq,
        fields_people,
        fields_phone_numbers,
        fields_social_accounts,
        fields_additional_emails,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
        _additional_query_params: Optional[Dict[StrictStr, Any]] = None,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'include': 'csv',
            'sort': 'csv',
            'fields[groups]': 'csv',
            'extra_fields[groups]': 'csv',
            'filter[id][eq]': 'csv',
            'filter[id][not_eq]': 'csv',
            'filter[id][gt]': 'csv',
            'filter[id][gte]': 'csv',
            'filter[id][lt]': 'csv',
            'filter[id][lte]': 'csv',
            'filter[name][eq]': 'csv',
            'filter[name][not_eq]': 'csv',
            'filter[name][eql]': 'csv',
            'filter[name][not_eql]': 'csv',
            'filter[name][prefix]': 'csv',
            'filter[name][not_prefix]': 'csv',
            'filter[name][suffix]': 'csv',
            'filter[name][not_suffix]': 'csv',
            'filter[name][match]': 'csv',
            'filter[name][not_match]': 'csv',
            'filter[short_name][eq]': 'csv',
            'filter[short_name][not_eq]': 'csv',
            'filter[short_name][eql]': 'csv',
            'filter[short_name][not_eql]': 'csv',
            'filter[short_name][prefix]': 'csv',
            'filter[short_name][not_prefix]': 'csv',
            'filter[short_name][suffix]': 'csv',
            'filter[short_name][not_suffix]': 'csv',
            'filter[short_name][match]': 'csv',
            'filter[short_name][not_match]': 'csv',
            'filter[display_name][eq]': 'csv',
            'filter[display_name][not_eq]': 'csv',
            'filter[display_name][eql]': 'csv',
            'filter[display_name][not_eql]': 'csv',
            'filter[display_name][prefix]': 'csv',
            'filter[display_name][not_prefix]': 'csv',
            'filter[display_name][suffix]': 'csv',
            'filter[display_name][not_suffix]': 'csv',
            'filter[display_name][match]': 'csv',
            'filter[display_name][not_match]': 'csv',
            'filter[description][eq]': 'csv',
            'filter[description][not_eq]': 'csv',
            'filter[description][eql]': 'csv',
            'filter[description][not_eql]': 'csv',
            'filter[description][prefix]': 'csv',
            'filter[description][not_prefix]': 'csv',
            'filter[description][suffix]': 'csv',
            'filter[description][not_suffix]': 'csv',
            'filter[description][match]': 'csv',
            'filter[description][not_match]': 'csv',
            'filter[parent_id][eq]': 'csv',
            'filter[parent_id][not_eq]': 'csv',
            'filter[parent_id][gt]': 'csv',
            'filter[parent_id][gte]': 'csv',
            'filter[parent_id][lt]': 'csv',
            'filter[parent_id][lte]': 'csv',
            'filter[layer_group_id][eq]': 'csv',
            'filter[layer_group_id][not_eq]': 'csv',
            'filter[layer_group_id][gt]': 'csv',
            'filter[layer_group_id][gte]': 'csv',
            'filter[layer_group_id][lt]': 'csv',
            'filter[layer_group_id][lte]': 'csv',
            'filter[type][eq]': 'csv',
            'filter[type][not_eq]': 'csv',
            'filter[type][eql]': 'csv',
            'filter[type][not_eql]': 'csv',
            'filter[type][prefix]': 'csv',
            'filter[type][not_prefix]': 'csv',
            'filter[type][suffix]': 'csv',
            'filter[type][not_suffix]': 'csv',
            'filter[type][match]': 'csv',
            'filter[type][not_match]': 'csv',
            'filter[email][eq]': 'csv',
            'filter[email][not_eq]': 'csv',
            'filter[email][eql]': 'csv',
            'filter[email][not_eql]': 'csv',
            'filter[email][prefix]': 'csv',
            'filter[email][not_prefix]': 'csv',
            'filter[email][suffix]': 'csv',
            'filter[email][not_suffix]': 'csv',
            'filter[email][match]': 'csv',
            'filter[email][not_match]': 'csv',
            'filter[address][eq]': 'csv',
            'filter[address][not_eq]': 'csv',
            'filter[address][eql]': 'csv',
            'filter[address][not_eql]': 'csv',
            'filter[address][prefix]': 'csv',
            'filter[address][not_prefix]': 'csv',
            'filter[address][suffix]': 'csv',
            'filter[address][not_suffix]': 'csv',
            'filter[address][match]': 'csv',
            'filter[address][not_match]': 'csv',
            'filter[zip_code][eq]': 'csv',
            'filter[zip_code][not_eq]': 'csv',
            'filter[zip_code][gt]': 'csv',
            'filter[zip_code][gte]': 'csv',
            'filter[zip_code][lt]': 'csv',
            'filter[zip_code][lte]': 'csv',
            'filter[town][eq]': 'csv',
            'filter[town][not_eq]': 'csv',
            'filter[town][eql]': 'csv',
            'filter[town][not_eql]': 'csv',
            'filter[town][prefix]': 'csv',
            'filter[town][not_prefix]': 'csv',
            'filter[town][suffix]': 'csv',
            'filter[town][not_suffix]': 'csv',
            'filter[town][match]': 'csv',
            'filter[town][not_match]': 'csv',
            'filter[country][eq]': 'csv',
            'filter[country][not_eq]': 'csv',
            'filter[country][eql]': 'csv',
            'filter[country][not_eql]': 'csv',
            'filter[country][prefix]': 'csv',
            'filter[country][not_prefix]': 'csv',
            'filter[country][suffix]': 'csv',
            'filter[country][not_suffix]': 'csv',
            'filter[country][match]': 'csv',
            'filter[country][not_match]': 'csv',
            'filter[self_registration_url][eq]': 'csv',
            'filter[self_registration_url][not_eq]': 'csv',
            'filter[self_registration_url][eql]': 'csv',
            'filter[self_registration_url][not_eql]': 'csv',
            'filter[self_registration_url][prefix]': 'csv',
            'filter[self_registration_url][not_prefix]': 'csv',
            'filter[self_registration_url][suffix]': 'csv',
            'filter[self_registration_url][not_suffix]': 'csv',
            'filter[self_registration_url][match]': 'csv',
            'filter[self_registration_url][not_match]': 'csv',
            'filter[archived_at][eq]': 'csv',
            'filter[archived_at][not_eq]': 'csv',
            'filter[archived_at][gt]': 'csv',
            'filter[archived_at][gte]': 'csv',
            'filter[archived_at][lt]': 'csv',
            'filter[archived_at][lte]': 'csv',
            'filter[created_at][eq]': 'csv',
            'filter[created_at][not_eq]': 'csv',
            'filter[created_at][gt]': 'csv',
            'filter[created_at][gte]': 'csv',
            'filter[created_at][lt]': 'csv',
            'filter[created_at][lte]': 'csv',
            'filter[updated_at][eq]': 'csv',
            'filter[updated_at][not_eq]': 'csv',
            'filter[updated_at][gt]': 'csv',
            'filter[updated_at][gte]': 'csv',
            'filter[updated_at][lt]': 'csv',
            'filter[updated_at][lte]': 'csv',
            'filter[deleted_at][eq]': 'csv',
            'filter[deleted_at][not_eq]': 'csv',
            'filter[deleted_at][gt]': 'csv',
            'filter[deleted_at][gte]': 'csv',
            'filter[deleted_at][lt]': 'csv',
            'filter[deleted_at][lte]': 'csv',
            'fields[people]': 'csv',
            'fields[phone_numbers]': 'csv',
            'fields[social_accounts]': 'csv',
            'fields[additional_emails]': 'csv',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters

        if _additional_query_params is not None:
            _query_params.extend((key, value) for key, value in _additional_query_params.items())

        if include is not None:
            
            _query_params.append(('include', include))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if fields_groups is not None:
            
            _query_params.append(('fields[groups]', fields_groups))
            
        if extra_fields_groups is not None:
            
            _query_params.append(('extra_fields[groups]', extra_fields_groups))
            
        if filter_id_eq is not None:
            
            _query_params.append(('filter[id][eq]', filter_id_eq))
            
        if filter_id_not_eq is not None:
            
            _query_params.append(('filter[id][not_eq]', filter_id_not_eq))
            
        if filter_id_gt is not None:
            
            _query_params.append(('filter[id][gt]', filter_id_gt))
            
        if filter_id_gte is not None:
            
            _query_params.append(('filter[id][gte]', filter_id_gte))
            
        if filter_id_lt is not None:
            
            _query_params.append(('filter[id][lt]', filter_id_lt))
            
        if filter_id_lte is not None:
            
            _query_params.append(('filter[id][lte]', filter_id_lte))
            
        if filter_name_eq is not None:
            
            _query_params.append(('filter[name][eq]', filter_name_eq))
            
        if filter_name_not_eq is not None:
            
            _query_params.append(('filter[name][not_eq]', filter_name_not_eq))
            
        if filter_name_eql is not None:
            
            _query_params.append(('filter[name][eql]', filter_name_eql))
            
        if filter_name_not_eql is not None:
            
            _query_params.append(('filter[name][not_eql]', filter_name_not_eql))
            
        if filter_name_prefix is not None:
            
            _query_params.append(('filter[name][prefix]', filter_name_prefix))
            
        if filter_name_not_prefix is not None:
            
            _query_params.append(('filter[name][not_prefix]', filter_name_not_prefix))
            
        if filter_name_suffix is not None:
            
            _query_params.append(('filter[name][suffix]', filter_name_suffix))
            
        if filter_name_not_suffix is not None:
            
            _query_params.append(('filter[name][not_suffix]', filter_name_not_suffix))
            
        if filter_name_match is not None:
            
            _query_params.append(('filter[name][match]', filter_name_match))
            
        if filter_name_not_match is not None:
            
            _query_params.append(('filter[name][not_match]', filter_name_not_match))
            
        if filter_short_name_eq is not None:
            
            _query_params.append(('filter[short_name][eq]', filter_short_name_eq))
            
        if filter_short_name_not_eq is not None:
            
            _query_params.append(('filter[short_name][not_eq]', filter_short_name_not_eq))
            
        if filter_short_name_eql is not None:
            
            _query_params.append(('filter[short_name][eql]', filter_short_name_eql))
            
        if filter_short_name_not_eql is not None:
            
            _query_params.append(('filter[short_name][not_eql]', filter_short_name_not_eql))
            
        if filter_short_name_prefix is not None:
            
            _query_params.append(('filter[short_name][prefix]', filter_short_name_prefix))
            
        if filter_short_name_not_prefix is not None:
            
            _query_params.append(('filter[short_name][not_prefix]', filter_short_name_not_prefix))
            
        if filter_short_name_suffix is not None:
            
            _query_params.append(('filter[short_name][suffix]', filter_short_name_suffix))
            
        if filter_short_name_not_suffix is not None:
            
            _query_params.append(('filter[short_name][not_suffix]', filter_short_name_not_suffix))
            
        if filter_short_name_match is not None:
            
            _query_params.append(('filter[short_name][match]', filter_short_name_match))
            
        if filter_short_name_not_match is not None:
            
            _query_params.append(('filter[short_name][not_match]', filter_short_name_not_match))
            
        if filter_display_name_eq is not None:
            
            _query_params.append(('filter[display_name][eq]', filter_display_name_eq))
            
        if filter_display_name_not_eq is not None:
            
            _query_params.append(('filter[display_name][not_eq]', filter_display_name_not_eq))
            
        if filter_display_name_eql is not None:
            
            _query_params.append(('filter[display_name][eql]', filter_display_name_eql))
            
        if filter_display_name_not_eql is not None:
            
            _query_params.append(('filter[display_name][not_eql]', filter_display_name_not_eql))
            
        if filter_display_name_prefix is not None:
            
            _query_params.append(('filter[display_name][prefix]', filter_display_name_prefix))
            
        if filter_display_name_not_prefix is not None:
            
            _query_params.append(('filter[display_name][not_prefix]', filter_display_name_not_prefix))
            
        if filter_display_name_suffix is not None:
            
            _query_params.append(('filter[display_name][suffix]', filter_display_name_suffix))
            
        if filter_display_name_not_suffix is not None:
            
            _query_params.append(('filter[display_name][not_suffix]', filter_display_name_not_suffix))
            
        if filter_display_name_match is not None:
            
            _query_params.append(('filter[display_name][match]', filter_display_name_match))
            
        if filter_display_name_not_match is not None:
            
            _query_params.append(('filter[display_name][not_match]', filter_display_name_not_match))
            
        if filter_description_eq is not None:
            
            _query_params.append(('filter[description][eq]', filter_description_eq))
            
        if filter_description_not_eq is not None:
            
            _query_params.append(('filter[description][not_eq]', filter_description_not_eq))
            
        if filter_description_eql is not None:
            
            _query_params.append(('filter[description][eql]', filter_description_eql))
            
        if filter_description_not_eql is not None:
            
            _query_params.append(('filter[description][not_eql]', filter_description_not_eql))
            
        if filter_description_prefix is not None:
            
            _query_params.append(('filter[description][prefix]', filter_description_prefix))
            
        if filter_description_not_prefix is not None:
            
            _query_params.append(('filter[description][not_prefix]', filter_description_not_prefix))
            
        if filter_description_suffix is not None:
            
            _query_params.append(('filter[description][suffix]', filter_description_suffix))
            
        if filter_description_not_suffix is not None:
            
            _query_params.append(('filter[description][not_suffix]', filter_description_not_suffix))
            
        if filter_description_match is not None:
            
            _query_params.append(('filter[description][match]', filter_description_match))
            
        if filter_description_not_match is not None:
            
            _query_params.append(('filter[description][not_match]', filter_description_not_match))
            
        if filter_layer_eq is not None:
            
            _query_params.append(('filter[layer][eq]', filter_layer_eq))
            
        if filter_parent_id_eq is not None:
            
            _query_params.append(('filter[parent_id][eq]', filter_parent_id_eq))
            
        if filter_parent_id_not_eq is not None:
            
            _query_params.append(('filter[parent_id][not_eq]', filter_parent_id_not_eq))
            
        if filter_parent_id_gt is not None:
            
            _query_params.append(('filter[parent_id][gt]', filter_parent_id_gt))
            
        if filter_parent_id_gte is not None:
            
            _query_params.append(('filter[parent_id][gte]', filter_parent_id_gte))
            
        if filter_parent_id_lt is not None:
            
            _query_params.append(('filter[parent_id][lt]', filter_parent_id_lt))
            
        if filter_parent_id_lte is not None:
            
            _query_params.append(('filter[parent_id][lte]', filter_parent_id_lte))
            
        if filter_layer_group_id_eq is not None:
            
            _query_params.append(('filter[layer_group_id][eq]', filter_layer_group_id_eq))
            
        if filter_layer_group_id_not_eq is not None:
            
            _query_params.append(('filter[layer_group_id][not_eq]', filter_layer_group_id_not_eq))
            
        if filter_layer_group_id_gt is not None:
            
            _query_params.append(('filter[layer_group_id][gt]', filter_layer_group_id_gt))
            
        if filter_layer_group_id_gte is not None:
            
            _query_params.append(('filter[layer_group_id][gte]', filter_layer_group_id_gte))
            
        if filter_layer_group_id_lt is not None:
            
            _query_params.append(('filter[layer_group_id][lt]', filter_layer_group_id_lt))
            
        if filter_layer_group_id_lte is not None:
            
            _query_params.append(('filter[layer_group_id][lte]', filter_layer_group_id_lte))
            
        if filter_type_eq is not None:
            
            _query_params.append(('filter[type][eq]', filter_type_eq))
            
        if filter_type_not_eq is not None:
            
            _query_params.append(('filter[type][not_eq]', filter_type_not_eq))
            
        if filter_type_eql is not None:
            
            _query_params.append(('filter[type][eql]', filter_type_eql))
            
        if filter_type_not_eql is not None:
            
            _query_params.append(('filter[type][not_eql]', filter_type_not_eql))
            
        if filter_type_prefix is not None:
            
            _query_params.append(('filter[type][prefix]', filter_type_prefix))
            
        if filter_type_not_prefix is not None:
            
            _query_params.append(('filter[type][not_prefix]', filter_type_not_prefix))
            
        if filter_type_suffix is not None:
            
            _query_params.append(('filter[type][suffix]', filter_type_suffix))
            
        if filter_type_not_suffix is not None:
            
            _query_params.append(('filter[type][not_suffix]', filter_type_not_suffix))
            
        if filter_type_match is not None:
            
            _query_params.append(('filter[type][match]', filter_type_match))
            
        if filter_type_not_match is not None:
            
            _query_params.append(('filter[type][not_match]', filter_type_not_match))
            
        if filter_email_eq is not None:
            
            _query_params.append(('filter[email][eq]', filter_email_eq))
            
        if filter_email_not_eq is not None:
            
            _query_params.append(('filter[email][not_eq]', filter_email_not_eq))
            
        if filter_email_eql is not None:
            
            _query_params.append(('filter[email][eql]', filter_email_eql))
            
        if filter_email_not_eql is not None:
            
            _query_params.append(('filter[email][not_eql]', filter_email_not_eql))
            
        if filter_email_prefix is not None:
            
            _query_params.append(('filter[email][prefix]', filter_email_prefix))
            
        if filter_email_not_prefix is not None:
            
            _query_params.append(('filter[email][not_prefix]', filter_email_not_prefix))
            
        if filter_email_suffix is not None:
            
            _query_params.append(('filter[email][suffix]', filter_email_suffix))
            
        if filter_email_not_suffix is not None:
            
            _query_params.append(('filter[email][not_suffix]', filter_email_not_suffix))
            
        if filter_email_match is not None:
            
            _query_params.append(('filter[email][match]', filter_email_match))
            
        if filter_email_not_match is not None:
            
            _query_params.append(('filter[email][not_match]', filter_email_not_match))
            
        if filter_address_eq is not None:
            
            _query_params.append(('filter[address][eq]', filter_address_eq))
            
        if filter_address_not_eq is not None:
            
            _query_params.append(('filter[address][not_eq]', filter_address_not_eq))
            
        if filter_address_eql is not None:
            
            _query_params.append(('filter[address][eql]', filter_address_eql))
            
        if filter_address_not_eql is not None:
            
            _query_params.append(('filter[address][not_eql]', filter_address_not_eql))
            
        if filter_address_prefix is not None:
            
            _query_params.append(('filter[address][prefix]', filter_address_prefix))
            
        if filter_address_not_prefix is not None:
            
            _query_params.append(('filter[address][not_prefix]', filter_address_not_prefix))
            
        if filter_address_suffix is not None:
            
            _query_params.append(('filter[address][suffix]', filter_address_suffix))
            
        if filter_address_not_suffix is not None:
            
            _query_params.append(('filter[address][not_suffix]', filter_address_not_suffix))
            
        if filter_address_match is not None:
            
            _query_params.append(('filter[address][match]', filter_address_match))
            
        if filter_address_not_match is not None:
            
            _query_params.append(('filter[address][not_match]', filter_address_not_match))
            
        if filter_zip_code_eq is not None:
            
            _query_params.append(('filter[zip_code][eq]', filter_zip_code_eq))
            
        if filter_zip_code_not_eq is not None:
            
            _query_params.append(('filter[zip_code][not_eq]', filter_zip_code_not_eq))
            
        if filter_zip_code_gt is not None:
            
            _query_params.append(('filter[zip_code][gt]', filter_zip_code_gt))
            
        if filter_zip_code_gte is not None:
            
            _query_params.append(('filter[zip_code][gte]', filter_zip_code_gte))
            
        if filter_zip_code_lt is not None:
            
            _query_params.append(('filter[zip_code][lt]', filter_zip_code_lt))
            
        if filter_zip_code_lte is not None:
            
            _query_params.append(('filter[zip_code][lte]', filter_zip_code_lte))
            
        if filter_town_eq is not None:
            
            _query_params.append(('filter[town][eq]', filter_town_eq))
            
        if filter_town_not_eq is not None:
            
            _query_params.append(('filter[town][not_eq]', filter_town_not_eq))
            
        if filter_town_eql is not None:
            
            _query_params.append(('filter[town][eql]', filter_town_eql))
            
        if filter_town_not_eql is not None:
            
            _query_params.append(('filter[town][not_eql]', filter_town_not_eql))
            
        if filter_town_prefix is not None:
            
            _query_params.append(('filter[town][prefix]', filter_town_prefix))
            
        if filter_town_not_prefix is not None:
            
            _query_params.append(('filter[town][not_prefix]', filter_town_not_prefix))
            
        if filter_town_suffix is not None:
            
            _query_params.append(('filter[town][suffix]', filter_town_suffix))
            
        if filter_town_not_suffix is not None:
            
            _query_params.append(('filter[town][not_suffix]', filter_town_not_suffix))
            
        if filter_town_match is not None:
            
            _query_params.append(('filter[town][match]', filter_town_match))
            
        if filter_town_not_match is not None:
            
            _query_params.append(('filter[town][not_match]', filter_town_not_match))
            
        if filter_country_eq is not None:
            
            _query_params.append(('filter[country][eq]', filter_country_eq))
            
        if filter_country_not_eq is not None:
            
            _query_params.append(('filter[country][not_eq]', filter_country_not_eq))
            
        if filter_country_eql is not None:
            
            _query_params.append(('filter[country][eql]', filter_country_eql))
            
        if filter_country_not_eql is not None:
            
            _query_params.append(('filter[country][not_eql]', filter_country_not_eql))
            
        if filter_country_prefix is not None:
            
            _query_params.append(('filter[country][prefix]', filter_country_prefix))
            
        if filter_country_not_prefix is not None:
            
            _query_params.append(('filter[country][not_prefix]', filter_country_not_prefix))
            
        if filter_country_suffix is not None:
            
            _query_params.append(('filter[country][suffix]', filter_country_suffix))
            
        if filter_country_not_suffix is not None:
            
            _query_params.append(('filter[country][not_suffix]', filter_country_not_suffix))
            
        if filter_country_match is not None:
            
            _query_params.append(('filter[country][match]', filter_country_match))
            
        if filter_country_not_match is not None:
            
            _query_params.append(('filter[country][not_match]', filter_country_not_match))
            
        if filter_require_person_add_requests_eq is not None:
            
            _query_params.append(('filter[require_person_add_requests][eq]', filter_require_person_add_requests_eq))
            
        if filter_self_registration_url_eq is not None:
            
            _query_params.append(('filter[self_registration_url][eq]', filter_self_registration_url_eq))
            
        if filter_self_registration_url_not_eq is not None:
            
            _query_params.append(('filter[self_registration_url][not_eq]', filter_self_registration_url_not_eq))
            
        if filter_self_registration_url_eql is not None:
            
            _query_params.append(('filter[self_registration_url][eql]', filter_self_registration_url_eql))
            
        if filter_self_registration_url_not_eql is not None:
            
            _query_params.append(('filter[self_registration_url][not_eql]', filter_self_registration_url_not_eql))
            
        if filter_self_registration_url_prefix is not None:
            
            _query_params.append(('filter[self_registration_url][prefix]', filter_self_registration_url_prefix))
            
        if filter_self_registration_url_not_prefix is not None:
            
            _query_params.append(('filter[self_registration_url][not_prefix]', filter_self_registration_url_not_prefix))
            
        if filter_self_registration_url_suffix is not None:
            
            _query_params.append(('filter[self_registration_url][suffix]', filter_self_registration_url_suffix))
            
        if filter_self_registration_url_not_suffix is not None:
            
            _query_params.append(('filter[self_registration_url][not_suffix]', filter_self_registration_url_not_suffix))
            
        if filter_self_registration_url_match is not None:
            
            _query_params.append(('filter[self_registration_url][match]', filter_self_registration_url_match))
            
        if filter_self_registration_url_not_match is not None:
            
            _query_params.append(('filter[self_registration_url][not_match]', filter_self_registration_url_not_match))
            
        if filter_archived_at_eq is not None:
            
            _query_params.append(('filter[archived_at][eq]', filter_archived_at_eq))
            
        if filter_archived_at_not_eq is not None:
            
            _query_params.append(('filter[archived_at][not_eq]', filter_archived_at_not_eq))
            
        if filter_archived_at_gt is not None:
            
            _query_params.append(('filter[archived_at][gt]', filter_archived_at_gt))
            
        if filter_archived_at_gte is not None:
            
            _query_params.append(('filter[archived_at][gte]', filter_archived_at_gte))
            
        if filter_archived_at_lt is not None:
            
            _query_params.append(('filter[archived_at][lt]', filter_archived_at_lt))
            
        if filter_archived_at_lte is not None:
            
            _query_params.append(('filter[archived_at][lte]', filter_archived_at_lte))
            
        if filter_created_at_eq is not None:
            
            _query_params.append(('filter[created_at][eq]', filter_created_at_eq))
            
        if filter_created_at_not_eq is not None:
            
            _query_params.append(('filter[created_at][not_eq]', filter_created_at_not_eq))
            
        if filter_created_at_gt is not None:
            
            _query_params.append(('filter[created_at][gt]', filter_created_at_gt))
            
        if filter_created_at_gte is not None:
            
            _query_params.append(('filter[created_at][gte]', filter_created_at_gte))
            
        if filter_created_at_lt is not None:
            
            _query_params.append(('filter[created_at][lt]', filter_created_at_lt))
            
        if filter_created_at_lte is not None:
            
            _query_params.append(('filter[created_at][lte]', filter_created_at_lte))
            
        if filter_updated_at_eq is not None:
            
            _query_params.append(('filter[updated_at][eq]', filter_updated_at_eq))
            
        if filter_updated_at_not_eq is not None:
            
            _query_params.append(('filter[updated_at][not_eq]', filter_updated_at_not_eq))
            
        if filter_updated_at_gt is not None:
            
            _query_params.append(('filter[updated_at][gt]', filter_updated_at_gt))
            
        if filter_updated_at_gte is not None:
            
            _query_params.append(('filter[updated_at][gte]', filter_updated_at_gte))
            
        if filter_updated_at_lt is not None:
            
            _query_params.append(('filter[updated_at][lt]', filter_updated_at_lt))
            
        if filter_updated_at_lte is not None:
            
            _query_params.append(('filter[updated_at][lte]', filter_updated_at_lte))
            
        if filter_deleted_at_eq is not None:
            
            _query_params.append(('filter[deleted_at][eq]', filter_deleted_at_eq))
            
        if filter_deleted_at_not_eq is not None:
            
            _query_params.append(('filter[deleted_at][not_eq]', filter_deleted_at_not_eq))
            
        if filter_deleted_at_gt is not None:
            
            _query_params.append(('filter[deleted_at][gt]', filter_deleted_at_gt))
            
        if filter_deleted_at_gte is not None:
            
            _query_params.append(('filter[deleted_at][gte]', filter_deleted_at_gte))
            
        if filter_deleted_at_lt is not None:
            
            _query_params.append(('filter[deleted_at][lt]', filter_deleted_at_lt))
            
        if filter_deleted_at_lte is not None:
            
            _query_params.append(('filter[deleted_at][lte]', filter_deleted_at_lte))
            
        if filter_with_deleted_eq is not None:
            
            _query_params.append(('filter[with_deleted][eq]', filter_with_deleted_eq))
            
        if filter_with_archived_eq is not None:
            
            _query_params.append(('filter[with_archived][eq]', filter_with_archived_eq))
            
        if fields_people is not None:
            
            _query_params.append(('fields[people]', fields_people))
            
        if fields_phone_numbers is not None:
            
            _query_params.append(('fields[phone_numbers]', fields_phone_numbers))
            
        if fields_social_accounts is not None:
            
            _query_params.append(('fields[social_accounts]', fields_social_accounts))
            
        if fields_additional_emails is not None:
            
            _query_params.append(('fields[additional_emails]', fields_additional_emails))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/vnd.api+json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ServiceTokenAuthHeader', 
            'ServiceTokenAuthParam'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/groups',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


