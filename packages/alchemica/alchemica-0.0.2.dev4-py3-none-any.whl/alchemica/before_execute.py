import logging

from sqlalchemy import Connection, ClauseElement

from alchemica.log_explain_plan import log_explain_plan
from alchemica.utils.utils import compile_sql_query


def before_execute(
        conn: Connection,
        clauseelement: ClauseElement,
        logger: logging.Logger,
        compile_sql: bool,
        explain_plan: bool,
        execution_info: str,
):
    compiled_query = None
    if compile_sql:
        try:
            compiled_query = compile_sql_query(conn=conn, clauseelement=clauseelement)
            logger.info(f"üü¢ [SQL]{execution_info} {compiled_query}")
        except Exception as err:
            logger.warning(f"‚ö†Ô∏è [SQL]{execution_info} –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ {err}")
    else:
        logger.info(f"üü¢ [SQL]{execution_info} {clauseelement}")

    if explain_plan:
        try:
            log_explain_plan(
                conn=conn,
                compiled_query=compiled_query,
                clauseelement=clauseelement,
                logger=logger,
                execution_info=execution_info
            )
        except Exception as err:
            logger.warning(f"‚ö†Ô∏è [SQL PLAN]{execution_info} –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–ª–∞–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞ {err}")
