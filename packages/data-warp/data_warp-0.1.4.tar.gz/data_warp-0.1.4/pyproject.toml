[project]
name = "data-warp"
version = "0.1.4"
description = "DataWarp is a powerful Python library that simplifies working with data files across various formats and storage locations and orchestrate data workflow for multiple backends or services."

authors = [{ name = "Datta Tele", email = "datta.tele@gmail.com" }]
readme = "README.md"
requires-python = ">=3.10,<3.13"
keywords = ["data-engineering", "ETL", "pipelines", "connectors", "batch-processing", "stream-processing"]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12"
]

dependencies = [
    "pandas>=2.0.3",
    "setuptools>=75.8.0",
    "pyarrow>=19.0.0",
    "retrying (>=1.3.4,<2.0.0)",
    "boto3 (>=1.36.8,<2.0.0)",
    "openpyxl (>=3.1.5,<4.0.0)",
    "tqdm (>=4.67.1,<5.0.0)",
    "sqlalchemy (>=2.0.38,<3.0.0)"
]

# Project URLs to show on PyPI, such as "Homepage", "Source", "Documentation", etc.
[project.urls]
"Homepage" = "https://github.com/dattatele/data-buddy"
"Source" = "https://github.com/dattatele/data-buddy"
"Documentation" = "https://github.com/dattatele/data-buddy/wiki"
"Issue Tracker" = "https://github.com/dattatele/data-buddy/issues"

[project.optional-dependencies]
# Optional dependencies for extended functionality
#spark = ["pyspark>=3.4.0", "pyarrow>=12.0.0", "numpy>=1.25.0"]
#insight = ["fpdf>=1.7.2", "matplotlib>=3.5.0", "seaborn>=0.11.0"]
#airflow = ["apache-airflow>=2.10.4"]

[tool.poetry.group.dev.dependencies]
pytest = ">=7.4.0"
flake8 = ">=6.0.0"
mypy = ">=1.6.0"
ruff = ">=0.1.0"

[tool.poetry.group.test.dependencies]
pytest = ">=7.4.0"
pytest-cov = ">=4.1.0"

[tool.poetry.group.docs.dependencies]
mkdocs = ">=1.5.0"
mkdocs-material = ">=9.4.0"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=data_warp --cov-report=term-missing --cov-report=html --cov-fail-under=84"
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')"
]

[tool.flake8]
max-line-length = 100
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist"
]

[tool.coverage.run]
branch = true
source = ["data_warp"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.ruff]
line-length = 100
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist"
]

[build-system]
requires = ["poetry-core>=1.5.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
click = ">=8.0.0"
#tqdm = ">=4.65.0"