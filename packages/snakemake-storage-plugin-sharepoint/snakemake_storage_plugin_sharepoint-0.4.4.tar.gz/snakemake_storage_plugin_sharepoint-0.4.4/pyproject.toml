[project]
name = "snakemake-storage-plugin-sharepoint"
description = "Snakemake storage plugin for reading and writing files on Microsoft SharePoint."
authors = [{ name = "Hugo Lapre", email = "hugo.lapre@brabantwater.nl" }]
readme = "README.md"
license = { file = "LICENSE" }
keywords = ["snakemake", "plugin", "storage", "sharepoint"]
requires-python = ">=3.11"
dynamic = ["version"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
dependencies = [
  "requests",
  "snakemake-interface-common>=1.14",
  "snakemake-interface-storage-plugins>=3.0",
]

[project.urls]
repository = "https://github.com/Hugovdberg/snakemake-storage-plugin-sharepoint"
documentation = "https://snakemake.github.io/snakemake-plugin-catalog/plugins/storage/sharepoint.html"

[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[tool.bumpversion]
current_version = "0.4.4"
tag = true
tag_name = "v{new_version}"
tag_message = "Release v{new_version}"
commit = true
message = "chore: bump version from {current_version} -> {new_version}"

[[tool.bumpversion.files]]
filename = "snakemake_storage_plugin_sharepoint/__init__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

[tool.flit.module]
name = "snakemake_storage_plugin_sharepoint"

[tool.pixi.project]
name = "snakemake-storage-plugin-sharepoint"
channels = ["conda-forge"]
platforms = ["win-64", "linux-64", "osx-64"]

[tool.pixi.dependencies]
datrie = "*"
# snakemake = { version = "*", channel = "bioconda" }

[tool.pixi.pypi-dependencies]
snakemake-storage-plugin-sharepoint = { path = ".", editable = true }

[tool.pixi.tasks]

[tool.pixi.feature.lint.dependencies]
ruff = "*"

[tool.pixi.feature.lint.tasks]
format-check = "ruff format --check ."
format = "ruff format ."
lint = { cmd = "ruff check .", depends-on = ["format-check"] }

[tool.pixi.feature.test]
channels = ["conda-forge", "bioconda"]

[tool.pixi.feature.test.dependencies]
coverage = "*"
pytest = "*"
snakemake = ">=8.29.0,<9"
certifi = ">=2025.1.31,<2026"

[tool.pixi.feature.test.tasks]
test = { cmd = "coverage run -m pytest tests/tests.py", depends-on = ["lint"] }
coverage = { cmd = "coverage report -m", depends-on = ["test"] }

[tool.pixi.feature.build.dependencies]
python = "*"

[tool.pixi.feature.build.pypi-dependencies]
bump-my-version = "*"
build = "*"

[tool.pixi.feature.build.tasks]
bumpversion = "bump-my-version bump"
build = "python -m build -w"

[tool.pixi.environments]
lint = { features = ["lint"], no-default-feature = true }
test = { features = ["test"], solve-group = "default" }
build = { features = ["build"], no-default-feature = true }

[tool.ruff]
line-length = 88
exclude = ["build", "dist", "docs", "venv"]

[tool.ruff.lint]
select = [
  "C4",  # flake8-comprehensions
  "E",   # pycodestyle
  "F",   # pyflakes
  "I",   # isort
  "PT",  # pytest-style
  "D",   # pydocstyle
  "B",   # flake8-bugbear
  "NPY", # numpy
]
extend-ignore = ["E203", "D203", "D213"]
