# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .callbacks import Callbacks
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class RunnableConfig(UniversalBaseModel):
    """
    Configuration for a Runnable.
    """

    tags: typing.Optional[typing.List[str]] = None
    metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    callbacks: typing.Optional[Callbacks] = None
    run_name: typing.Optional[str] = None
    max_concurrency: typing.Optional[int] = None
    recursion_limit: typing.Optional[int] = None
    configurable: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    run_id: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
