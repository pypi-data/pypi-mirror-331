[project]
name = "tessbind"
dynamic = ["version"]
description = "Tesseract pybind11 bindings"
readme = "README.md"
authors = [{ name = "Enno Richter", email = "enno@nerdworks.de" }]
requires-python = ">=3.12"
license = { text = "Apache-2.0" }
dependencies = ["typing-extensions>=4.6;python_version<'3.11'"]
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]

[project.urls]
Documentation = "https://tessbind.readthedocs.io/"
"Bug Tracker" = "https://github.com/elohmeier/tessbind/issues"
Discussions = "https://github.com/elohmeier/tessbind/discussions"
Changelog = "https://github.com/elohmeier/tessbind/releases"

[project.optional-dependencies]
dev = ["pytest>=6", "pytest-cov>=3"]
docs = [
  "furo>=2023.08.17",
  "myst-parser>=0.13",
  "sphinx>=7.0",
  "sphinx-autodoc-typehints",
  "sphinx-copybutton",
]
test = ["pytest>=6", "pytest-cov>=3"]

[build-system]
requires = ["setuptools>=42", "setuptools_scm[toml]>=3.4", "pybind11"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/tessbind/_version.py"

[tool.check-manifest]
ignore = [
  ".copier-answers.yml",
  ".envrc",
  ".github/**",
  "docs/**",
  "flake.lock",
  "flake.nix",
  "noxfile.py",
  "src/*/_version.py",
]

[tool.cibuildwheel]
archs = ["auto64"]
build = ["cp312-*", "cp313-*"]
skip = "*-musllinux*"
test-command = "pytest -m \"not slow\" {project}/tests"
test-extras = ["test"]

[tool.cibuildwheel.linux]
before-test = [
  "mkdir -p /usr/share/tesseract-ocr/5/tessdata",
  "curl -L -o /usr/share/tesseract-ocr/5/tessdata/eng.traineddata https://github.com/tesseract-ocr/tessdata_fast/raw/refs/heads/main/eng.traineddata",
]

[tool.cibuildwheel.macos]
before-test = ["brew install tesseract"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]
log_cli_level = "INFO"
testpaths = ["tests"]
markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')"]


[tool.coverage]
run.source = ["tessbind"]
report.exclude_also = ['\.\.\.', 'if typing.TYPE_CHECKING:']

[tool.mypy]
files = ["src", "tests"]
python_version = "3.8"
warn_unused_configs = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = "tessbind.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true


[tool.ruff]
target-version = "py38"
exclude = ["extern/**"]

[tool.ruff.lint]
extend-select = [
  "B",   # flake8-bugbear
  "I",   # isort
  "ARG", # flake8-unused-arguments
  "C4",  # flake8-comprehensions
  "EM",  # flake8-errmsg
  "ICN", # flake8-import-conventions
  "G",   # flake8-logging-format
  "PGH", # pygrep-hooks
  "PIE", # flake8-pie
  "PL",  # pylint
  "PT",  # flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "RET", # flake8-return
  "RUF", # Ruff-specific
  "SIM", # flake8-simplify
  "T20", # flake8-print
  "UP",  # pyupgrade
  "YTT", # flake8-2020
  "EXE", # flake8-executable
  "NPY", # NumPy specific rules
  "PD",  # pandas-vet
]
ignore = [
  "PLR09",   # Too many <...>
  "PLR2004", # Magic value used in comparison
  "ISC001",  # Conflicts with formatter
]
isort.required-imports = ["from __future__ import annotations"]
# Uncomment if using a _compat.typing backport
# typing-modules = ["tessbind._compat.typing"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
"noxfile.py" = ["T20"]


[tool.pylint]
py-version = "3.8"
ignore-paths = [".*/_version.py"]
extension-pkg-allow-list = ["tessbind._core"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "missing-module-docstring",
  "missing-function-docstring",
  "wrong-import-position",
]

[tool.uv]
cache-keys = [{ file = "setup.py" }, { file = "src/main.cpp" }]
