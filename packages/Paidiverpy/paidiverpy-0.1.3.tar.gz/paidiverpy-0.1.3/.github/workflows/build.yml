name: Python package

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:

  build:
    name: Build for (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        # os: ['ubuntu-latest']
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Initialize Conda
        run: |
          conda init bash

      - name: Create conda environment
        shell: bash -l {0}
        run: |
          conda env create -f environment.yml
          conda activate Paidiverpy
          conda run -n Paidiverpy pip install .
          conda run -n Paidiverpy pip install .[test]
          conda run -n Paidiverpy pip install .[dev,publishing]

      - name: Test with pytest
        run: |
          conda run -n Paidiverpy pytest tests/

      - name: Verify that we can build the package
        run:  |
          conda run -n Paidiverpy pip install build twine wheel
          conda run -n Paidiverpy python -m build
  lint:
    name: Linting build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Python info
        shell: bash -e {0}
        run: |
          which python
          python --version
      - name: Upgrade pip and install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install .[dev,publishing]
      - name: Check style against standards using ruff
        run: |
          ruff check
          ruff format --check
