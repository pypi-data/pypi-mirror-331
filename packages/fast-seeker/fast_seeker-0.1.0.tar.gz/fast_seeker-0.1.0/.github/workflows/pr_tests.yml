name: Full Test

on:
  push:
  workflow_dispatch:
  pull_request:
    types: [assigned, opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup  uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.4"
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install Dependencies
        run: uv sync --all-extras --dev
      - name: Test
        run: uv run pytest

  coverage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - name: Setup  uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.4"
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install Dependencies
        run: uv sync --all-extras --dev
      - name: Test
        run: uv run pytest --cov=src --cov-report=xml src/tests

  codestyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - name: Setup  uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.4"
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install Dependencies
        run: uv sync --all-extras --dev
      - name: Ruff format
        run: uvx ruff format --check
      - name: Ruff lint
        run: uvx ruff check
      - name: MyPy Type Check
        run: uvx mypy . --python-executable=.venv/bin/python
