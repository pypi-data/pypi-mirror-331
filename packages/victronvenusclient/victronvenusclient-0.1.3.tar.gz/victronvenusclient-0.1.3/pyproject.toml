[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "victronvenusclient"
dynamic = ["version"]
description = 'An async MQTT Victron Venus OS client library.'
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = []
authors = [
  { name = "Johan du Plessis", email = "johan@epicwin.co.za" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "gmqtt>=0.7.0"
  ]

[project.urls]
Documentation = "https://github.com/JohansLab/victronvenusclient#readme"
Issues = "https://github.com/JohansLab/victronvenusclient/issues"
Source = "https://github.com/JohansLab/victronvenusclient"

[tool.hatch.version]
path = "src/victronvenusclient/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/victronvenusclient tests}"

[tool.hatch.envs.test]
dependencies = [
    "pytest",
    "pytest-mock",
    "pytest-asyncio",
    "victronvenusclient",
    "coverage"
]

commands = [
    "pytest --cov=victronvenusclient",  # Example command for running tests with coverage
]

[tool.hatch.envs.hatch-test]
extra-dependencies = [
  "pyfakefs",
  "pytest-asyncio",
  "pytest-benchmark",
  "pytest-memray",
  "pytest-playwright",
  "pytest-print",
]

[tool.hatch.envs.docs]
dependencies = [
    "sphinx",
    "sphinx-autodoc-typehints",  # Optional: for type hints in docs
    "sphinx-rtd-theme",         # Optional: for a clean, professional theme
]

[tool.hatch.envs.docs.scripts]
build = "sphinx-build -b html docs docs/_build/html"


[tool.coverage.run]
source_pkgs = ["victronvenusclient", "tests"]
branch = true
parallel = true
omit = [
  "src/victronvenusclient/__about__.py",
]

[tool.coverage.paths]
victronvenusclient = ["src/victronvenusclient", "*/victronvenusclient/src/victronvenusclient"]
tests = ["tests", "*/victronvenusclient/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
exclude = [".git", "__pycache__", "node_modules", "public", "venv"]
line-length = 120
target-version = "py39"

[tool.ruff.lint]
ignore = [  "UP007" ]

[tool.setuptools]
packages = ["victronvenusclient"]

[tool.setuptools.entry_points]
console_scripts = [
    "victronvenus-dump-mqtt=victronvenusclient.utils.dump_mqtt:main"
]
