name: Build Python Package

on:
  push:
    branches:
      - main

jobs:
  build-package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set repository name to lowercase
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Extract package version
        id: extract_version
        run: echo "PACKAGE_VERSION=$(grep -oP '(?<=version = \")[^\"]*' pyproject.toml)" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          tags: |
            ghcr.io/${{ env.REPO_NAME }}/build:latest
            ghcr.io/${{ env.REPO_NAME }}/build:${{ github.sha }}
          file: Dockerfile
          build-args: |
            REPO_URL=${{ secrets.PYPI_REPOSITORY_URL }}
            REPO_USERNAME=${{ secrets.PYPI_USERNAME }}
            PACKAGE_VERSION=${{ env.PACKAGE_VERSION }}
          secrets: |
            pypi_api_token=${{ secrets.PYPI_API_TOKEN }}
            repo_password=${{ secrets.PYPI_PASSWORD }}
          target: build

      - name: Publish Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.REPO_NAME }}/publish:latest
            ghcr.io/${{ env.REPO_NAME }}/publish:${{ github.sha }}
          file: Dockerfile
          build-args: |
            REPO_URL=${{ secrets.PYPI_REPOSITORY_URL }}
            REPO_USERNAME=${{ secrets.PYPI_USERNAME }}
            PACKAGE_VERSION=${{ env.PACKAGE_VERSION }}
          secrets: |
            pypi_api_token=${{ secrets.PYPI_API_TOKEN }}
            repo_password=${{ secrets.PYPI_PASSWORD }}
          target: publish
      
      - name: Build Docker image stage tests
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.REPO_NAME }}/test:latest
            ghcr.io/${{ env.REPO_NAME }}/test:${{ github.sha }}
          file: Dockerfile
          build-args: |
            REPO_URL=${{ secrets.PYPI_REPOSITORY_URL }}
            REPO_USERNAME=${{ secrets.PYPI_USERNAME }}
            PACKAGE_VERSION=${{ env.PACKAGE_VERSION }}
          secrets: |
            pypi_api_token=${{ secrets.PYPI_API_TOKEN }}
            repo_password=${{ secrets.PYPI_PASSWORD }}
            openai_api_key=${{ secrets.OPENAI_API_KEY }}
            openai_api_base=${{ secrets.OPENAI_API_BASE }}
          target: test
      
      - name: Copy coverage.json from Docker image
        run: |
          CONTAINER_ID=$(docker create ghcr.io/${{ env.REPO_NAME }}/test:${{ github.sha }})
          docker cp $CONTAINER_ID:/app/coverage.xml coverage.xml
          docker rm $CONTAINER_ID
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
