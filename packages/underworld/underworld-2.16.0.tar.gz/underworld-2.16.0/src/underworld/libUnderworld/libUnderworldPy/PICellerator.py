# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
import _PICellerator

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _PICellerator.SWIG_PyInstanceMethod_New
_swig_new_static_method = _PICellerator.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import underworld.libUnderworld.libUnderworldPy.StGermain
import underworld.libUnderworld.libUnderworldPy.StgDomain
import underworld.libUnderworld.libUnderworldPy.StgFEM
class IntegrationPointsSwarm(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    _sizeOfSelf = property(_PICellerator.IntegrationPointsSwarm__sizeOfSelf_get, _PICellerator.IntegrationPointsSwarm__sizeOfSelf_set)
    _deleteSelf = property(_PICellerator.IntegrationPointsSwarm__deleteSelf_get, _PICellerator.IntegrationPointsSwarm__deleteSelf_set)
    type = property(_PICellerator.IntegrationPointsSwarm_type_get, _PICellerator.IntegrationPointsSwarm_type_set)
    nRefs = property(_PICellerator.IntegrationPointsSwarm_nRefs_get, _PICellerator.IntegrationPointsSwarm_nRefs_set)
    locked = property(_PICellerator.IntegrationPointsSwarm_locked_get, _PICellerator.IntegrationPointsSwarm_locked_set)
    _delete = property(_PICellerator.IntegrationPointsSwarm__delete_get, _PICellerator.IntegrationPointsSwarm__delete_set)
    _print = property(_PICellerator.IntegrationPointsSwarm__print_get, _PICellerator.IntegrationPointsSwarm__print_set)
    _copy = property(_PICellerator.IntegrationPointsSwarm__copy_get, _PICellerator.IntegrationPointsSwarm__copy_set)
    name = property(_PICellerator.IntegrationPointsSwarm_name_get, _PICellerator.IntegrationPointsSwarm_name_set)
    nameAllocationType = property(_PICellerator.IntegrationPointsSwarm_nameAllocationType_get, _PICellerator.IntegrationPointsSwarm_nameAllocationType_set)
    _defaultConstructor = property(_PICellerator.IntegrationPointsSwarm__defaultConstructor_get, _PICellerator.IntegrationPointsSwarm__defaultConstructor_set)
    _construct = property(_PICellerator.IntegrationPointsSwarm__construct_get, _PICellerator.IntegrationPointsSwarm__construct_set)
    _build = property(_PICellerator.IntegrationPointsSwarm__build_get, _PICellerator.IntegrationPointsSwarm__build_set)
    _initialise = property(_PICellerator.IntegrationPointsSwarm__initialise_get, _PICellerator.IntegrationPointsSwarm__initialise_set)
    _execute = property(_PICellerator.IntegrationPointsSwarm__execute_get, _PICellerator.IntegrationPointsSwarm__execute_set)
    _destroy = property(_PICellerator.IntegrationPointsSwarm__destroy_get, _PICellerator.IntegrationPointsSwarm__destroy_set)
    isConstructed = property(_PICellerator.IntegrationPointsSwarm_isConstructed_get, _PICellerator.IntegrationPointsSwarm_isConstructed_set)
    isBuilt = property(_PICellerator.IntegrationPointsSwarm_isBuilt_get, _PICellerator.IntegrationPointsSwarm_isBuilt_set)
    isInitialised = property(_PICellerator.IntegrationPointsSwarm_isInitialised_get, _PICellerator.IntegrationPointsSwarm_isInitialised_set)
    hasExecuted = property(_PICellerator.IntegrationPointsSwarm_hasExecuted_get, _PICellerator.IntegrationPointsSwarm_hasExecuted_set)
    isDestroyed = property(_PICellerator.IntegrationPointsSwarm_isDestroyed_get, _PICellerator.IntegrationPointsSwarm_isDestroyed_set)
    constructType = property(_PICellerator.IntegrationPointsSwarm_constructType_get, _PICellerator.IntegrationPointsSwarm_constructType_set)
    buildType = property(_PICellerator.IntegrationPointsSwarm_buildType_get, _PICellerator.IntegrationPointsSwarm_buildType_set)
    initialiseType = property(_PICellerator.IntegrationPointsSwarm_initialiseType_get, _PICellerator.IntegrationPointsSwarm_initialiseType_set)
    executeType = property(_PICellerator.IntegrationPointsSwarm_executeType_get, _PICellerator.IntegrationPointsSwarm_executeType_set)
    destroyType = property(_PICellerator.IntegrationPointsSwarm_destroyType_get, _PICellerator.IntegrationPointsSwarm_destroyType_set)
    context = property(_PICellerator.IntegrationPointsSwarm_context_get, _PICellerator.IntegrationPointsSwarm_context_set)
    cellLayout = property(_PICellerator.IntegrationPointsSwarm_cellLayout_get, _PICellerator.IntegrationPointsSwarm_cellLayout_set)
    particleLayout = property(_PICellerator.IntegrationPointsSwarm_particleLayout_get, _PICellerator.IntegrationPointsSwarm_particleLayout_set)
    dim = property(_PICellerator.IntegrationPointsSwarm_dim_get, _PICellerator.IntegrationPointsSwarm_dim_set)
    extension_Register = property(_PICellerator.IntegrationPointsSwarm_extension_Register_get, _PICellerator.IntegrationPointsSwarm_extension_Register_set)
    debug = property(_PICellerator.IntegrationPointsSwarm_debug_get, _PICellerator.IntegrationPointsSwarm_debug_set)
    myRank = property(_PICellerator.IntegrationPointsSwarm_myRank_get, _PICellerator.IntegrationPointsSwarm_myRank_set)
    nProc = property(_PICellerator.IntegrationPointsSwarm_nProc_get, _PICellerator.IntegrationPointsSwarm_nProc_set)
    comm = property(_PICellerator.IntegrationPointsSwarm_comm_get, _PICellerator.IntegrationPointsSwarm_comm_set)
    isSwarmTypeToCheckPointAndReload = property(_PICellerator.IntegrationPointsSwarm_isSwarmTypeToCheckPointAndReload_get, _PICellerator.IntegrationPointsSwarm_isSwarmTypeToCheckPointAndReload_set)
    cellLocalCount = property(_PICellerator.IntegrationPointsSwarm_cellLocalCount_get, _PICellerator.IntegrationPointsSwarm_cellLocalCount_set)
    cellDomainCount = property(_PICellerator.IntegrationPointsSwarm_cellDomainCount_get, _PICellerator.IntegrationPointsSwarm_cellDomainCount_set)
    cellShadowCount = property(_PICellerator.IntegrationPointsSwarm_cellShadowCount_get, _PICellerator.IntegrationPointsSwarm_cellShadowCount_set)
    cellPointTbl = property(_PICellerator.IntegrationPointsSwarm_cellPointTbl_get, _PICellerator.IntegrationPointsSwarm_cellPointTbl_set)
    cellPointCountTbl = property(_PICellerator.IntegrationPointsSwarm_cellPointCountTbl_get, _PICellerator.IntegrationPointsSwarm_cellPointCountTbl_set)
    cellParticleTbl = property(_PICellerator.IntegrationPointsSwarm_cellParticleTbl_get, _PICellerator.IntegrationPointsSwarm_cellParticleTbl_set)
    cellParticleCountTbl = property(_PICellerator.IntegrationPointsSwarm_cellParticleCountTbl_get, _PICellerator.IntegrationPointsSwarm_cellParticleCountTbl_set)
    cellParticleSizeTbl = property(_PICellerator.IntegrationPointsSwarm_cellParticleSizeTbl_get, _PICellerator.IntegrationPointsSwarm_cellParticleSizeTbl_set)
    cellParticleTblDelta = property(_PICellerator.IntegrationPointsSwarm_cellParticleTblDelta_get, _PICellerator.IntegrationPointsSwarm_cellParticleTblDelta_set)
    particles = property(_PICellerator.IntegrationPointsSwarm_particles_get, _PICellerator.IntegrationPointsSwarm_particles_set)
    particleSize = property(_PICellerator.IntegrationPointsSwarm_particleSize_get, _PICellerator.IntegrationPointsSwarm_particleSize_set)
    preReallocParticleSize = property(_PICellerator.IntegrationPointsSwarm_preReallocParticleSize_get, _PICellerator.IntegrationPointsSwarm_preReallocParticleSize_set)
    particleLocalCount = property(_PICellerator.IntegrationPointsSwarm_particleLocalCount_get, _PICellerator.IntegrationPointsSwarm_particleLocalCount_set)
    particlesArraySize = property(_PICellerator.IntegrationPointsSwarm_particlesArraySize_get, _PICellerator.IntegrationPointsSwarm_particlesArraySize_set)
    particlesArrayDelta = property(_PICellerator.IntegrationPointsSwarm_particlesArrayDelta_get, _PICellerator.IntegrationPointsSwarm_particlesArrayDelta_set)
    extraParticlesFactor = property(_PICellerator.IntegrationPointsSwarm_extraParticlesFactor_get, _PICellerator.IntegrationPointsSwarm_extraParticlesFactor_set)
    shadowTablesBuilt = property(_PICellerator.IntegrationPointsSwarm_shadowTablesBuilt_get, _PICellerator.IntegrationPointsSwarm_shadowTablesBuilt_set)
    shadowCellParticleTbl = property(_PICellerator.IntegrationPointsSwarm_shadowCellParticleTbl_get, _PICellerator.IntegrationPointsSwarm_shadowCellParticleTbl_set)
    shadowCellParticleCountTbl = property(_PICellerator.IntegrationPointsSwarm_shadowCellParticleCountTbl_get, _PICellerator.IntegrationPointsSwarm_shadowCellParticleCountTbl_set)
    shadowParticles = property(_PICellerator.IntegrationPointsSwarm_shadowParticles_get, _PICellerator.IntegrationPointsSwarm_shadowParticles_set)
    shadowParticleCount = property(_PICellerator.IntegrationPointsSwarm_shadowParticleCount_get, _PICellerator.IntegrationPointsSwarm_shadowParticleCount_set)
    swarmVariable_Register = property(_PICellerator.IntegrationPointsSwarm_swarmVariable_Register_get, _PICellerator.IntegrationPointsSwarm_swarmVariable_Register_set)
    owningCellVariable = property(_PICellerator.IntegrationPointsSwarm_owningCellVariable_get, _PICellerator.IntegrationPointsSwarm_owningCellVariable_set)
    globalIdVariable = property(_PICellerator.IntegrationPointsSwarm_globalIdVariable_get, _PICellerator.IntegrationPointsSwarm_globalIdVariable_set)
    gidExtHandle = property(_PICellerator.IntegrationPointsSwarm_gidExtHandle_get, _PICellerator.IntegrationPointsSwarm_gidExtHandle_set)
    particleExtensionMgr = property(_PICellerator.IntegrationPointsSwarm_particleExtensionMgr_get, _PICellerator.IntegrationPointsSwarm_particleExtensionMgr_set)
    commHandlerList = property(_PICellerator.IntegrationPointsSwarm_commHandlerList_get, _PICellerator.IntegrationPointsSwarm_commHandlerList_set)
    nSwarmVars = property(_PICellerator.IntegrationPointsSwarm_nSwarmVars_get, _PICellerator.IntegrationPointsSwarm_nSwarmVars_set)
    swarmVars = property(_PICellerator.IntegrationPointsSwarm_swarmVars_get, _PICellerator.IntegrationPointsSwarm_swarmVars_set)
    ics = property(_PICellerator.IntegrationPointsSwarm_ics_get, _PICellerator.IntegrationPointsSwarm_ics_set)
    swarmReg_I = property(_PICellerator.IntegrationPointsSwarm_swarmReg_I_get, _PICellerator.IntegrationPointsSwarm_swarmReg_I_set)
    incArray = property(_PICellerator.IntegrationPointsSwarm_incArray_get, _PICellerator.IntegrationPointsSwarm_incArray_set)
    expanding = property(_PICellerator.IntegrationPointsSwarm_expanding_get, _PICellerator.IntegrationPointsSwarm_expanding_set)
    isAdvecting = property(_PICellerator.IntegrationPointsSwarm_isAdvecting_get, _PICellerator.IntegrationPointsSwarm_isAdvecting_set)
    mirroredSwarm = property(_PICellerator.IntegrationPointsSwarm_mirroredSwarm_get, _PICellerator.IntegrationPointsSwarm_mirroredSwarm_set)
    allow_parallel_nn = property(_PICellerator.IntegrationPointsSwarm_allow_parallel_nn_get, _PICellerator.IntegrationPointsSwarm_allow_parallel_nn_set)
    mesh = property(_PICellerator.IntegrationPointsSwarm_mesh_get, _PICellerator.IntegrationPointsSwarm_mesh_set)
    localCoordVariable = property(_PICellerator.IntegrationPointsSwarm_localCoordVariable_get, _PICellerator.IntegrationPointsSwarm_localCoordVariable_set)
    weightVariable = property(_PICellerator.IntegrationPointsSwarm_weightVariable_get, _PICellerator.IntegrationPointsSwarm_weightVariable_set)
    swarmsMappedTo = property(_PICellerator.IntegrationPointsSwarm_swarmsMappedTo_get, _PICellerator.IntegrationPointsSwarm_swarmsMappedTo_set)

    def __init__(self):
        _PICellerator.IntegrationPointsSwarm_swiginit(self, _PICellerator.new_IntegrationPointsSwarm())
    __swig_destroy__ = _PICellerator.delete_IntegrationPointsSwarm

# Register IntegrationPointsSwarm in _PICellerator:
_PICellerator.IntegrationPointsSwarm_swigregister(IntegrationPointsSwarm)
cvar = _PICellerator.cvar
IntegrationPointsSwarm_Type = cvar.IntegrationPointsSwarm_Type

_IntegrationPointsSwarm_DefaultNew = _PICellerator._IntegrationPointsSwarm_DefaultNew
_IntegrationPointsSwarm_New = _PICellerator._IntegrationPointsSwarm_New
_IntegrationPointsSwarm_AssignFromXML = _PICellerator._IntegrationPointsSwarm_AssignFromXML
_IntegrationPointsSwarm_Init = _PICellerator._IntegrationPointsSwarm_Init
_IntegrationPointsSwarm_Delete = _PICellerator._IntegrationPointsSwarm_Delete
_IntegrationPointsSwarm_Print = _PICellerator._IntegrationPointsSwarm_Print
_IntegrationPointsSwarm_Build = _PICellerator._IntegrationPointsSwarm_Build
_IntegrationPointsSwarm_Initialise = _PICellerator._IntegrationPointsSwarm_Initialise
_IntegrationPointsSwarm_Execute = _PICellerator._IntegrationPointsSwarm_Execute
_IntegrationPointsSwarm_Destroy = _PICellerator._IntegrationPointsSwarm_Destroy
_IntegrationPointsSwarm_UpdateHook = _PICellerator._IntegrationPointsSwarm_UpdateHook
IntegrationPointsSwarm_ClearSwarmMaps = _PICellerator.IntegrationPointsSwarm_ClearSwarmMaps
class CoincidentMapper(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    _sizeOfSelf = property(_PICellerator.CoincidentMapper__sizeOfSelf_get, _PICellerator.CoincidentMapper__sizeOfSelf_set)
    _deleteSelf = property(_PICellerator.CoincidentMapper__deleteSelf_get, _PICellerator.CoincidentMapper__deleteSelf_set)
    type = property(_PICellerator.CoincidentMapper_type_get, _PICellerator.CoincidentMapper_type_set)
    nRefs = property(_PICellerator.CoincidentMapper_nRefs_get, _PICellerator.CoincidentMapper_nRefs_set)
    locked = property(_PICellerator.CoincidentMapper_locked_get, _PICellerator.CoincidentMapper_locked_set)
    _delete = property(_PICellerator.CoincidentMapper__delete_get, _PICellerator.CoincidentMapper__delete_set)
    _print = property(_PICellerator.CoincidentMapper__print_get, _PICellerator.CoincidentMapper__print_set)
    _copy = property(_PICellerator.CoincidentMapper__copy_get, _PICellerator.CoincidentMapper__copy_set)
    name = property(_PICellerator.CoincidentMapper_name_get, _PICellerator.CoincidentMapper_name_set)
    nameAllocationType = property(_PICellerator.CoincidentMapper_nameAllocationType_get, _PICellerator.CoincidentMapper_nameAllocationType_set)
    _defaultConstructor = property(_PICellerator.CoincidentMapper__defaultConstructor_get, _PICellerator.CoincidentMapper__defaultConstructor_set)
    _construct = property(_PICellerator.CoincidentMapper__construct_get, _PICellerator.CoincidentMapper__construct_set)
    _build = property(_PICellerator.CoincidentMapper__build_get, _PICellerator.CoincidentMapper__build_set)
    _initialise = property(_PICellerator.CoincidentMapper__initialise_get, _PICellerator.CoincidentMapper__initialise_set)
    _execute = property(_PICellerator.CoincidentMapper__execute_get, _PICellerator.CoincidentMapper__execute_set)
    _destroy = property(_PICellerator.CoincidentMapper__destroy_get, _PICellerator.CoincidentMapper__destroy_set)
    isConstructed = property(_PICellerator.CoincidentMapper_isConstructed_get, _PICellerator.CoincidentMapper_isConstructed_set)
    isBuilt = property(_PICellerator.CoincidentMapper_isBuilt_get, _PICellerator.CoincidentMapper_isBuilt_set)
    isInitialised = property(_PICellerator.CoincidentMapper_isInitialised_get, _PICellerator.CoincidentMapper_isInitialised_set)
    hasExecuted = property(_PICellerator.CoincidentMapper_hasExecuted_get, _PICellerator.CoincidentMapper_hasExecuted_set)
    isDestroyed = property(_PICellerator.CoincidentMapper_isDestroyed_get, _PICellerator.CoincidentMapper_isDestroyed_set)
    constructType = property(_PICellerator.CoincidentMapper_constructType_get, _PICellerator.CoincidentMapper_constructType_set)
    buildType = property(_PICellerator.CoincidentMapper_buildType_get, _PICellerator.CoincidentMapper_buildType_set)
    initialiseType = property(_PICellerator.CoincidentMapper_initialiseType_get, _PICellerator.CoincidentMapper_initialiseType_set)
    executeType = property(_PICellerator.CoincidentMapper_executeType_get, _PICellerator.CoincidentMapper_executeType_set)
    destroyType = property(_PICellerator.CoincidentMapper_destroyType_get, _PICellerator.CoincidentMapper_destroyType_set)
    integrationSwarm = property(_PICellerator.CoincidentMapper_integrationSwarm_get, _PICellerator.CoincidentMapper_integrationSwarm_set)
    materialSwarm = property(_PICellerator.CoincidentMapper_materialSwarm_get, _PICellerator.CoincidentMapper_materialSwarm_set)

    def __init__(self):
        _PICellerator.CoincidentMapper_swiginit(self, _PICellerator.new_CoincidentMapper())
    __swig_destroy__ = _PICellerator.delete_CoincidentMapper

# Register CoincidentMapper in _PICellerator:
_PICellerator.CoincidentMapper_swigregister(CoincidentMapper)
CoincidentMapper_Type = cvar.CoincidentMapper_Type

_CoincidentMapper_New = _PICellerator._CoincidentMapper_New
_CoincidentMapper_Delete = _PICellerator._CoincidentMapper_Delete
_CoincidentMapper_DefaultNew = _PICellerator._CoincidentMapper_DefaultNew
_CoincidentMapper_AssignFromXML = _PICellerator._CoincidentMapper_AssignFromXML
_CoincidentMapper_Build = _PICellerator._CoincidentMapper_Build
_CoincidentMapper_Initialise = _PICellerator._CoincidentMapper_Initialise
_CoincidentMapper_Map = _PICellerator._CoincidentMapper_Map
class SwarmMap(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    _sizeOfSelf = property(_PICellerator.SwarmMap__sizeOfSelf_get, _PICellerator.SwarmMap__sizeOfSelf_set)
    _deleteSelf = property(_PICellerator.SwarmMap__deleteSelf_get, _PICellerator.SwarmMap__deleteSelf_set)
    type = property(_PICellerator.SwarmMap_type_get, _PICellerator.SwarmMap_type_set)
    nRefs = property(_PICellerator.SwarmMap_nRefs_get, _PICellerator.SwarmMap_nRefs_set)
    locked = property(_PICellerator.SwarmMap_locked_get, _PICellerator.SwarmMap_locked_set)
    _delete = property(_PICellerator.SwarmMap__delete_get, _PICellerator.SwarmMap__delete_set)
    _print = property(_PICellerator.SwarmMap__print_get, _PICellerator.SwarmMap__print_set)
    _copy = property(_PICellerator.SwarmMap__copy_get, _PICellerator.SwarmMap__copy_set)
    swarm = property(_PICellerator.SwarmMap_swarm_get, _PICellerator.SwarmMap_swarm_set)
    elementCount = property(_PICellerator.SwarmMap_elementCount_get, _PICellerator.SwarmMap_elementCount_set)
    mapArray = property(_PICellerator.SwarmMap_mapArray_get, _PICellerator.SwarmMap_mapArray_set)

    def __init__(self):
        _PICellerator.SwarmMap_swiginit(self, _PICellerator.new_SwarmMap())
    __swig_destroy__ = _PICellerator.delete_SwarmMap

# Register SwarmMap in _PICellerator:
_PICellerator.SwarmMap_swigregister(SwarmMap)
SwarmMap_Type = cvar.SwarmMap_Type

SwarmMap_New = _PICellerator.SwarmMap_New
_SwarmMap_New = _PICellerator._SwarmMap_New
_SwarmMap_Init = _PICellerator._SwarmMap_Init
_SwarmMap_Delete = _PICellerator._SwarmMap_Delete
_SwarmMap_Print = _PICellerator._SwarmMap_Print
SwarmMap_Clear = _PICellerator.SwarmMap_Clear
SwarmMap_Insert = _PICellerator.SwarmMap_Insert
SwarmMap_Map = _PICellerator.SwarmMap_Map
class GeneralSwarm(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    _sizeOfSelf = property(_PICellerator.GeneralSwarm__sizeOfSelf_get, _PICellerator.GeneralSwarm__sizeOfSelf_set)
    _deleteSelf = property(_PICellerator.GeneralSwarm__deleteSelf_get, _PICellerator.GeneralSwarm__deleteSelf_set)
    type = property(_PICellerator.GeneralSwarm_type_get, _PICellerator.GeneralSwarm_type_set)
    nRefs = property(_PICellerator.GeneralSwarm_nRefs_get, _PICellerator.GeneralSwarm_nRefs_set)
    locked = property(_PICellerator.GeneralSwarm_locked_get, _PICellerator.GeneralSwarm_locked_set)
    _delete = property(_PICellerator.GeneralSwarm__delete_get, _PICellerator.GeneralSwarm__delete_set)
    _print = property(_PICellerator.GeneralSwarm__print_get, _PICellerator.GeneralSwarm__print_set)
    _copy = property(_PICellerator.GeneralSwarm__copy_get, _PICellerator.GeneralSwarm__copy_set)
    name = property(_PICellerator.GeneralSwarm_name_get, _PICellerator.GeneralSwarm_name_set)
    nameAllocationType = property(_PICellerator.GeneralSwarm_nameAllocationType_get, _PICellerator.GeneralSwarm_nameAllocationType_set)
    _defaultConstructor = property(_PICellerator.GeneralSwarm__defaultConstructor_get, _PICellerator.GeneralSwarm__defaultConstructor_set)
    _construct = property(_PICellerator.GeneralSwarm__construct_get, _PICellerator.GeneralSwarm__construct_set)
    _build = property(_PICellerator.GeneralSwarm__build_get, _PICellerator.GeneralSwarm__build_set)
    _initialise = property(_PICellerator.GeneralSwarm__initialise_get, _PICellerator.GeneralSwarm__initialise_set)
    _execute = property(_PICellerator.GeneralSwarm__execute_get, _PICellerator.GeneralSwarm__execute_set)
    _destroy = property(_PICellerator.GeneralSwarm__destroy_get, _PICellerator.GeneralSwarm__destroy_set)
    isConstructed = property(_PICellerator.GeneralSwarm_isConstructed_get, _PICellerator.GeneralSwarm_isConstructed_set)
    isBuilt = property(_PICellerator.GeneralSwarm_isBuilt_get, _PICellerator.GeneralSwarm_isBuilt_set)
    isInitialised = property(_PICellerator.GeneralSwarm_isInitialised_get, _PICellerator.GeneralSwarm_isInitialised_set)
    hasExecuted = property(_PICellerator.GeneralSwarm_hasExecuted_get, _PICellerator.GeneralSwarm_hasExecuted_set)
    isDestroyed = property(_PICellerator.GeneralSwarm_isDestroyed_get, _PICellerator.GeneralSwarm_isDestroyed_set)
    constructType = property(_PICellerator.GeneralSwarm_constructType_get, _PICellerator.GeneralSwarm_constructType_set)
    buildType = property(_PICellerator.GeneralSwarm_buildType_get, _PICellerator.GeneralSwarm_buildType_set)
    initialiseType = property(_PICellerator.GeneralSwarm_initialiseType_get, _PICellerator.GeneralSwarm_initialiseType_set)
    executeType = property(_PICellerator.GeneralSwarm_executeType_get, _PICellerator.GeneralSwarm_executeType_set)
    destroyType = property(_PICellerator.GeneralSwarm_destroyType_get, _PICellerator.GeneralSwarm_destroyType_set)
    context = property(_PICellerator.GeneralSwarm_context_get, _PICellerator.GeneralSwarm_context_set)
    cellLayout = property(_PICellerator.GeneralSwarm_cellLayout_get, _PICellerator.GeneralSwarm_cellLayout_set)
    particleLayout = property(_PICellerator.GeneralSwarm_particleLayout_get, _PICellerator.GeneralSwarm_particleLayout_set)
    dim = property(_PICellerator.GeneralSwarm_dim_get, _PICellerator.GeneralSwarm_dim_set)
    extension_Register = property(_PICellerator.GeneralSwarm_extension_Register_get, _PICellerator.GeneralSwarm_extension_Register_set)
    debug = property(_PICellerator.GeneralSwarm_debug_get, _PICellerator.GeneralSwarm_debug_set)
    myRank = property(_PICellerator.GeneralSwarm_myRank_get, _PICellerator.GeneralSwarm_myRank_set)
    nProc = property(_PICellerator.GeneralSwarm_nProc_get, _PICellerator.GeneralSwarm_nProc_set)
    comm = property(_PICellerator.GeneralSwarm_comm_get, _PICellerator.GeneralSwarm_comm_set)
    isSwarmTypeToCheckPointAndReload = property(_PICellerator.GeneralSwarm_isSwarmTypeToCheckPointAndReload_get, _PICellerator.GeneralSwarm_isSwarmTypeToCheckPointAndReload_set)
    cellLocalCount = property(_PICellerator.GeneralSwarm_cellLocalCount_get, _PICellerator.GeneralSwarm_cellLocalCount_set)
    cellDomainCount = property(_PICellerator.GeneralSwarm_cellDomainCount_get, _PICellerator.GeneralSwarm_cellDomainCount_set)
    cellShadowCount = property(_PICellerator.GeneralSwarm_cellShadowCount_get, _PICellerator.GeneralSwarm_cellShadowCount_set)
    cellPointTbl = property(_PICellerator.GeneralSwarm_cellPointTbl_get, _PICellerator.GeneralSwarm_cellPointTbl_set)
    cellPointCountTbl = property(_PICellerator.GeneralSwarm_cellPointCountTbl_get, _PICellerator.GeneralSwarm_cellPointCountTbl_set)
    cellParticleTbl = property(_PICellerator.GeneralSwarm_cellParticleTbl_get, _PICellerator.GeneralSwarm_cellParticleTbl_set)
    cellParticleCountTbl = property(_PICellerator.GeneralSwarm_cellParticleCountTbl_get, _PICellerator.GeneralSwarm_cellParticleCountTbl_set)
    cellParticleSizeTbl = property(_PICellerator.GeneralSwarm_cellParticleSizeTbl_get, _PICellerator.GeneralSwarm_cellParticleSizeTbl_set)
    cellParticleTblDelta = property(_PICellerator.GeneralSwarm_cellParticleTblDelta_get, _PICellerator.GeneralSwarm_cellParticleTblDelta_set)
    particles = property(_PICellerator.GeneralSwarm_particles_get, _PICellerator.GeneralSwarm_particles_set)
    particleSize = property(_PICellerator.GeneralSwarm_particleSize_get, _PICellerator.GeneralSwarm_particleSize_set)
    preReallocParticleSize = property(_PICellerator.GeneralSwarm_preReallocParticleSize_get, _PICellerator.GeneralSwarm_preReallocParticleSize_set)
    particleLocalCount = property(_PICellerator.GeneralSwarm_particleLocalCount_get, _PICellerator.GeneralSwarm_particleLocalCount_set)
    particlesArraySize = property(_PICellerator.GeneralSwarm_particlesArraySize_get, _PICellerator.GeneralSwarm_particlesArraySize_set)
    particlesArrayDelta = property(_PICellerator.GeneralSwarm_particlesArrayDelta_get, _PICellerator.GeneralSwarm_particlesArrayDelta_set)
    extraParticlesFactor = property(_PICellerator.GeneralSwarm_extraParticlesFactor_get, _PICellerator.GeneralSwarm_extraParticlesFactor_set)
    shadowTablesBuilt = property(_PICellerator.GeneralSwarm_shadowTablesBuilt_get, _PICellerator.GeneralSwarm_shadowTablesBuilt_set)
    shadowCellParticleTbl = property(_PICellerator.GeneralSwarm_shadowCellParticleTbl_get, _PICellerator.GeneralSwarm_shadowCellParticleTbl_set)
    shadowCellParticleCountTbl = property(_PICellerator.GeneralSwarm_shadowCellParticleCountTbl_get, _PICellerator.GeneralSwarm_shadowCellParticleCountTbl_set)
    shadowParticles = property(_PICellerator.GeneralSwarm_shadowParticles_get, _PICellerator.GeneralSwarm_shadowParticles_set)
    shadowParticleCount = property(_PICellerator.GeneralSwarm_shadowParticleCount_get, _PICellerator.GeneralSwarm_shadowParticleCount_set)
    swarmVariable_Register = property(_PICellerator.GeneralSwarm_swarmVariable_Register_get, _PICellerator.GeneralSwarm_swarmVariable_Register_set)
    owningCellVariable = property(_PICellerator.GeneralSwarm_owningCellVariable_get, _PICellerator.GeneralSwarm_owningCellVariable_set)
    globalIdVariable = property(_PICellerator.GeneralSwarm_globalIdVariable_get, _PICellerator.GeneralSwarm_globalIdVariable_set)
    gidExtHandle = property(_PICellerator.GeneralSwarm_gidExtHandle_get, _PICellerator.GeneralSwarm_gidExtHandle_set)
    particleExtensionMgr = property(_PICellerator.GeneralSwarm_particleExtensionMgr_get, _PICellerator.GeneralSwarm_particleExtensionMgr_set)
    commHandlerList = property(_PICellerator.GeneralSwarm_commHandlerList_get, _PICellerator.GeneralSwarm_commHandlerList_set)
    nSwarmVars = property(_PICellerator.GeneralSwarm_nSwarmVars_get, _PICellerator.GeneralSwarm_nSwarmVars_set)
    swarmVars = property(_PICellerator.GeneralSwarm_swarmVars_get, _PICellerator.GeneralSwarm_swarmVars_set)
    ics = property(_PICellerator.GeneralSwarm_ics_get, _PICellerator.GeneralSwarm_ics_set)
    swarmReg_I = property(_PICellerator.GeneralSwarm_swarmReg_I_get, _PICellerator.GeneralSwarm_swarmReg_I_set)
    incArray = property(_PICellerator.GeneralSwarm_incArray_get, _PICellerator.GeneralSwarm_incArray_set)
    expanding = property(_PICellerator.GeneralSwarm_expanding_get, _PICellerator.GeneralSwarm_expanding_set)
    isAdvecting = property(_PICellerator.GeneralSwarm_isAdvecting_get, _PICellerator.GeneralSwarm_isAdvecting_set)
    mirroredSwarm = property(_PICellerator.GeneralSwarm_mirroredSwarm_get, _PICellerator.GeneralSwarm_mirroredSwarm_set)
    allow_parallel_nn = property(_PICellerator.GeneralSwarm_allow_parallel_nn_get, _PICellerator.GeneralSwarm_allow_parallel_nn_set)
    swarmAdvector = property(_PICellerator.GeneralSwarm_swarmAdvector_get, _PICellerator.GeneralSwarm_swarmAdvector_set)
    escapedRoutine = property(_PICellerator.GeneralSwarm_escapedRoutine_get, _PICellerator.GeneralSwarm_escapedRoutine_set)
    particleCoordVariable = property(_PICellerator.GeneralSwarm_particleCoordVariable_get, _PICellerator.GeneralSwarm_particleCoordVariable_set)
    previousIntSwarmMap = property(_PICellerator.GeneralSwarm_previousIntSwarmMap_get, _PICellerator.GeneralSwarm_previousIntSwarmMap_set)
    intSwarmMapList = property(_PICellerator.GeneralSwarm_intSwarmMapList_get, _PICellerator.GeneralSwarm_intSwarmMapList_set)
    index = property(_PICellerator.GeneralSwarm_index_get, _PICellerator.GeneralSwarm_index_set)
    index_int = property(_PICellerator.GeneralSwarm_index_int_get, _PICellerator.GeneralSwarm_index_int_set)
    GeneralSwarm_AddParticlesFromCoordArray = _swig_new_instance_method(_PICellerator.GeneralSwarm_GeneralSwarm_AddParticlesFromCoordArray)

    def __init__(self):
        _PICellerator.GeneralSwarm_swiginit(self, _PICellerator.new_GeneralSwarm())
    __swig_destroy__ = _PICellerator.delete_GeneralSwarm

# Register GeneralSwarm in _PICellerator:
_PICellerator.GeneralSwarm_swigregister(GeneralSwarm)
GeneralSwarm_Type = cvar.GeneralSwarm_Type

_GeneralSwarm_New = _PICellerator._GeneralSwarm_New
_GeneralSwarm_Delete = _PICellerator._GeneralSwarm_Delete
_GeneralSwarm_DefaultNew = _PICellerator._GeneralSwarm_DefaultNew
_GeneralSwarm_AssignFromXML = _PICellerator._GeneralSwarm_AssignFromXML
_GeneralSwarm_Build = _PICellerator._GeneralSwarm_Build
_GeneralSwarm_Initialise = _PICellerator._GeneralSwarm_Initialise
_GeneralSwarm_Execute = _PICellerator._GeneralSwarm_Execute
_GeneralSwarm_Destroy = _PICellerator._GeneralSwarm_Destroy
_GeneralSwarm_Init = _PICellerator._GeneralSwarm_Init
GeneralSwarm_GetExtensionAt = _PICellerator.GeneralSwarm_GetExtensionAt
GeneralSwarm_AddParticlesFromCoordArray = _PICellerator.GeneralSwarm_AddParticlesFromCoordArray
GeneralSwarm_AddParticle = _PICellerator.GeneralSwarm_AddParticle
GeneralSwarm_IntegrationPointMap = _PICellerator.GeneralSwarm_IntegrationPointMap
GeneralSwarm_ClearSwarmMaps = _PICellerator.GeneralSwarm_ClearSwarmMaps
GeneralSwarm_DeleteIndex = _PICellerator.GeneralSwarm_DeleteIndex
GeneralSwarm_GetClosestParticles = _PICellerator.GeneralSwarm_GetClosestParticles
class SwarmAdvector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    _sizeOfSelf = property(_PICellerator.SwarmAdvector__sizeOfSelf_get, _PICellerator.SwarmAdvector__sizeOfSelf_set)
    _deleteSelf = property(_PICellerator.SwarmAdvector__deleteSelf_get, _PICellerator.SwarmAdvector__deleteSelf_set)
    type = property(_PICellerator.SwarmAdvector_type_get, _PICellerator.SwarmAdvector_type_set)
    nRefs = property(_PICellerator.SwarmAdvector_nRefs_get, _PICellerator.SwarmAdvector_nRefs_set)
    locked = property(_PICellerator.SwarmAdvector_locked_get, _PICellerator.SwarmAdvector_locked_set)
    _delete = property(_PICellerator.SwarmAdvector__delete_get, _PICellerator.SwarmAdvector__delete_set)
    _print = property(_PICellerator.SwarmAdvector__print_get, _PICellerator.SwarmAdvector__print_set)
    _copy = property(_PICellerator.SwarmAdvector__copy_get, _PICellerator.SwarmAdvector__copy_set)
    name = property(_PICellerator.SwarmAdvector_name_get, _PICellerator.SwarmAdvector_name_set)
    nameAllocationType = property(_PICellerator.SwarmAdvector_nameAllocationType_get, _PICellerator.SwarmAdvector_nameAllocationType_set)
    _defaultConstructor = property(_PICellerator.SwarmAdvector__defaultConstructor_get, _PICellerator.SwarmAdvector__defaultConstructor_set)
    _construct = property(_PICellerator.SwarmAdvector__construct_get, _PICellerator.SwarmAdvector__construct_set)
    _build = property(_PICellerator.SwarmAdvector__build_get, _PICellerator.SwarmAdvector__build_set)
    _initialise = property(_PICellerator.SwarmAdvector__initialise_get, _PICellerator.SwarmAdvector__initialise_set)
    _execute = property(_PICellerator.SwarmAdvector__execute_get, _PICellerator.SwarmAdvector__execute_set)
    _destroy = property(_PICellerator.SwarmAdvector__destroy_get, _PICellerator.SwarmAdvector__destroy_set)
    isConstructed = property(_PICellerator.SwarmAdvector_isConstructed_get, _PICellerator.SwarmAdvector_isConstructed_set)
    isBuilt = property(_PICellerator.SwarmAdvector_isBuilt_get, _PICellerator.SwarmAdvector_isBuilt_set)
    isInitialised = property(_PICellerator.SwarmAdvector_isInitialised_get, _PICellerator.SwarmAdvector_isInitialised_set)
    hasExecuted = property(_PICellerator.SwarmAdvector_hasExecuted_get, _PICellerator.SwarmAdvector_hasExecuted_set)
    isDestroyed = property(_PICellerator.SwarmAdvector_isDestroyed_get, _PICellerator.SwarmAdvector_isDestroyed_set)
    constructType = property(_PICellerator.SwarmAdvector_constructType_get, _PICellerator.SwarmAdvector_constructType_set)
    buildType = property(_PICellerator.SwarmAdvector_buildType_get, _PICellerator.SwarmAdvector_buildType_set)
    initialiseType = property(_PICellerator.SwarmAdvector_initialiseType_get, _PICellerator.SwarmAdvector_initialiseType_set)
    executeType = property(_PICellerator.SwarmAdvector_executeType_get, _PICellerator.SwarmAdvector_executeType_set)
    destroyType = property(_PICellerator.SwarmAdvector_destroyType_get, _PICellerator.SwarmAdvector_destroyType_set)
    context = property(_PICellerator.SwarmAdvector_context_get, _PICellerator.SwarmAdvector_context_set)
    _calculateTimeDeriv = property(_PICellerator.SwarmAdvector__calculateTimeDeriv_get, _PICellerator.SwarmAdvector__calculateTimeDeriv_set)
    _intermediate = property(_PICellerator.SwarmAdvector__intermediate_get, _PICellerator.SwarmAdvector__intermediate_set)
    timeIntegrator = property(_PICellerator.SwarmAdvector_timeIntegrator_get, _PICellerator.SwarmAdvector_timeIntegrator_set)
    variable = property(_PICellerator.SwarmAdvector_variable_get, _PICellerator.SwarmAdvector_variable_set)
    dataCount = property(_PICellerator.SwarmAdvector_dataCount_get, _PICellerator.SwarmAdvector_dataCount_set)
    data = property(_PICellerator.SwarmAdvector_data_get, _PICellerator.SwarmAdvector_data_set)
    allowFallbackToFirstOrder = property(_PICellerator.SwarmAdvector_allowFallbackToFirstOrder_get, _PICellerator.SwarmAdvector_allowFallbackToFirstOrder_set)
    debug = property(_PICellerator.SwarmAdvector_debug_get, _PICellerator.SwarmAdvector_debug_set)
    error_msg = property(_PICellerator.SwarmAdvector_error_msg_get, _PICellerator.SwarmAdvector_error_msg_set)
    swarm = property(_PICellerator.SwarmAdvector_swarm_get, _PICellerator.SwarmAdvector_swarm_set)
    velocityField = property(_PICellerator.SwarmAdvector_velocityField_get, _PICellerator.SwarmAdvector_velocityField_set)
    periodicBCsManager = property(_PICellerator.SwarmAdvector_periodicBCsManager_get, _PICellerator.SwarmAdvector_periodicBCsManager_set)

    def __init__(self):
        _PICellerator.SwarmAdvector_swiginit(self, _PICellerator.new_SwarmAdvector())
    __swig_destroy__ = _PICellerator.delete_SwarmAdvector

# Register SwarmAdvector in _PICellerator:
_PICellerator.SwarmAdvector_swigregister(SwarmAdvector)
SwarmAdvector_Type = cvar.SwarmAdvector_Type

SwarmAdvector_New = _PICellerator.SwarmAdvector_New
_SwarmAdvector_New = _PICellerator._SwarmAdvector_New
_SwarmAdvector_Init = _PICellerator._SwarmAdvector_Init
_SwarmAdvector_Delete = _PICellerator._SwarmAdvector_Delete
_SwarmAdvector_Print = _PICellerator._SwarmAdvector_Print
_SwarmAdvector_Copy = _PICellerator._SwarmAdvector_Copy
_SwarmAdvector_DefaultNew = _PICellerator._SwarmAdvector_DefaultNew
_SwarmAdvector_AssignFromXML = _PICellerator._SwarmAdvector_AssignFromXML
_SwarmAdvector_Build = _PICellerator._SwarmAdvector_Build
_SwarmAdvector_Initialise = _PICellerator._SwarmAdvector_Initialise
_SwarmAdvector_Execute = _PICellerator._SwarmAdvector_Execute
_SwarmAdvector_Destroy = _PICellerator._SwarmAdvector_Destroy
_SwarmAdvector_TimeDeriv = _PICellerator._SwarmAdvector_TimeDeriv
_SwarmAdvector_TimeDeriv_Quicker4IrregularMesh = _PICellerator._SwarmAdvector_TimeDeriv_Quicker4IrregularMesh
_SwarmAdvector_Intermediate = _PICellerator._SwarmAdvector_Intermediate
SwarmAdvector_MaxDt = _PICellerator.SwarmAdvector_MaxDt
class EscapedRoutine(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    _sizeOfSelf = property(_PICellerator.EscapedRoutine__sizeOfSelf_get, _PICellerator.EscapedRoutine__sizeOfSelf_set)
    _deleteSelf = property(_PICellerator.EscapedRoutine__deleteSelf_get, _PICellerator.EscapedRoutine__deleteSelf_set)
    type = property(_PICellerator.EscapedRoutine_type_get, _PICellerator.EscapedRoutine_type_set)
    nRefs = property(_PICellerator.EscapedRoutine_nRefs_get, _PICellerator.EscapedRoutine_nRefs_set)
    locked = property(_PICellerator.EscapedRoutine_locked_get, _PICellerator.EscapedRoutine_locked_set)
    _delete = property(_PICellerator.EscapedRoutine__delete_get, _PICellerator.EscapedRoutine__delete_set)
    _print = property(_PICellerator.EscapedRoutine__print_get, _PICellerator.EscapedRoutine__print_set)
    _copy = property(_PICellerator.EscapedRoutine__copy_get, _PICellerator.EscapedRoutine__copy_set)
    name = property(_PICellerator.EscapedRoutine_name_get, _PICellerator.EscapedRoutine_name_set)
    nameAllocationType = property(_PICellerator.EscapedRoutine_nameAllocationType_get, _PICellerator.EscapedRoutine_nameAllocationType_set)
    _defaultConstructor = property(_PICellerator.EscapedRoutine__defaultConstructor_get, _PICellerator.EscapedRoutine__defaultConstructor_set)
    _construct = property(_PICellerator.EscapedRoutine__construct_get, _PICellerator.EscapedRoutine__construct_set)
    _build = property(_PICellerator.EscapedRoutine__build_get, _PICellerator.EscapedRoutine__build_set)
    _initialise = property(_PICellerator.EscapedRoutine__initialise_get, _PICellerator.EscapedRoutine__initialise_set)
    _execute = property(_PICellerator.EscapedRoutine__execute_get, _PICellerator.EscapedRoutine__execute_set)
    _destroy = property(_PICellerator.EscapedRoutine__destroy_get, _PICellerator.EscapedRoutine__destroy_set)
    isConstructed = property(_PICellerator.EscapedRoutine_isConstructed_get, _PICellerator.EscapedRoutine_isConstructed_set)
    isBuilt = property(_PICellerator.EscapedRoutine_isBuilt_get, _PICellerator.EscapedRoutine_isBuilt_set)
    isInitialised = property(_PICellerator.EscapedRoutine_isInitialised_get, _PICellerator.EscapedRoutine_isInitialised_set)
    hasExecuted = property(_PICellerator.EscapedRoutine_hasExecuted_get, _PICellerator.EscapedRoutine_hasExecuted_set)
    isDestroyed = property(_PICellerator.EscapedRoutine_isDestroyed_get, _PICellerator.EscapedRoutine_isDestroyed_set)
    constructType = property(_PICellerator.EscapedRoutine_constructType_get, _PICellerator.EscapedRoutine_constructType_set)
    buildType = property(_PICellerator.EscapedRoutine_buildType_get, _PICellerator.EscapedRoutine_buildType_set)
    initialiseType = property(_PICellerator.EscapedRoutine_initialiseType_get, _PICellerator.EscapedRoutine_initialiseType_set)
    executeType = property(_PICellerator.EscapedRoutine_executeType_get, _PICellerator.EscapedRoutine_executeType_set)
    destroyType = property(_PICellerator.EscapedRoutine_destroyType_get, _PICellerator.EscapedRoutine_destroyType_set)
    _select = property(_PICellerator.EscapedRoutine__select_get, _PICellerator.EscapedRoutine__select_set)
    debug = property(_PICellerator.EscapedRoutine_debug_get, _PICellerator.EscapedRoutine_debug_set)
    dim = property(_PICellerator.EscapedRoutine_dim_get, _PICellerator.EscapedRoutine_dim_set)
    particlesToRemoveCount = property(_PICellerator.EscapedRoutine_particlesToRemoveCount_get, _PICellerator.EscapedRoutine_particlesToRemoveCount_set)
    particlesToRemoveAlloced = property(_PICellerator.EscapedRoutine_particlesToRemoveAlloced_get, _PICellerator.EscapedRoutine_particlesToRemoveAlloced_set)
    particlesToRemoveDelta = property(_PICellerator.EscapedRoutine_particlesToRemoveDelta_get, _PICellerator.EscapedRoutine_particlesToRemoveDelta_set)
    particlesToRemoveList = property(_PICellerator.EscapedRoutine_particlesToRemoveList_get, _PICellerator.EscapedRoutine_particlesToRemoveList_set)

    def __init__(self):
        _PICellerator.EscapedRoutine_swiginit(self, _PICellerator.new_EscapedRoutine())
    __swig_destroy__ = _PICellerator.delete_EscapedRoutine

# Register EscapedRoutine in _PICellerator:
_PICellerator.EscapedRoutine_swigregister(EscapedRoutine)
EscapedRoutine_Type = cvar.EscapedRoutine_Type

_EscapedRoutine_New = _PICellerator._EscapedRoutine_New
_EscapedRoutine_DefaultNew = _PICellerator._EscapedRoutine_DefaultNew
_EscapedRoutine_Init = _PICellerator._EscapedRoutine_Init
_EscapedRoutine_Delete = _PICellerator._EscapedRoutine_Delete
_EscapedRoutine_Print = _PICellerator._EscapedRoutine_Print
_EscapedRoutine_Copy = _PICellerator._EscapedRoutine_Copy
_EscapedRoutine_AssignFromXML = _PICellerator._EscapedRoutine_AssignFromXML
_EscapedRoutine_Build = _PICellerator._EscapedRoutine_Build
_EscapedRoutine_Initialise = _PICellerator._EscapedRoutine_Initialise
_EscapedRoutine_Execute = _PICellerator._EscapedRoutine_Execute
_EscapedRoutine_Destroy = _PICellerator._EscapedRoutine_Destroy
EscapedRoutine_Select = _PICellerator.EscapedRoutine_Select
_EscapedRoutine_Select = _PICellerator._EscapedRoutine_Select
EscapedRoutine_RemoveFromSwarm = _PICellerator.EscapedRoutine_RemoveFromSwarm
EscapedRoutine_InitialiseParticleList = _PICellerator.EscapedRoutine_InitialiseParticleList
EscapedRoutine_SetParticleToRemove = _PICellerator.EscapedRoutine_SetParticleToRemove
_EscapedRoutine_CompareParticles = _PICellerator._EscapedRoutine_CompareParticles
EscapedRoutine_SortParticleList = _PICellerator.EscapedRoutine_SortParticleList
EscapedRoutine_RemoveParticles = _PICellerator.EscapedRoutine_RemoveParticles
class WeightsCalculator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    _sizeOfSelf = property(_PICellerator.WeightsCalculator__sizeOfSelf_get, _PICellerator.WeightsCalculator__sizeOfSelf_set)
    _deleteSelf = property(_PICellerator.WeightsCalculator__deleteSelf_get, _PICellerator.WeightsCalculator__deleteSelf_set)
    type = property(_PICellerator.WeightsCalculator_type_get, _PICellerator.WeightsCalculator_type_set)
    nRefs = property(_PICellerator.WeightsCalculator_nRefs_get, _PICellerator.WeightsCalculator_nRefs_set)
    locked = property(_PICellerator.WeightsCalculator_locked_get, _PICellerator.WeightsCalculator_locked_set)
    _delete = property(_PICellerator.WeightsCalculator__delete_get, _PICellerator.WeightsCalculator__delete_set)
    _print = property(_PICellerator.WeightsCalculator__print_get, _PICellerator.WeightsCalculator__print_set)
    _copy = property(_PICellerator.WeightsCalculator__copy_get, _PICellerator.WeightsCalculator__copy_set)
    name = property(_PICellerator.WeightsCalculator_name_get, _PICellerator.WeightsCalculator_name_set)
    nameAllocationType = property(_PICellerator.WeightsCalculator_nameAllocationType_get, _PICellerator.WeightsCalculator_nameAllocationType_set)
    _defaultConstructor = property(_PICellerator.WeightsCalculator__defaultConstructor_get, _PICellerator.WeightsCalculator__defaultConstructor_set)
    _construct = property(_PICellerator.WeightsCalculator__construct_get, _PICellerator.WeightsCalculator__construct_set)
    _build = property(_PICellerator.WeightsCalculator__build_get, _PICellerator.WeightsCalculator__build_set)
    _initialise = property(_PICellerator.WeightsCalculator__initialise_get, _PICellerator.WeightsCalculator__initialise_set)
    _execute = property(_PICellerator.WeightsCalculator__execute_get, _PICellerator.WeightsCalculator__execute_set)
    _destroy = property(_PICellerator.WeightsCalculator__destroy_get, _PICellerator.WeightsCalculator__destroy_set)
    isConstructed = property(_PICellerator.WeightsCalculator_isConstructed_get, _PICellerator.WeightsCalculator_isConstructed_set)
    isBuilt = property(_PICellerator.WeightsCalculator_isBuilt_get, _PICellerator.WeightsCalculator_isBuilt_set)
    isInitialised = property(_PICellerator.WeightsCalculator_isInitialised_get, _PICellerator.WeightsCalculator_isInitialised_set)
    hasExecuted = property(_PICellerator.WeightsCalculator_hasExecuted_get, _PICellerator.WeightsCalculator_hasExecuted_set)
    isDestroyed = property(_PICellerator.WeightsCalculator_isDestroyed_get, _PICellerator.WeightsCalculator_isDestroyed_set)
    constructType = property(_PICellerator.WeightsCalculator_constructType_get, _PICellerator.WeightsCalculator_constructType_set)
    buildType = property(_PICellerator.WeightsCalculator_buildType_get, _PICellerator.WeightsCalculator_buildType_set)
    initialiseType = property(_PICellerator.WeightsCalculator_initialiseType_get, _PICellerator.WeightsCalculator_initialiseType_set)
    executeType = property(_PICellerator.WeightsCalculator_executeType_get, _PICellerator.WeightsCalculator_executeType_set)
    destroyType = property(_PICellerator.WeightsCalculator_destroyType_get, _PICellerator.WeightsCalculator_destroyType_set)
    context = property(_PICellerator.WeightsCalculator_context_get, _PICellerator.WeightsCalculator_context_set)
    _calculate = property(_PICellerator.WeightsCalculator__calculate_get, _PICellerator.WeightsCalculator__calculate_set)

    def __init__(self):
        _PICellerator.WeightsCalculator_swiginit(self, _PICellerator.new_WeightsCalculator())
    __swig_destroy__ = _PICellerator.delete_WeightsCalculator

# Register WeightsCalculator in _PICellerator:
_PICellerator.WeightsCalculator_swigregister(WeightsCalculator)
WeightsCalculator_Type = cvar.WeightsCalculator_Type

_WeightsCalculator_New = _PICellerator._WeightsCalculator_New
_WeightsCalculator_Delete = _PICellerator._WeightsCalculator_Delete
_WeightsCalculator_Print = _PICellerator._WeightsCalculator_Print
_WeightsCalculator_Copy = _PICellerator._WeightsCalculator_Copy
_WeightsCalculator_AssignFromXML = _PICellerator._WeightsCalculator_AssignFromXML
_WeightsCalculator_Build = _PICellerator._WeightsCalculator_Build
_WeightsCalculator_Destroy = _PICellerator._WeightsCalculator_Destroy
_WeightsCalculator_Initialise = _PICellerator._WeightsCalculator_Initialise
_WeightsCalculator_Execute = _PICellerator._WeightsCalculator_Execute
WeightsCalculator_CalculateCell = _PICellerator.WeightsCalculator_CalculateCell
WeightsCalculator_CalculateAll = _PICellerator.WeightsCalculator_CalculateAll
WeightsCalculator_SetWeightsValueAll = _PICellerator.WeightsCalculator_SetWeightsValueAll
WeightsCalculator_SetWeightsValueAllInCell = _PICellerator.WeightsCalculator_SetWeightsValueAllInCell
WeightsCalculator_FindConstraintOrder = _PICellerator.WeightsCalculator_FindConstraintOrder
WeightsCalculator_TestConstraint = _PICellerator.WeightsCalculator_TestConstraint
WeightsCalculator_TestConstraintOverCell = _PICellerator.WeightsCalculator_TestConstraintOverCell
WeightsCalculator_GetConstraintLHS = _PICellerator.WeightsCalculator_GetConstraintLHS
WeightsCalculator_GetLocalCoordSum = _PICellerator.WeightsCalculator_GetLocalCoordSum
WeightsCalculator_SumCellWeights = _PICellerator.WeightsCalculator_SumCellWeights
WeightsCalculator_CheckEmptyCell = _PICellerator.WeightsCalculator_CheckEmptyCell
class DVCWeights(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    _sizeOfSelf = property(_PICellerator.DVCWeights__sizeOfSelf_get, _PICellerator.DVCWeights__sizeOfSelf_set)
    _deleteSelf = property(_PICellerator.DVCWeights__deleteSelf_get, _PICellerator.DVCWeights__deleteSelf_set)
    type = property(_PICellerator.DVCWeights_type_get, _PICellerator.DVCWeights_type_set)
    nRefs = property(_PICellerator.DVCWeights_nRefs_get, _PICellerator.DVCWeights_nRefs_set)
    locked = property(_PICellerator.DVCWeights_locked_get, _PICellerator.DVCWeights_locked_set)
    _delete = property(_PICellerator.DVCWeights__delete_get, _PICellerator.DVCWeights__delete_set)
    _print = property(_PICellerator.DVCWeights__print_get, _PICellerator.DVCWeights__print_set)
    _copy = property(_PICellerator.DVCWeights__copy_get, _PICellerator.DVCWeights__copy_set)
    name = property(_PICellerator.DVCWeights_name_get, _PICellerator.DVCWeights_name_set)
    nameAllocationType = property(_PICellerator.DVCWeights_nameAllocationType_get, _PICellerator.DVCWeights_nameAllocationType_set)
    _defaultConstructor = property(_PICellerator.DVCWeights__defaultConstructor_get, _PICellerator.DVCWeights__defaultConstructor_set)
    _construct = property(_PICellerator.DVCWeights__construct_get, _PICellerator.DVCWeights__construct_set)
    _build = property(_PICellerator.DVCWeights__build_get, _PICellerator.DVCWeights__build_set)
    _initialise = property(_PICellerator.DVCWeights__initialise_get, _PICellerator.DVCWeights__initialise_set)
    _execute = property(_PICellerator.DVCWeights__execute_get, _PICellerator.DVCWeights__execute_set)
    _destroy = property(_PICellerator.DVCWeights__destroy_get, _PICellerator.DVCWeights__destroy_set)
    isConstructed = property(_PICellerator.DVCWeights_isConstructed_get, _PICellerator.DVCWeights_isConstructed_set)
    isBuilt = property(_PICellerator.DVCWeights_isBuilt_get, _PICellerator.DVCWeights_isBuilt_set)
    isInitialised = property(_PICellerator.DVCWeights_isInitialised_get, _PICellerator.DVCWeights_isInitialised_set)
    hasExecuted = property(_PICellerator.DVCWeights_hasExecuted_get, _PICellerator.DVCWeights_hasExecuted_set)
    isDestroyed = property(_PICellerator.DVCWeights_isDestroyed_get, _PICellerator.DVCWeights_isDestroyed_set)
    constructType = property(_PICellerator.DVCWeights_constructType_get, _PICellerator.DVCWeights_constructType_set)
    buildType = property(_PICellerator.DVCWeights_buildType_get, _PICellerator.DVCWeights_buildType_set)
    initialiseType = property(_PICellerator.DVCWeights_initialiseType_get, _PICellerator.DVCWeights_initialiseType_set)
    executeType = property(_PICellerator.DVCWeights_executeType_get, _PICellerator.DVCWeights_executeType_set)
    destroyType = property(_PICellerator.DVCWeights_destroyType_get, _PICellerator.DVCWeights_destroyType_set)
    context = property(_PICellerator.DVCWeights_context_get, _PICellerator.DVCWeights_context_set)
    _calculate = property(_PICellerator.DVCWeights__calculate_get, _PICellerator.DVCWeights__calculate_set)
    resX = property(_PICellerator.DVCWeights_resX_get, _PICellerator.DVCWeights_resX_set)
    resY = property(_PICellerator.DVCWeights_resY_get, _PICellerator.DVCWeights_resY_set)
    resZ = property(_PICellerator.DVCWeights_resZ_get, _PICellerator.DVCWeights_resZ_set)
    nump = property(_PICellerator.DVCWeights_nump_get, _PICellerator.DVCWeights_nump_set)
    dx = property(_PICellerator.DVCWeights_dx_get, _PICellerator.DVCWeights_dx_set)
    dy = property(_PICellerator.DVCWeights_dy_get, _PICellerator.DVCWeights_dy_set)
    dz = property(_PICellerator.DVCWeights_dz_get, _PICellerator.DVCWeights_dz_set)
    visiteddvcweights = property(_PICellerator.DVCWeights_visiteddvcweights_get, _PICellerator.DVCWeights_visiteddvcweights_set)
    pList = property(_PICellerator.DVCWeights_pList_get, _PICellerator.DVCWeights_pList_set)
    bchain = property(_PICellerator.DVCWeights_bchain_get, _PICellerator.DVCWeights_bchain_set)
    cells = property(_PICellerator.DVCWeights_cells_get, _PICellerator.DVCWeights_cells_set)
    plistSize = property(_PICellerator.DVCWeights_plistSize_get, _PICellerator.DVCWeights_plistSize_set)
    bchainSize = property(_PICellerator.DVCWeights_bchainSize_get, _PICellerator.DVCWeights_bchainSize_set)
    bbmin = property(_PICellerator.DVCWeights_bbmin_get, _PICellerator.DVCWeights_bbmin_set)
    bbmax = property(_PICellerator.DVCWeights_bbmax_get, _PICellerator.DVCWeights_bbmax_set)

    def __init__(self):
        _PICellerator.DVCWeights_swiginit(self, _PICellerator.new_DVCWeights())
    __swig_destroy__ = _PICellerator.delete_DVCWeights

# Register DVCWeights in _PICellerator:
_PICellerator.DVCWeights_swigregister(DVCWeights)
DVCWeights_Type = cvar.DVCWeights_Type

DVC_INC = _PICellerator.DVC_INC
class cell(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    p = property(_PICellerator.cell_p_get, _PICellerator.cell_p_set)
    index = property(_PICellerator.cell_index_get, _PICellerator.cell_index_set)
    N = property(_PICellerator.cell_N_get, _PICellerator.cell_N_set)
    S = property(_PICellerator.cell_S_get, _PICellerator.cell_S_set)
    E = property(_PICellerator.cell_E_get, _PICellerator.cell_E_set)
    W = property(_PICellerator.cell_W_get, _PICellerator.cell_W_set)
    U = property(_PICellerator.cell_U_get, _PICellerator.cell_U_set)
    D = property(_PICellerator.cell_D_get, _PICellerator.cell_D_set)
    x = property(_PICellerator.cell_x_get, _PICellerator.cell_x_set)
    y = property(_PICellerator.cell_y_get, _PICellerator.cell_y_set)
    z = property(_PICellerator.cell_z_get, _PICellerator.cell_z_set)
    done = property(_PICellerator.cell_done_get, _PICellerator.cell_done_set)

    def __init__(self):
        _PICellerator.cell_swiginit(self, _PICellerator.new_cell())
    __swig_destroy__ = _PICellerator.delete_cell

# Register cell in _PICellerator:
_PICellerator.cell_swigregister(cell)
class chain(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    p = property(_PICellerator.chain_p_get, _PICellerator.chain_p_set)
    index = property(_PICellerator.chain_index_get, _PICellerator.chain_index_set)
    sizeofboundary = property(_PICellerator.chain_sizeofboundary_get, _PICellerator.chain_sizeofboundary_set)
    numclaimed = property(_PICellerator.chain_numclaimed_get, _PICellerator.chain_numclaimed_set)
    totalclaimed = property(_PICellerator.chain_totalclaimed_get, _PICellerator.chain_totalclaimed_set)
    new_bound_cells_malloced = property(_PICellerator.chain_new_bound_cells_malloced_get, _PICellerator.chain_new_bound_cells_malloced_set)
    new_claimed_cells_malloced = property(_PICellerator.chain_new_claimed_cells_malloced_get, _PICellerator.chain_new_claimed_cells_malloced_set)
    new_bound_cells = property(_PICellerator.chain_new_bound_cells_get, _PICellerator.chain_new_bound_cells_set)
    new_claimed_cells = property(_PICellerator.chain_new_claimed_cells_get, _PICellerator.chain_new_claimed_cells_set)
    done = property(_PICellerator.chain_done_get, _PICellerator.chain_done_set)

    def __init__(self):
        _PICellerator.chain_swiginit(self, _PICellerator.new_chain())
    __swig_destroy__ = _PICellerator.delete_chain

# Register chain in _PICellerator:
_PICellerator.chain_swigregister(chain)
class particle(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    x = property(_PICellerator.particle_x_get, _PICellerator.particle_x_set)
    y = property(_PICellerator.particle_y_get, _PICellerator.particle_y_set)
    z = property(_PICellerator.particle_z_get, _PICellerator.particle_z_set)
    cx = property(_PICellerator.particle_cx_get, _PICellerator.particle_cx_set)
    cy = property(_PICellerator.particle_cy_get, _PICellerator.particle_cy_set)
    cz = property(_PICellerator.particle_cz_get, _PICellerator.particle_cz_set)
    w = property(_PICellerator.particle_w_get, _PICellerator.particle_w_set)
    index = property(_PICellerator.particle_index_get, _PICellerator.particle_index_set)

    def __init__(self):
        _PICellerator.particle_swiginit(self, _PICellerator.new_particle())
    __swig_destroy__ = _PICellerator.delete_particle

# Register particle in _PICellerator:
_PICellerator.particle_swigregister(particle)
_DVCWeights_GetCentroids3D = _PICellerator._DVCWeights_GetCentroids3D
_DVCWeights_ClaimCells = _PICellerator._DVCWeights_ClaimCells
_DVCWeights_UpdateBchain = _PICellerator._DVCWeights_UpdateBchain
_DVCWeights_ResetGrid3D = _PICellerator._DVCWeights_ResetGrid3D
_DVCWeights_DistanceSquared = _PICellerator._DVCWeights_DistanceSquared
_DVCWeights_DistanceTest = _PICellerator._DVCWeights_DistanceTest
_DVCWeights_ConstructGrid = _PICellerator._DVCWeights_ConstructGrid
_DVCWeights_InitialiseStructs = _PICellerator._DVCWeights_InitialiseStructs
_DVCWeights_CreateVoronoi3D = _PICellerator._DVCWeights_CreateVoronoi3D
_DVCWeights_GetCentroids2D = _PICellerator._DVCWeights_GetCentroids2D
_DVCWeights_ClaimCells2D = _PICellerator._DVCWeights_ClaimCells2D
_DVCWeights_UpdateBchain2D = _PICellerator._DVCWeights_UpdateBchain2D
_DVCWeights_ResetGrid2D = _PICellerator._DVCWeights_ResetGrid2D
_DVCWeights_DistanceSquared2D = _PICellerator._DVCWeights_DistanceSquared2D
_DVCWeights_DistanceTest2D = _PICellerator._DVCWeights_DistanceTest2D
_DVCWeights_ConstructGrid2D = _PICellerator._DVCWeights_ConstructGrid2D
_DVCWeights_InitialiseStructs2D = _PICellerator._DVCWeights_InitialiseStructs2D
_DVCWeights_CreateVoronoi2D = _PICellerator._DVCWeights_CreateVoronoi2D
_DVCWeights_Calculate2D = _PICellerator._DVCWeights_Calculate2D
_DVCWeights_Calculate3D = _PICellerator._DVCWeights_Calculate3D
DVCWeights_New = _PICellerator.DVCWeights_New
_DVCWeights_New = _PICellerator._DVCWeights_New
_DVCWeights_Init = _PICellerator._DVCWeights_Init
_DVCWeights_Delete = _PICellerator._DVCWeights_Delete
_DVCWeights_Print = _PICellerator._DVCWeights_Print
_DVCWeights_Copy = _PICellerator._DVCWeights_Copy
_DVCWeights_DefaultNew = _PICellerator._DVCWeights_DefaultNew
_DVCWeights_AssignFromXML = _PICellerator._DVCWeights_AssignFromXML
_DVCWeights_Build = _PICellerator._DVCWeights_Build
_DVCWeights_Initialise = _PICellerator._DVCWeights_Initialise
_DVCWeights_Execute = _PICellerator._DVCWeights_Execute
_DVCWeights_Destroy = _PICellerator._DVCWeights_Destroy
_DVCWeights_Calculate = _PICellerator._DVCWeights_Calculate
class PCDVC(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    _sizeOfSelf = property(_PICellerator.PCDVC__sizeOfSelf_get, _PICellerator.PCDVC__sizeOfSelf_set)
    _deleteSelf = property(_PICellerator.PCDVC__deleteSelf_get, _PICellerator.PCDVC__deleteSelf_set)
    type = property(_PICellerator.PCDVC_type_get, _PICellerator.PCDVC_type_set)
    nRefs = property(_PICellerator.PCDVC_nRefs_get, _PICellerator.PCDVC_nRefs_set)
    locked = property(_PICellerator.PCDVC_locked_get, _PICellerator.PCDVC_locked_set)
    _delete = property(_PICellerator.PCDVC__delete_get, _PICellerator.PCDVC__delete_set)
    _print = property(_PICellerator.PCDVC__print_get, _PICellerator.PCDVC__print_set)
    _copy = property(_PICellerator.PCDVC__copy_get, _PICellerator.PCDVC__copy_set)
    name = property(_PICellerator.PCDVC_name_get, _PICellerator.PCDVC_name_set)
    nameAllocationType = property(_PICellerator.PCDVC_nameAllocationType_get, _PICellerator.PCDVC_nameAllocationType_set)
    _defaultConstructor = property(_PICellerator.PCDVC__defaultConstructor_get, _PICellerator.PCDVC__defaultConstructor_set)
    _construct = property(_PICellerator.PCDVC__construct_get, _PICellerator.PCDVC__construct_set)
    _build = property(_PICellerator.PCDVC__build_get, _PICellerator.PCDVC__build_set)
    _initialise = property(_PICellerator.PCDVC__initialise_get, _PICellerator.PCDVC__initialise_set)
    _execute = property(_PICellerator.PCDVC__execute_get, _PICellerator.PCDVC__execute_set)
    _destroy = property(_PICellerator.PCDVC__destroy_get, _PICellerator.PCDVC__destroy_set)
    isConstructed = property(_PICellerator.PCDVC_isConstructed_get, _PICellerator.PCDVC_isConstructed_set)
    isBuilt = property(_PICellerator.PCDVC_isBuilt_get, _PICellerator.PCDVC_isBuilt_set)
    isInitialised = property(_PICellerator.PCDVC_isInitialised_get, _PICellerator.PCDVC_isInitialised_set)
    hasExecuted = property(_PICellerator.PCDVC_hasExecuted_get, _PICellerator.PCDVC_hasExecuted_set)
    isDestroyed = property(_PICellerator.PCDVC_isDestroyed_get, _PICellerator.PCDVC_isDestroyed_set)
    constructType = property(_PICellerator.PCDVC_constructType_get, _PICellerator.PCDVC_constructType_set)
    buildType = property(_PICellerator.PCDVC_buildType_get, _PICellerator.PCDVC_buildType_set)
    initialiseType = property(_PICellerator.PCDVC_initialiseType_get, _PICellerator.PCDVC_initialiseType_set)
    executeType = property(_PICellerator.PCDVC_executeType_get, _PICellerator.PCDVC_executeType_set)
    destroyType = property(_PICellerator.PCDVC_destroyType_get, _PICellerator.PCDVC_destroyType_set)
    context = property(_PICellerator.PCDVC_context_get, _PICellerator.PCDVC_context_set)
    _calculate = property(_PICellerator.PCDVC__calculate_get, _PICellerator.PCDVC__calculate_set)
    resX = property(_PICellerator.PCDVC_resX_get, _PICellerator.PCDVC_resX_set)
    resY = property(_PICellerator.PCDVC_resY_get, _PICellerator.PCDVC_resY_set)
    resZ = property(_PICellerator.PCDVC_resZ_get, _PICellerator.PCDVC_resZ_set)
    nump = property(_PICellerator.PCDVC_nump_get, _PICellerator.PCDVC_nump_set)
    dx = property(_PICellerator.PCDVC_dx_get, _PICellerator.PCDVC_dx_set)
    dy = property(_PICellerator.PCDVC_dy_get, _PICellerator.PCDVC_dy_set)
    dz = property(_PICellerator.PCDVC_dz_get, _PICellerator.PCDVC_dz_set)
    visiteddvcweights = property(_PICellerator.PCDVC_visiteddvcweights_get, _PICellerator.PCDVC_visiteddvcweights_set)
    pList = property(_PICellerator.PCDVC_pList_get, _PICellerator.PCDVC_pList_set)
    bchain = property(_PICellerator.PCDVC_bchain_get, _PICellerator.PCDVC_bchain_set)
    cells = property(_PICellerator.PCDVC_cells_get, _PICellerator.PCDVC_cells_set)
    plistSize = property(_PICellerator.PCDVC_plistSize_get, _PICellerator.PCDVC_plistSize_set)
    bchainSize = property(_PICellerator.PCDVC_bchainSize_get, _PICellerator.PCDVC_bchainSize_set)
    bbmin = property(_PICellerator.PCDVC_bbmin_get, _PICellerator.PCDVC_bbmin_set)
    bbmax = property(_PICellerator.PCDVC_bbmax_get, _PICellerator.PCDVC_bbmax_set)
    materialPointsSwarm = property(_PICellerator.PCDVC_materialPointsSwarm_get, _PICellerator.PCDVC_materialPointsSwarm_set)
    upperT = property(_PICellerator.PCDVC_upperT_get, _PICellerator.PCDVC_upperT_set)
    lowerT = property(_PICellerator.PCDVC_lowerT_get, _PICellerator.PCDVC_lowerT_set)
    splitInInterfaceCells = property(_PICellerator.PCDVC_splitInInterfaceCells_get, _PICellerator.PCDVC_splitInInterfaceCells_set)
    deleteInInterfaceCells = property(_PICellerator.PCDVC_deleteInInterfaceCells_get, _PICellerator.PCDVC_deleteInInterfaceCells_set)
    maxDeletions = property(_PICellerator.PCDVC_maxDeletions_get, _PICellerator.PCDVC_maxDeletions_set)
    maxSplits = property(_PICellerator.PCDVC_maxSplits_get, _PICellerator.PCDVC_maxSplits_set)
    Inflow = property(_PICellerator.PCDVC_Inflow_get, _PICellerator.PCDVC_Inflow_set)
    CentPosRatio = property(_PICellerator.PCDVC_CentPosRatio_get, _PICellerator.PCDVC_CentPosRatio_set)
    ParticlesPerCell = property(_PICellerator.PCDVC_ParticlesPerCell_get, _PICellerator.PCDVC_ParticlesPerCell_set)
    Threshold = property(_PICellerator.PCDVC_Threshold_get, _PICellerator.PCDVC_Threshold_set)
    pcdvcvisited = property(_PICellerator.PCDVC_pcdvcvisited_get, _PICellerator.PCDVC_pcdvcvisited_set)

    def __init__(self):
        _PICellerator.PCDVC_swiginit(self, _PICellerator.new_PCDVC())
    __swig_destroy__ = _PICellerator.delete_PCDVC

# Register PCDVC in _PICellerator:
_PICellerator.PCDVC_swigregister(PCDVC)
PCDVC_Type = cvar.PCDVC_Type

class deleteParticle(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    indexWithinCell = property(_PICellerator.deleteParticle_indexWithinCell_get, _PICellerator.deleteParticle_indexWithinCell_set)
    indexOnCPU = property(_PICellerator.deleteParticle_indexOnCPU_get, _PICellerator.deleteParticle_indexOnCPU_set)

    def __init__(self):
        _PICellerator.deleteParticle_swiginit(self, _PICellerator.new_deleteParticle())
    __swig_destroy__ = _PICellerator.delete_deleteParticle

# Register deleteParticle in _PICellerator:
_PICellerator.deleteParticle_swigregister(deleteParticle)
PCDVC_New = _PICellerator.PCDVC_New
_PCDVC_New = _PICellerator._PCDVC_New
_PCDVC_Init = _PICellerator._PCDVC_Init
_PCDVC_Delete = _PICellerator._PCDVC_Delete
_PCDVC_Print = _PICellerator._PCDVC_Print
_PCDVC_Copy = _PICellerator._PCDVC_Copy
_PCDVC_DefaultNew = _PICellerator._PCDVC_DefaultNew
_PCDVC_AssignFromXML = _PICellerator._PCDVC_AssignFromXML
_PCDVC_Build = _PICellerator._PCDVC_Build
_PCDVC_Initialise = _PICellerator._PCDVC_Initialise
_PCDVC_Destroy = _PICellerator._PCDVC_Destroy
_PCDVC_Execute = _PICellerator._PCDVC_Execute
splitIntParticleByIndexWithinCell = _PICellerator.splitIntParticleByIndexWithinCell
deleteIntParticleByIndexWithinCell = _PICellerator.deleteIntParticleByIndexWithinCell
deleteIntParticleByIndexOnCPU = _PICellerator.deleteIntParticleByIndexOnCPU
_PCDVC_Calculate3D = _PICellerator._PCDVC_Calculate3D
_PCDVC_Calculate2D = _PICellerator._PCDVC_Calculate2D
_PCDVC_Calculate = _PICellerator._PCDVC_Calculate

