# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
import _Solvers

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _Solvers.SWIG_PyInstanceMethod_New
_swig_new_static_method = _Solvers.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import underworld.libUnderworld.libUnderworldPy.StGermain
import underworld.libUnderworld.libUnderworldPy.StgDomain
import underworld.libUnderworld.libUnderworldPy.StgFEM
import underworld.libUnderworld.libUnderworldPy.PICellerator
import underworld.libUnderworld.libUnderworldPy.Underworld
import underworld.libUnderworld.libUnderworldPy.Function
class STATS(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    pressure_its = property(_Solvers.STATS_pressure_its_get, _Solvers.STATS_pressure_its_set)
    velocity_backsolve_its = property(_Solvers.STATS_velocity_backsolve_its_get, _Solvers.STATS_velocity_backsolve_its_set)
    velocity_presolve_its = property(_Solvers.STATS_velocity_presolve_its_get, _Solvers.STATS_velocity_presolve_its_set)
    velocity_pressuresolve_its = property(_Solvers.STATS_velocity_pressuresolve_its_get, _Solvers.STATS_velocity_pressuresolve_its_set)
    velocity_total_its = property(_Solvers.STATS_velocity_total_its_get, _Solvers.STATS_velocity_total_its_set)
    pressure_time = property(_Solvers.STATS_pressure_time_get, _Solvers.STATS_pressure_time_set)
    velocity_presolve_setup_time = property(_Solvers.STATS_velocity_presolve_setup_time_get, _Solvers.STATS_velocity_presolve_setup_time_set)
    velocity_pressuresolve_setup_time = property(_Solvers.STATS_velocity_pressuresolve_setup_time_get, _Solvers.STATS_velocity_pressuresolve_setup_time_set)
    velocity_backsolve_setup_time = property(_Solvers.STATS_velocity_backsolve_setup_time_get, _Solvers.STATS_velocity_backsolve_setup_time_set)
    velocity_backsolve_time = property(_Solvers.STATS_velocity_backsolve_time_get, _Solvers.STATS_velocity_backsolve_time_set)
    velocity_presolve_time = property(_Solvers.STATS_velocity_presolve_time_get, _Solvers.STATS_velocity_presolve_time_set)
    velocity_pressuresolve_time = property(_Solvers.STATS_velocity_pressuresolve_time_get, _Solvers.STATS_velocity_pressuresolve_time_set)
    velocity_total_time = property(_Solvers.STATS_velocity_total_time_get, _Solvers.STATS_velocity_total_time_set)
    total_time = property(_Solvers.STATS_total_time_get, _Solvers.STATS_total_time_set)
    total_flops = property(_Solvers.STATS_total_flops_get, _Solvers.STATS_total_flops_set)
    pressure_flops = property(_Solvers.STATS_pressure_flops_get, _Solvers.STATS_pressure_flops_set)
    velocity_backsolve_flops = property(_Solvers.STATS_velocity_backsolve_flops_get, _Solvers.STATS_velocity_backsolve_flops_set)
    velocity_presolve_flops = property(_Solvers.STATS_velocity_presolve_flops_get, _Solvers.STATS_velocity_presolve_flops_set)
    vmin = property(_Solvers.STATS_vmin_get, _Solvers.STATS_vmin_set)
    vmax = property(_Solvers.STATS_vmax_get, _Solvers.STATS_vmax_set)
    pmin = property(_Solvers.STATS_pmin_get, _Solvers.STATS_pmin_set)
    pmax = property(_Solvers.STATS_pmax_get, _Solvers.STATS_pmax_set)
    p_sum = property(_Solvers.STATS_p_sum_get, _Solvers.STATS_p_sum_set)

    def __init__(self):
        _Solvers.STATS_swiginit(self, _Solvers.new_STATS())
    __swig_destroy__ = _Solvers.delete_STATS

# Register STATS in _Solvers:
_Solvers.STATS_swigregister(STATS)
cvar = _Solvers.cvar
StokesBlockKSPInterface_Type = cvar.StokesBlockKSPInterface_Type

class StokesBlockKSPInterface(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    _sizeOfSelf = property(_Solvers.StokesBlockKSPInterface__sizeOfSelf_get, _Solvers.StokesBlockKSPInterface__sizeOfSelf_set)
    _deleteSelf = property(_Solvers.StokesBlockKSPInterface__deleteSelf_get, _Solvers.StokesBlockKSPInterface__deleteSelf_set)
    type = property(_Solvers.StokesBlockKSPInterface_type_get, _Solvers.StokesBlockKSPInterface_type_set)
    nRefs = property(_Solvers.StokesBlockKSPInterface_nRefs_get, _Solvers.StokesBlockKSPInterface_nRefs_set)
    locked = property(_Solvers.StokesBlockKSPInterface_locked_get, _Solvers.StokesBlockKSPInterface_locked_set)
    _delete = property(_Solvers.StokesBlockKSPInterface__delete_get, _Solvers.StokesBlockKSPInterface__delete_set)
    _print = property(_Solvers.StokesBlockKSPInterface__print_get, _Solvers.StokesBlockKSPInterface__print_set)
    _copy = property(_Solvers.StokesBlockKSPInterface__copy_get, _Solvers.StokesBlockKSPInterface__copy_set)
    name = property(_Solvers.StokesBlockKSPInterface_name_get, _Solvers.StokesBlockKSPInterface_name_set)
    nameAllocationType = property(_Solvers.StokesBlockKSPInterface_nameAllocationType_get, _Solvers.StokesBlockKSPInterface_nameAllocationType_set)
    _defaultConstructor = property(_Solvers.StokesBlockKSPInterface__defaultConstructor_get, _Solvers.StokesBlockKSPInterface__defaultConstructor_set)
    _construct = property(_Solvers.StokesBlockKSPInterface__construct_get, _Solvers.StokesBlockKSPInterface__construct_set)
    _build = property(_Solvers.StokesBlockKSPInterface__build_get, _Solvers.StokesBlockKSPInterface__build_set)
    _initialise = property(_Solvers.StokesBlockKSPInterface__initialise_get, _Solvers.StokesBlockKSPInterface__initialise_set)
    _execute = property(_Solvers.StokesBlockKSPInterface__execute_get, _Solvers.StokesBlockKSPInterface__execute_set)
    _destroy = property(_Solvers.StokesBlockKSPInterface__destroy_get, _Solvers.StokesBlockKSPInterface__destroy_set)
    isConstructed = property(_Solvers.StokesBlockKSPInterface_isConstructed_get, _Solvers.StokesBlockKSPInterface_isConstructed_set)
    isBuilt = property(_Solvers.StokesBlockKSPInterface_isBuilt_get, _Solvers.StokesBlockKSPInterface_isBuilt_set)
    isInitialised = property(_Solvers.StokesBlockKSPInterface_isInitialised_get, _Solvers.StokesBlockKSPInterface_isInitialised_set)
    hasExecuted = property(_Solvers.StokesBlockKSPInterface_hasExecuted_get, _Solvers.StokesBlockKSPInterface_hasExecuted_set)
    isDestroyed = property(_Solvers.StokesBlockKSPInterface_isDestroyed_get, _Solvers.StokesBlockKSPInterface_isDestroyed_set)
    constructType = property(_Solvers.StokesBlockKSPInterface_constructType_get, _Solvers.StokesBlockKSPInterface_constructType_set)
    buildType = property(_Solvers.StokesBlockKSPInterface_buildType_get, _Solvers.StokesBlockKSPInterface_buildType_set)
    initialiseType = property(_Solvers.StokesBlockKSPInterface_initialiseType_get, _Solvers.StokesBlockKSPInterface_initialiseType_set)
    executeType = property(_Solvers.StokesBlockKSPInterface_executeType_get, _Solvers.StokesBlockKSPInterface_executeType_set)
    destroyType = property(_Solvers.StokesBlockKSPInterface_destroyType_get, _Solvers.StokesBlockKSPInterface_destroyType_set)
    extensionManager = property(_Solvers.StokesBlockKSPInterface_extensionManager_get, _Solvers.StokesBlockKSPInterface_extensionManager_set)
    _solverSetup = property(_Solvers.StokesBlockKSPInterface__solverSetup_get, _Solvers.StokesBlockKSPInterface__solverSetup_set)
    _solve = property(_Solvers.StokesBlockKSPInterface__solve_get, _Solvers.StokesBlockKSPInterface__solve_set)
    _getResidual = property(_Solvers.StokesBlockKSPInterface__getResidual_get, _Solvers.StokesBlockKSPInterface__getResidual_set)
    _formResidual = property(_Solvers.StokesBlockKSPInterface__formResidual_get, _Solvers.StokesBlockKSPInterface__formResidual_set)
    _getRhs = property(_Solvers.StokesBlockKSPInterface__getRhs_get, _Solvers.StokesBlockKSPInterface__getRhs_set)
    _getSolution = property(_Solvers.StokesBlockKSPInterface__getSolution_get, _Solvers.StokesBlockKSPInterface__getSolution_set)
    debug = property(_Solvers.StokesBlockKSPInterface_debug_get, _Solvers.StokesBlockKSPInterface_debug_set)
    info = property(_Solvers.StokesBlockKSPInterface_info_get, _Solvers.StokesBlockKSPInterface_info_set)
    maxIterations = property(_Solvers.StokesBlockKSPInterface_maxIterations_get, _Solvers.StokesBlockKSPInterface_maxIterations_set)
    hasSolved = property(_Solvers.StokesBlockKSPInterface_hasSolved_get, _Solvers.StokesBlockKSPInterface_hasSolved_set)
    inneritsinitialtime = property(_Solvers.StokesBlockKSPInterface_inneritsinitialtime_get, _Solvers.StokesBlockKSPInterface_inneritsinitialtime_set)
    outeritsinitialtime = property(_Solvers.StokesBlockKSPInterface_outeritsinitialtime_get, _Solvers.StokesBlockKSPInterface_outeritsinitialtime_set)
    nonlinearitsinitialtime = property(_Solvers.StokesBlockKSPInterface_nonlinearitsinitialtime_get, _Solvers.StokesBlockKSPInterface_nonlinearitsinitialtime_set)
    inneritsendtime = property(_Solvers.StokesBlockKSPInterface_inneritsendtime_get, _Solvers.StokesBlockKSPInterface_inneritsendtime_set)
    outeritsendtime = property(_Solvers.StokesBlockKSPInterface_outeritsendtime_get, _Solvers.StokesBlockKSPInterface_outeritsendtime_set)
    nonlinearitsendtime = property(_Solvers.StokesBlockKSPInterface_nonlinearitsendtime_get, _Solvers.StokesBlockKSPInterface_nonlinearitsendtime_set)
    totalinneritstime = property(_Solvers.StokesBlockKSPInterface_totalinneritstime_get, _Solvers.StokesBlockKSPInterface_totalinneritstime_set)
    totalouteritstime = property(_Solvers.StokesBlockKSPInterface_totalouteritstime_get, _Solvers.StokesBlockKSPInterface_totalouteritstime_set)
    totalnonlinearitstime = property(_Solvers.StokesBlockKSPInterface_totalnonlinearitstime_get, _Solvers.StokesBlockKSPInterface_totalnonlinearitstime_set)
    totalnuminnerits = property(_Solvers.StokesBlockKSPInterface_totalnuminnerits_get, _Solvers.StokesBlockKSPInterface_totalnuminnerits_set)
    totalnumouterits = property(_Solvers.StokesBlockKSPInterface_totalnumouterits_get, _Solvers.StokesBlockKSPInterface_totalnumouterits_set)
    totalnumnonlinearits = property(_Solvers.StokesBlockKSPInterface_totalnumnonlinearits_get, _Solvers.StokesBlockKSPInterface_totalnumnonlinearits_set)
    avgnuminnerits = property(_Solvers.StokesBlockKSPInterface_avgnuminnerits_get, _Solvers.StokesBlockKSPInterface_avgnuminnerits_set)
    avgnumouterits = property(_Solvers.StokesBlockKSPInterface_avgnumouterits_get, _Solvers.StokesBlockKSPInterface_avgnumouterits_set)
    avgtimeinnerits = property(_Solvers.StokesBlockKSPInterface_avgtimeinnerits_get, _Solvers.StokesBlockKSPInterface_avgtimeinnerits_set)
    avgtimeouterits = property(_Solvers.StokesBlockKSPInterface_avgtimeouterits_get, _Solvers.StokesBlockKSPInterface_avgtimeouterits_set)
    avgtimenonlinearits = property(_Solvers.StokesBlockKSPInterface_avgtimenonlinearits_get, _Solvers.StokesBlockKSPInterface_avgtimenonlinearits_set)
    currenttimestep = property(_Solvers.StokesBlockKSPInterface_currenttimestep_get, _Solvers.StokesBlockKSPInterface_currenttimestep_set)
    previoustimestep = property(_Solvers.StokesBlockKSPInterface_previoustimestep_get, _Solvers.StokesBlockKSPInterface_previoustimestep_set)
    preconditioner = property(_Solvers.StokesBlockKSPInterface_preconditioner_get, _Solvers.StokesBlockKSPInterface_preconditioner_set)
    k2StiffMat = property(_Solvers.StokesBlockKSPInterface_k2StiffMat_get, _Solvers.StokesBlockKSPInterface_k2StiffMat_set)
    f2ForceVec = property(_Solvers.StokesBlockKSPInterface_f2ForceVec_get, _Solvers.StokesBlockKSPInterface_f2ForceVec_set)
    mStiffMat = property(_Solvers.StokesBlockKSPInterface_mStiffMat_get, _Solvers.StokesBlockKSPInterface_mStiffMat_set)
    jForceVec = property(_Solvers.StokesBlockKSPInterface_jForceVec_get, _Solvers.StokesBlockKSPInterface_jForceVec_set)
    vmStiffMat = property(_Solvers.StokesBlockKSPInterface_vmStiffMat_get, _Solvers.StokesBlockKSPInterface_vmStiffMat_set)
    vmForceVec = property(_Solvers.StokesBlockKSPInterface_vmForceVec_get, _Solvers.StokesBlockKSPInterface_vmForceVec_set)
    penaltyNumber = property(_Solvers.StokesBlockKSPInterface_penaltyNumber_get, _Solvers.StokesBlockKSPInterface_penaltyNumber_set)
    hFactor = property(_Solvers.StokesBlockKSPInterface_hFactor_get, _Solvers.StokesBlockKSPInterface_hFactor_set)
    st_sle = property(_Solvers.StokesBlockKSPInterface_st_sle_get, _Solvers.StokesBlockKSPInterface_st_sle_set)
    mg = property(_Solvers.StokesBlockKSPInterface_mg_get, _Solvers.StokesBlockKSPInterface_mg_set)
    mg_active = property(_Solvers.StokesBlockKSPInterface_mg_active_get, _Solvers.StokesBlockKSPInterface_mg_active_set)
    stats = property(_Solvers.StokesBlockKSPInterface_stats_get, _Solvers.StokesBlockKSPInterface_stats_set)
    DIsSym = property(_Solvers.StokesBlockKSPInterface_DIsSym_get, _Solvers.StokesBlockKSPInterface_DIsSym_set)
    K2 = property(_Solvers.StokesBlockKSPInterface_K2_get, _Solvers.StokesBlockKSPInterface_K2_set)
    M = property(_Solvers.StokesBlockKSPInterface_M_get, _Solvers.StokesBlockKSPInterface_M_set)
    approxS = property(_Solvers.StokesBlockKSPInterface_approxS_get, _Solvers.StokesBlockKSPInterface_approxS_set)
    S = property(_Solvers.StokesBlockKSPInterface_S_get, _Solvers.StokesBlockKSPInterface_S_set)
    S1 = property(_Solvers.StokesBlockKSPInterface_S1_get, _Solvers.StokesBlockKSPInterface_S1_set)
    S2 = property(_Solvers.StokesBlockKSPInterface_S2_get, _Solvers.StokesBlockKSPInterface_S2_set)
    optionsFile = property(_Solvers.StokesBlockKSPInterface_optionsFile_get, _Solvers.StokesBlockKSPInterface_optionsFile_set)
    optionsString = property(_Solvers.StokesBlockKSPInterface_optionsString_get, _Solvers.StokesBlockKSPInterface_optionsString_set)
    fhat_reason = property(_Solvers.StokesBlockKSPInterface_fhat_reason_get, _Solvers.StokesBlockKSPInterface_fhat_reason_set)
    backsolve_reason = property(_Solvers.StokesBlockKSPInterface_backsolve_reason_get, _Solvers.StokesBlockKSPInterface_backsolve_reason_set)
    outer_reason = property(_Solvers.StokesBlockKSPInterface_outer_reason_get, _Solvers.StokesBlockKSPInterface_outer_reason_set)

    def __init__(self):
        _Solvers.StokesBlockKSPInterface_swiginit(self, _Solvers.new_StokesBlockKSPInterface())
    __swig_destroy__ = _Solvers.delete_StokesBlockKSPInterface

# Register StokesBlockKSPInterface in _Solvers:
_Solvers.StokesBlockKSPInterface_swigregister(StokesBlockKSPInterface)
class KSP_COMMON(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    st_sle = property(_Solvers.KSP_COMMON_st_sle_get, _Solvers.KSP_COMMON_st_sle_set)
    mg = property(_Solvers.KSP_COMMON_mg_get, _Solvers.KSP_COMMON_mg_set)
    DIsSym = property(_Solvers.KSP_COMMON_DIsSym_get, _Solvers.KSP_COMMON_DIsSym_set)
    preconditioner = property(_Solvers.KSP_COMMON_preconditioner_get, _Solvers.KSP_COMMON_preconditioner_set)
    solver = property(_Solvers.KSP_COMMON_solver_get, _Solvers.KSP_COMMON_solver_set)

    def __init__(self):
        _Solvers.KSP_COMMON_swiginit(self, _Solvers.new_KSP_COMMON())
    __swig_destroy__ = _Solvers.delete_KSP_COMMON

# Register KSP_COMMON in _Solvers:
_Solvers.KSP_COMMON_swigregister(KSP_COMMON)
_StokesBlockKSPInterface_DefaultNew = _Solvers._StokesBlockKSPInterface_DefaultNew
_StokesBlockKSPInterface_New = _Solvers._StokesBlockKSPInterface_New
_StokesBlockKSPInterface_Init = _Solvers._StokesBlockKSPInterface_Init
_StokesBlockKSPInterface_Build = _Solvers._StokesBlockKSPInterface_Build
_StokesBlockKSPInterface_AssignFromXML = _Solvers._StokesBlockKSPInterface_AssignFromXML
_StokesBlockKSPInterface_Initialise = _Solvers._StokesBlockKSPInterface_Initialise
_StokesBlockKSPInterface_SolverSetup = _Solvers._StokesBlockKSPInterface_SolverSetup
_StokesBlockKSPInterface_Solve = _Solvers._StokesBlockKSPInterface_Solve
SBKSP_SetSolver = _Solvers.SBKSP_SetSolver
SBKSP_SetPenalty = _Solvers.SBKSP_SetPenalty
SBKSP_GetPressureIts = _Solvers.SBKSP_GetPressureIts
SBKSP_GetStokesOperators = _Solvers.SBKSP_GetStokesOperators
bsscr_writeMat = _Solvers.bsscr_writeMat
bsscr_writeVec = _Solvers.bsscr_writeVec

