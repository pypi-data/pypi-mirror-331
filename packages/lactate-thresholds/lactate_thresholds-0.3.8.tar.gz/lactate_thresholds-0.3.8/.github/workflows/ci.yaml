name: CI

on:
  push:
    branches:
      - "**"
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Repository checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "0.5.7"

      - name: Set up Python
        run: uv python install

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Run ruff checks
        run: uv run ruff check

      - name: Run ruff formatting
        run: uv run ruff format --check

      - name: Run tests
        run: uv run pytest tests

  version_tag:
    needs:
      - test
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag_action.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}
          fetch-depth: "0"
      - name: Bump version and push tag
        id: tag_action
        uses: anothrNick/github-tag-action@1.71.0
        env:
          WITH_V: true
          PRERELEASE: ${{ github.ref != 'refs/heads/main' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRERELEASE_SUFFIX: pre
          RELEASE_BRANCHES: main
          DEFAULT_BUMP: patch

  build_and_publish:
    name: "Build and Publish to TestPyPi"
    runs-on: ubuntu-latest
    needs:
      - version_tag
    permissions:
      id-token: write
    steps:
      - name: Repository checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "0.5.7"

      - name: Set up Python
        run: uv python install

      - name: Write version tag to pyproject.toml
        run: uvx --from=toml-cli toml set --toml-path=pyproject.toml project.version ${{ needs.version_tag.outputs.new_tag }}

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Build the project
        run: uv build

      - name: Publish to TestPyPi
        run: uv publish --publish-url https://test.pypi.org/legacy/

      - name: Publish to PyPi
        if: github.event.repository.fork == false && github.ref =='refs/heads/main'
        run: uv publish --publish-url https://upload.pypi.org/legacy/
