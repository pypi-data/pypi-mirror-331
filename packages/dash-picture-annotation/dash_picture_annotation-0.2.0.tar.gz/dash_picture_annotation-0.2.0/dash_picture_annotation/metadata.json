{"src/lib/components/DashPictureAnnotation.react.js":{"description":"DashPictureAnnotation is a Dash porting version for the React component:\n`react-picture-annotation/ReactPictureAnnotation`.\n\nThis component provides a annotator that allows users to create, modify, or delete\nthe annotation information for a specific picture. This dash version has been\nupgraded by adding the following features:\n1. Responsive size with respect to the parent component.\n2. Annotation type specified by a selector rather than an input box.\n3. Only trigger the data update when the mouse is released.\n4. Extensive functionalities for fine-grained customization of colors.\n5. Disabling the annotator by a flag.\n6. Setting a lower boundary of the annotation size to prevent small annotations\n   created by mistake.","displayName":"DashPictureAnnotation","methods":[],"props":{"id":{"type":{"name":"string"},"required":false,"description":"The ID used to identify this component in Dash callbacks."},"class_name":{"type":{"name":"string"},"required":false,"description":"The css-class of the component. Use ` ` to separate different names. Often used\nwith CSS to style elements with common properties."},"style":{"type":{"name":"object"},"required":false,"description":"The css-styles which will override styles of the component container.","defaultValue":{"value":"{height: \"60vh\"}","computed":false}},"style_annotation":{"type":{"name":"union","value":[{"name":"string"},{"name":"shape","value":{"padding":{"name":"number","description":"Shape style: text padding.","required":false},"fontSize":{"name":"number","description":"Shape style: text font size.","required":false},"fontColor":{"name":"string","description":"Shape style: text font color.","required":false},"fontBackground":{"name":"string","description":"Shape style: text background color.","required":false},"fontFamily":{"name":"string","description":"Shape style: text font name.","required":false},"lineWidth":{"name":"number","description":"Shape style: stroke width.","required":false},"shapeBackground":{"name":"string","description":"Shape style: background color in the middle of the marker.","required":false},"shapeStrokeStyle":{"name":"string","description":"Shape style: shape stroke color.","required":false},"shadowBlur":{"name":"number","description":"Shape style: stroke shadow blur.","required":false},"shapeShadowStyle":{"name":"string","description":"Shape style: shape shadow color.","required":false},"transformerBackground":{"name":"string","description":"Shape style: color of the scalable dots around the selected box.","required":false},"transformerSize":{"name":"number","description":"Shape style: size of the scalable dots around the selected box.","required":false}}}]},"required":false,"description":"The css-styles of the annotation marker (box).\nIf this value is specified as a string, the string will be parsed as the default\ncolor of the annotation boxes."},"colors":{"type":{"name":"objectOf","value":{"name":"string"}},"required":false,"description":"A dictionary of colors. The keys and the values represent the annotation name\n(specified by the `comment` property of `data`) and the color string,\nrespectively.\nThis method is used for specifying the annotation colors manually. It has a\nhigher priority compared to `is_color_dynamic`."},"image":{"type":{"name":"string"},"required":false,"description":"The URL to the image to be currently displayed on the annotator. The usage is\nsimilar to the property of the HTML image tag: `<img src={...}>`."},"data":{"type":{"name":"exact","value":{"timestamp":{"name":"number","description":"The time stamp of the current data.\nThis value is used for identify the version of the data. It can also notify\ndash that the callback should be fired when this value changes.","required":false},"data":{"name":"arrayOf","value":{"name":"shape","value":{"id":{"name":"string","description":"The ID of the annotation item. It is only used for locating which annotation\nitem is selected by users.","required":false},"mark":{"name":"exact","value":{"x":{"name":"number","description":"The X (horizontal) position of the upper left corner.","required":false},"y":{"name":"number","description":"The Y (vertical) position of the upper left corner.","required":false},"width":{"name":"number","description":"The width of the annotation item.","required":false},"height":{"name":"number","description":"The height of the annotation item.","required":false},"type":{"name":"enum","value":[{"value":"\"RECT\"","computed":false}],"description":"The shape of the annotation item. Currently, we only support \"RECT\".","required":false}},"description":"The bounding box information of the annotation item.","required":false},"comment":{"name":"string","description":"The text comment on this annotation item. Typically, this value is specified\nby the type of the label.","required":false}}},"description":"The body of the data. Returned from the React annotation data.","required":false}}},"required":false,"description":"The annotation data. This value is a sequence of annotation items. Each item\ncontain the positional information and the annotation comment (the object type).\nThis value will can be updated by callbacks or user operations on the annotator."},"options":{"type":{"name":"union","value":[{"name":"arrayOf","value":{"name":"exact","value":{"label":{"name":"string","description":"Label (displayed text) of the option.","required":true},"value":{"name":"any","description":"The value of the option which will be applied to the annotation data.","required":true},"disabled":{"name":"bool","description":"A flag. If specified, this option item will be not selectable.","required":false}}}},{"name":"arrayOf","value":{"name":"union","value":[{"name":"string"},{"name":"number"},{"name":"bool"}]}},{"name":"object"},{"name":"enum","value":[{"value":"null","computed":false}]}]},"required":false,"description":"The available options of the annotator. The usage is like the selector component\n`dcc.Dropdown(options=...)`. Each item represents an available choice of the\nannotation type.\nIf this value is empty, will use a input box that allows users to specify any\ntype names."},"selected_id":{"type":{"name":"union","value":[{"name":"string"},{"name":"enum","value":[{"value":"null","computed":false}]}]},"required":false,"description":"The ID of the currently selected annotation.\nThis property is read-only. It will be automatically set when users select an\nannotation. A valid ID is a string. When no annotation is selected, this property\nreturns `None`."},"placeholder_input":{"type":{"name":"string"},"required":false,"description":"The placeholder text when the editor is the input box (the property `options` is\nempty).","defaultValue":{"value":"\"Input tag here\"","computed":false}},"placeholder_dropdown":{"type":{"name":"string"},"required":false,"description":"The placeholder text when the editor is the dropdown component (the property\n`options` contains valid items).","defaultValue":{"value":"\"Select a tag\"","computed":false}},"clearable_dropdown":{"type":{"name":"bool"},"required":false,"description":"A flag. Set it to allow the annotation comment to be cleared when the dropdown\nbox is being used.","defaultValue":{"value":"false","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"A flag for disabling the annotator (make unclickable).","defaultValue":{"value":"false","computed":false}},"is_color_dynamic":{"type":{"name":"bool"},"required":false,"description":"A flag. If this flag is turned on, will make the color of each annotation box\ndynamically calculated based on the text of the annotation. An annotation box\nwithout a text comment will not be influenced.","defaultValue":{"value":"false","computed":false}},"init_scale":{"type":{"name":"union","value":[{"name":"number"},{"name":"exact","value":{"scale":{"name":"number","description":"The scale related to the initial scale of the annotated image. If not\nspecified, will use `1.0`.","required":false},"offset_x":{"name":"number","description":"The relative X offset. If not specified, will use `0.5` (center of the width).","required":false},"timestamp":{"name":"number","description":"The relative Y offset. If not specified, will use `0.5` (center of the height).","required":false}}}]},"required":false,"description":"The initial image scale. This value can only be configured by users. The scaling\nreflected by the wheel event will not influence this value. Note that this value\nneeds to be updated by a different value to make it take effect.","defaultValue":{"value":"1.0","computed":false}},"size_minimal":{"type":{"name":"union","value":[{"name":"number"},{"name":"shape","value":{"width":{"name":"number","description":"Requirement of the minimal width of an annotation.","required":false},"height":{"name":"number","description":"Requirement of the minimal height of an annotation.","required":false}}}]},"required":false,"description":"The requirement of the minimal annotation size. Any newly created annotation with\na size smaller than this size will be dropped.\nIf this value is configured as a scalar, will use it for both `width` and `height`.\nIf any of the value is not set or configured as invalid values, will use `0`.","defaultValue":{"value":"{\n  width: 0,\n  height: 0,\n}","computed":false}},"loading_state":{"type":{"name":"shape","value":{"is_loading":{"name":"bool","description":"Determines if the component is loading or not","required":false},"prop_name":{"name":"string","description":"Holds which property is loading","required":false},"component_name":{"name":"string","description":"Holds the name of the component that is loading","required":false}}},"required":false,"description":"Object that holds the loading state object coming from dash-renderer."},"setProps":{"type":{"name":"func"},"required":false,"description":"Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."}}}}