Metadata-Version: 2.2
Name: dakaraplayer
Version: 1.9.0
Summary: Media player for the Dakara Project
Author-email: Flore <flore.love@gmail.com>, Neraste <neraste.herr10@gmail.com>
License: The MIT License (MIT)
        
        Copyright (c) 2025 Dakara Project
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/DakaraProject/dakara-player
Project-URL: Repository, https://github.com/DakaraProject/dakara-player.git
Project-URL: Issues, https://github.com/DakaraProject/dakara-player/issues
Project-URL: Changelog, https://github.com/DakaraProject/dakara-player/blob/master/CHANGELOG.md
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Operating System :: OS Independent
Classifier: Environment :: X11 Applications
Classifier: Environment :: Win32 (MS Windows)
Classifier: Intended Audience :: End Users/Desktop
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: Jinja2<3.2.0,>=3.1.1
Requires-Dist: dakarabase<2.2.0,>=2.1.0
Requires-Dist: filetype<1.3.0,>=1.2.0
Requires-Dist: packaging<25.0,>=24.2
Requires-Dist: python-mpv-jsonipc<1.3.0,>=1.2.0
Requires-Dist: python-vlc!=3.0.12117,<3.1.0,>=3.0.21203
Provides-Extra: dev
Requires-Dist: black<25.2.0,>=25.1.0; extra == "dev"
Requires-Dist: codecov<2.2.0,>=2.1.13; extra == "dev"
Requires-Dist: func_timeout<4.4.0,>=4.3.5; extra == "dev"
Requires-Dist: isort<6.1.0,>=6.0.0; extra == "dev"
Requires-Dist: pdoc<15.1.0,>=15.0.1; extra == "dev"
Requires-Dist: pre-commit<4.2.0,>=4.1.0; extra == "dev"
Requires-Dist: pytest-cov<6.1.0,>=6.0.0; extra == "dev"
Requires-Dist: pytest<8.4.0,>=8.3.4; extra == "dev"
Requires-Dist: ruff<0.10.0,>=0.9.6; extra == "dev"

# Dakara player

<!-- Badges are displayed for the develop branch -->
[![PyPI version](https://badge.fury.io/py/dakaraplayer.svg)](https://pypi.python.org/pypi/dakaraplayer/)
[![PyPI Python versions](https://img.shields.io/pypi/pyversions/dakaraplayer.svg)](https://pypi.python.org/pypi/dakaraplayer/)
[![License](https://img.shields.io/github/license/mashape/apistatus.svg)](https://pypi.python.org/pypi/dakaraplayer/)
[![Tests status](https://github.com/DakaraProject/dakara-player/actions/workflows/ci.yml/badge.svg)](https://github.com/DakaraProject/dakara-player/actions/workflows/ci.yml)
[![Code coverage status](https://codecov.io/gh/DakaraProject/dakara-player/branch/develop/graph/badge.svg)](https://codecov.io/gh/DakaraProject/dakara-player)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)
[![Imports: isort](https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&labelColor=ef8336)](https://pycqa.github.io/isort/)

Interface between the Dakara server and a media player, for the Dakara project.

## Installation

To install Dakara completely, you have to get all the parts of the project.
Installation guidelines are provided over here:

* [Dakara server](https://github.com/DakaraProject/dakara-server/);
* [Dakara feeder](https:://github.com/DakaraProject/dakara-feeder).

### System requirements

* Python3, for the magic to take place (supported versions: see above).

At least one of the following players:

* [VLC](https://www.videolan.org/vlc/) (supported version: 3.0.0 and higher, note that versions 3.0.13 to 3.0.16 cannot be used);
* [mpv](https://mpv.io/) (supported version: 0.27 and higher).

For 64 bits operating systems, you must install the equivalent version of the requirements. Linux and Windows are supported.

### Virtual environment

It is strongly recommended to use the Dakara player within a virtual environment.

### Install

Please ensure you have a recent enough version of `setuptools`:

```sh
pip install --upgrade "setuptools>=46.4.0"
```

Install the package with:

```sh
pip install dakaraplayer
```

If you have downloaded the repo, you can install the package directly with:

```sh
pip install .
```

## Usage

The package provides the `dakara-player play` command which runs the player:

```sh
dakara-player play
# or
python -m dakara_player play
```

One instance of the Dakara server should be running.

For more help:

```sh
dakara-player -h
# or
python -m dakara_player -h
```

Before calling the command, you should create a config file with:

```sh
dakara-player create-config
# or
python -m dakara_player create-config
```

and complete it with your values. The file is stored in your user space: `~/.config/dakara` on Linux, or `$APPDATA\DakaraProject\dakara` on Windows.

### Configuration

The configuration is created with the previously cited command. Several aspect of the player can be configured with this file. Please check with the file documentation.

Authentication to the server can only be done with a player token that can be generated and copied from the web client. Please note that only a playlist manager can generate such a player token.

### Customization

The different text screens used when the player is idle, or before a song, can be customized, both for the background and the text template.
The program looks for custom files at startup in the user directory: `~/.local/share/dakara/player` on Linux or `$APPDATA\DakaraProject\dakara\player` on Windows.
Backgrounds are located in the `backgrounds` subfolder, and text templates in the `templates` subfolder.
File names can be modified in the config file, see `player.templates` and `player.backgrounds`.

You can dump the default backgrounds and templates in the user directory as a starter with:

```sh
dakara-player create-resources
# or
python -m dakara_player create-resources
```

## Development

Please read the [developers documentation](CONTRIBUTING.md).
